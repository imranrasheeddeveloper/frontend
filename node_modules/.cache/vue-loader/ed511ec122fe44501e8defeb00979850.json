{"remainingRequest":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/views/table/bs-table/client/editClientView.vue?vue&type=template&id=4fe81a08&","dependencies":[{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/views/table/bs-table/client/editClientView.vue","mtime":1659074494000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
{"remainingRequest":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/views/apps/todo/TodoTaskHandlerSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/views/apps/todo/TodoTaskHandlerSidebar.vue","mtime":1658909892000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/babel-loader/lib/index.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TodoTaskHandlerSidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"TodoTaskHandlerSidebar.vue","sourceRoot":"src/views/apps/todo","sourcesContent":["<template>\n  <div>\n    <b-sidebar\n      id=\"sidebar-task-handler\"\n      sidebar-class=\"sidebar-lg\"\n      :visible=\"isTaskHandlerSidebarActive\"\n      bg-variant=\"white\"\n      shadow\n      backdrop\n      no-header\n      right\n      @change=\"(val) => $emit('update:is-task-handler-sidebar-active', val)\"\n      @hidden=\"clearForm\"\n    >\n      <template #default=\"{ hide }\">\n        <!-- Header -->\n        <div class=\"d-flex justify-content-between align-items-center content-sidebar-header px-2 py-1\">\n          <b-button\n            v-if=\"taskLocal.id\"\n            size=\"sm\"\n            :variant=\"taskLocal.isCompleted ? 'outline-success' : 'outline-secondary'\"\n            @click=\"updateThisTaskCompleted(taskLocal); hide(); $emit('fetch-task');\"\n          >\n            {{ taskLocal.isCompleted ? 'Completed' : 'Mark Complete' }}\n          </b-button>\n          <h5\n            v-else\n            class=\"mb-0\"\n          >\n            Add Task\n          </h5>\n          <div>\n            <feather-icon\n              v-if=\"taskLocal.id && isOwner(taskLocal)\"\n              icon=\"TrashIcon\"\n              class=\"cursor-pointer\"\n              @click=\" deleteTask(taskLocal); hide(); $emit('fetch-task');\"\n            />\n            <feather-icon\n              class=\"ml-1 cursor-pointer\"\n              icon=\"XIcon\"\n              size=\"16\"\n              @click=\"hide\"\n            />\n          </div>\n        </div>\n\n        <!-- Body -->\n        <validation-observer\n         \n          ref=\"refFormObserver\"\n        >\n\n          <!-- Form -->\n          <b-form\n            class=\"p-2\"\n            @submit.prevent\n            @reset.prevent=\"reset_form\"\n          >\n\n            <!-- Title -->\n            <validation-provider\n              #default=\"validationContext\"\n              name=\"Title\"\n              rules=\"required\"\n            >\n              <b-form-group\n                label=\"Title\"\n                label-for=\"task-title\"\n              >\n                <b-form-input\n                  id=\"task-title\"\n                  v-model=\"taskLocal.title\"\n                  autofocus\n                  :state=\"getValidationState(validationContext)\"\n                  trim\n                  placeholder=\"Task Title\"\n                />\n\n                <b-form-invalid-feedback>\n                  {{ validationContext.errors[0] }}\n                </b-form-invalid-feedback>\n              </b-form-group>\n            </validation-provider>\n\n            <!-- Assignee -->\n            <b-form-group\n              label=\"Assignee\"\n              label-for=\"assignee\"\n            >\n\n              <v-select\n                v-model=\"taskLocal.assignTo\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"AllAssignee\"\n                label=\"name\"\n                class=\"assignee-selector\"\n                input-id=\"assignee\"\n                :reduce=\"name => name.id\" \n              >\n\n                <template #option=\"{ name }\">\n                  <b-avatar\n                    size=\"26\"\n                    :variant=\"`light-${resolveAvatarVariant(taskLocal.tag)}`\"\n                    :text=\"avatarText(name)\"\n                  />\n                  <span class=\"ml-50 d-inline-block align-middle\"> {{ name }}</span>\n                </template>\n\n                <template #selected-option=\"{ avatar, name }\">\n                  <b-avatar\n                    size=\"26\"\n                    :src=\"avatar\"\n                    :variant=\"`light-${resolveAvatarVariant(taskLocal.tag)}`\"\n                    :text=\"avatarText(name)\"\n                  />\n\n                  <span class=\"ml-50 d-inline-block align-middle\"> {{ name }}</span>\n                </template>\n              </v-select>\n            </b-form-group>\n\n            <!-- due Date -->\n            <validation-provider\n              #default=\"validationContext\"\n              name=\"Due Date\"\n              rules=\"required\"\n            >\n\n              <b-form-group\n                label=\"Due Date\"\n                label-for=\"due-date\"\n              >\n                <flat-pickr\n                  v-model=\"taskLocal.dueDate\"\n                  class=\"form-control\"\n                />\n                <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\n                  {{ validationContext.errors[0] }}\n                </b-form-invalid-feedback>\n              </b-form-group>\n            </validation-provider>\n\n            <!--Tag -->\n            <b-form-group\n              label=\"Tag\"\n              label-for=\"tag\"\n            >\n              <v-select\n                v-model=\"taskLocal.tag\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"tagOptions\"\n                :reduce=\"option => option.value\"\n                input-id=\"tags\"\n              />\n            </b-form-group>\n\n            <!-- Description -->\n            <b-form-group\n              label=\"Description\"\n              label-for=\"task-description\"\n            >\n              <quill-editor\n                id=\"quil-content\"\n                v-model=\"taskLocal.description\"\n                :options=\"editorOption\"\n                class=\"border-bottom-0\"\n              />\n              <div\n                id=\"quill-toolbar\"\n                class=\"d-flex justify-content-end border-top-0\"\n              >\n                <!-- Add a bold button -->\n                <button class=\"ql-bold\" />\n                <button class=\"ql-italic\" />\n                <button class=\"ql-underline\" />\n                <button class=\"ql-align\" />\n                <button class=\"ql-link\" />\n              </div>\n            </b-form-group>\n\n            <!-- Form Actions -->\n            <div class=\"d-flex mt-2\" v-if=\"taskLocal.id && isOwner(taskLocal)\">\n              <b-button\n                v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n                variant=\"primary\"\n                class=\"mr-2\"\n                type=\"submit\"\n                @click=\"submitTask(); hide(); $emit('fetch-task');\"\n                :disabled=\"isSubmitting\"\n              >\n          <!-- <span v-if=\"isSubmitting\">Please Wait</span> -->\n          Update\n              </b-button>\n              <b-button\n                v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\n                type=\"reset\"\n                variant=\"outline-secondary\"\n              >\n                Reset\n              </b-button>\n            </div>\n\n\n              <div class=\"d-flex mt-2\" v-if=\"!taskLocal.id\">\n              <b-button\n                v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n                variant=\"primary\"\n                class=\"mr-2\"\n                type=\"submit\"\n                @click=\"submitTask(); hide(); $emit('fetch-task');\"\n                :disabled=\"isSubmitting\"\n              >\n          <!-- <span v-if=\"isSubmitting\">Please Wait</span> -->\n                  Add\n                </b-button>\n              <b-button\n                v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\n                type=\"reset\"\n                variant=\"outline-secondary\"\n              >\n                Reset\n              </b-button>\n            </div>\n\n\n          </b-form>\n        </validation-observer>\n      </template>\n    </b-sidebar>\n  </div>\n</template>\n\n<script>\nimport {\n  BSidebar, BForm, BFormGroup, BFormInput, BAvatar, BButton, BFormInvalidFeedback,\n} from 'bootstrap-vue'\nimport vSelect from 'vue-select'\nimport flatPickr from 'vue-flatpickr-component'\nimport Ripple from 'vue-ripple-directive'\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport { required, email, url } from '@validations'\nimport { avatarText } from '@core/utils/filter'\nimport formValidation from '@core/comp-functions/forms/form-validation'\nimport { toRefs } from '@vue/composition-api'\nimport { quillEditor } from 'vue-quill-editor'\nimport useTaskHandler from './useTaskHandler'\nimport axios from '@axios'  \nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\n\n\n\nexport default {\n  components: {\n    // BSV\n    BButton,\n    BSidebar,\n    BForm,\n    BFormGroup,\n    BFormInput,\n    BAvatar,\n    BFormInvalidFeedback,\n\n    // 3rd party packages\n    vSelect,\n    flatPickr,\n    quillEditor,\n\n    // Form Validation\n    ValidationProvider,\n    ValidationObserver,\n  },\n  directives: {\n    Ripple,\n  },\n  model: {\n    prop: 'isTaskHandlerSidebarActive',\n    event: 'update:is-task-handler-sidebar-active',\n  },\n  props: {\n    isTaskHandlerSidebarActive: {\n      type: Boolean,\n      required: true,\n    },\n    task: {\n      type: Object,\n      required: true,\n    },\n    clearTaskData: {\n      type: Function,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      isSubmitting: false,\n\n      required,\n      email,\n      url,\n      AllAssignee: [],\n\n      formValues: {\n        title: '',\n        description: '',\n        isCompleted: '',\n        isDeleted: '',\n        tag: '',\n        isImportant: '',\n        dueDate: '',\n        name: '',\n        type: '',\n\n\n\n\n\n        \n\n      },\n    }\n  },\n    mounted() {\n// this.formValues = this.taskLocal;\nthis.getAllAssignee();\n    \n\n  },\n    methods: {\n\n      isOwner(task){\n        if(task.systemOwner == task.ownerId){\n          return true;\n        }\n        return false;\n      },\n      \n\n    reset_form() {\n    console.log(this.formValues);\n\n    Object.entries(this.formValues).forEach(([key, value]) => { {\n          this.formValues[key] = '';\n        }\n      \n    });\n        Object.entries(this.taskLocal).forEach(([key, value]) => { {\n          this.taskLocal[key] = '';\n        }\n      \n    });\n\n    console.log(this.formValues);\n  },\n\n    submitTask() {\n      this.isSubmitting = true;\n\n      this.formValues = this.taskLocal;\n      console.log('formvalues', this.formValues);\n      // return ;\n      \n\n      // this.formValues.supplier_types = this.items.map(a => a.type);\n      // this.formValues.supplier_types = [...new Set(this.formValues.supplier_types)];\n\n      axios.post('/addTask',\n        this.formValues).then(response => {\n        if (response.data.hasOwnProperty('success')) {\n          if (response.data.success === true) {\n            console.log(response.data.data)\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: response.data.message,\n                    icon: 'EditIcon',\n                    variant: 'success',\n                  },\n                })                \n                this.reset_form();\n            this.isSubmitting = false;\n          } else {\n            this.isSubmitting = false;\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: response.data.message,\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n              },\n            })\n          }\n        } else {\n          this.isSubmitting = false\n\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: 'Something went wrong, try again later',\n            },\n          })\n        }\n      }).catch(error => {\n        console.error(error)\n      })\n    },\n\n\n    deleteTask(task) {\n      this.isSubmitting = true;\n      console.log('delete', task.id);\n      // return;\n      \n\n      // this.formValues = this.taskLocal;\n      // console.log('formvalues', this.formValues);\n      // // return ;\n      \n\n      // // this.formValues.supplier_types = this.items.map(a => a.type);\n      // // this.formValues.supplier_types = [...new Set(this.formValues.supplier_types)];\n\n      axios.post('/deleteTask',\n        {id:task.id}).then(response => {\n        if (response.data.hasOwnProperty('success')) {\n          if (response.data.success === true) {\n            console.log(response.data.data)\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: response.data.message,\n                    icon: 'EditIcon',\n                    variant: 'success',\n                  },\n                })                \n                this.reset_form();\n            this.isSubmitting = false;\n          } else {\n            this.isSubmitting = false;\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: response.data.message,\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n              },\n            })\n          }\n        } else {\n          this.isSubmitting = false\n\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: 'Something went wrong, try again later',\n            },\n          })\n        }\n      }).catch(error => {\n        console.error(error)\n      })\n    },\n\n\n    getAllAssignee() {\n      axios.get('/getAllAssignee', {\n      }).then(response => {\n        if (response.data.hasOwnProperty('success')) {\n          if (response.data.success === true) {\n            /* console.log(response.data.data); */\n            this.AllAssignee = response.data.data\n\n            console.log('All Assignees Fetched')\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        } else {\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: 'Something went wrong, try again later',\n            },\n          })\n        }\n      }).catch(error => {\n        console.error(error)\n      })\n    },\n\n        updateThisTaskCompleted(taskData){\n      // this.fetchTasks()\n      console.log('updated task method',taskData);\n      console.log('isCompleted',taskData.isCompleted);\n\n        if(taskData.isCompleted == 0){\n          taskData.isCompleted = 1;\n        }\n        else{\n          taskData.isCompleted = 0;\n\n        }\n      console.log('isCompleted',taskData.isCompleted);\n\n      \n\n\n      // return ;\n            axios.post('/isCompleteTask',{\n                isCompleted: taskData.isCompleted,\n                id: taskData.id,\n            }\n        ).then(response => {\n        if (response.data.hasOwnProperty('success')) {\n          if (response.data.success === true) {\n            console.log(response.data.data)\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: response.data.message,\n                    icon: 'EditIcon',\n                    variant: 'success',\n                  },\n                })                \n            this.isSubmitting = false;\n          } else {\n            this.isSubmitting = false;\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: response.data.message,\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n              },\n            })\n          }\n        } else {\n          this.isSubmitting = false\n\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: 'Something went wrong, try again later',\n            },\n          })\n        }\n      }).catch(error => {\n        console.error(error)\n      })\n\n    },\n\n\n\n\n    },\n  setup(props, { emit }) {\n    const {\n      taskLocal,\n      resetTaskLocal,\n\n      // UI\n      assigneeOptions,\n      onSubmit,\n      tagOptions,\n      resolveAvatarVariant,\n    } = useTaskHandler(toRefs(props), emit)\n\n    const {\n      refFormObserver,\n      getValidationState,\n      resetForm,\n      clearForm,\n    } = formValidation(resetTaskLocal, props.clearTaskData)\n\n    const editorOption = {\n      modules: {\n        toolbar: '#quill-toolbar',\n      },\n      placeholder: 'Write your description',\n    }\n\n    return {\n      // Add New\n      taskLocal,\n      onSubmit,\n      assigneeOptions,\n      tagOptions,\n\n      // Form Validation\n      resetForm,\n      clearForm,\n      refFormObserver,\n      getValidationState,\n\n      // UI\n      editorOption,\n      resolveAvatarVariant,\n\n      // Filter/Formatter\n      avatarText,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-select.scss';\n@import '@core/scss/vue/libs/vue-flatpicker.scss';\n@import '@core/scss/vue/libs/quill.scss';\n</style>\n\n<style lang=\"scss\" scoped>\n@import '~@core/scss/base/bootstrap-extended/include';\n\n.assignee-selector {\n  ::v-deep .vs__dropdown-toggle {\n  padding-left: 0;\n  }\n}\n\n#quil-content ::v-deep {\n  > .ql-container {\n    border-bottom: 0;\n  }\n\n  + #quill-toolbar {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    border-bottom-left-radius: $border-radius;\n    border-bottom-right-radius: $border-radius;\n  }\n}\n</style>\n"]}]}
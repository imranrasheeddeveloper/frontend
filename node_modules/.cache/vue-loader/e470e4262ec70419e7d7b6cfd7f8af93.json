{"remainingRequest":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/views/table/bs-table/purchasingCenter/purchaseTableView.vue?vue&type=template&id=ceee8930&","dependencies":[{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/views/table/bs-table/purchasingCenter/purchaseTableView.vue","mtime":1658918742000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
{"remainingRequest":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Desktop/new-splitur/frontend/src/views/table/bs-table/groups/edit_group.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/src/views/table/bs-table/groups/edit_group.vue","mtime":1661183085580},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/css-loader/dist/cjs.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/postcss-loader/src/index.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/sass-loader/dist/cjs.js","mtime":1658911444000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIkBjb3JlL3Njc3MvdnVlL2xpYnMvdnVlLWF1dG9zdWdnZXN0LnNjc3MiOwo="},{"version":3,"sources":["edit_group.vue"],"names":[],"mappingslBA","file":"edit_group.vue","sourceRoot":"src/views/table/bs-table/groups","sourcesContent":["<template>\n  <b-form @submit.prevent>\n    <b-row>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"ID\"\n          label-for=\"v-id\"\n        >\n          <b-form-input\n            id=\"v-id'\"\n            v-model=\"formValues.id\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Group Title\"\n          label-for=\"v-group_title\"\n        >\n          <b-form-input\n            id=\"v-group_title'\"\n            v-model=\"formValues.group_title\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Slots\"\n          label-for=\"v-slots\"\n        >\n          <b-form-input\n            id=\"v-slots'\"\n            v-model=\"formValues.slots\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Slots\"\n          label-for=\"v-slots\"\n        >\n          <b-form-input\n            id=\"v-slots'\"\n            v-model=\"formValues.slots\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Slots\"\n          label-for=\"v-slots\"\n        >\n          <b-form-input\n            id=\"v-slots'\"\n            v-model=\"formValues.slots\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Slots\"\n          label-for=\"v-slots\"\n        >\n          <b-form-input\n            id=\"v-slots'\"\n            v-model=\"formValues.slots\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Slots\"\n          label-for=\"v-slots\"\n        >\n          <b-form-input\n            id=\"v-slots'\"\n            v-model=\"formValues.slots\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"email\"\n          label-for=\"v-email\"\n        >\n          <b-form-input\n            id=\"v-email'\"\n            v-model=\"formValues.email\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"password\"\n          label-for=\"v-password\"\n        >\n          <b-form-input\n            id=\"v-slots'\"\n            v-model=\"formValues.password\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"visibility\"\n          label-for=\"v-visibility\"\n        >\n          <b-form-input\n            id=\"v-slots'\"\n            v-model=\"formValues.visibility\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"group_id\"\n          label-for=\"v-group_id\"\n        >\n          <b-form-input\n            id=\"v-group_id'\"\n            v-model=\"formValues.group_id\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"user_id\"\n          label-for=\"v-user_id\"\n        >\n          <b-form-input\n            id=\"v-user_id'\"\n            v-model=\"formValues.user_id\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"total_members\"\n          label-for=\"v-total_members\"\n        >\n          <b-form-input\n            id=\"v-total_members'\"\n            v-model=\"formValues.total_members\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"plan_id\"\n          label-for=\"v-plan_id\"\n        >\n          <b-form-input\n            id=\"v-plan_id'\"\n            v-model=\"formValues.plan_id\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"title\"\n          label-for=\"v-title\"\n        >\n          <v-select\n            id=\"v-title\"\n            v-model=\"formValues.title\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"categories_list\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"sub_cat_title\"\n          label-for=\"v-sub_cat_title\"\n        >\n          <v-select\n            id=\"v-sub_cat_title\"\n            v-model=\"formValues.sub_cat_title\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"sub_category_list\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"name\"\n          label-for=\"v-name\"\n        >\n          <v-select\n            id=\"v-pouplar\"\n            v-model=\"formValues.name\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"plan_list\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <!-- submit and reset -->\n      <b-col md=\"12\">\n        <b-button\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          type=\"submit\"\n          variant=\"primary\"\n          class=\"mr-1\"\n          :disabled=\"isSubmitting\"\n          @click=\"Submit\"\n        >\n          <b-spinner\n            v-if=\"isSubmitting\"\n            small\n          />\n          <span v-if=\"isSubmitting\">Please Wait</span>\n\n          <span v-if=\"!isSubmitting\">Submit</span>\n        </b-button>\n      </b-col>\n    </b-row>\n  </b-form>\n</template>\n\n<script>\nimport {\n  BRow,\n  BCol,\n  BFormGroup,\n  BFormInput,\n  BFormCheckbox,\n  BForm,\n  BButton,\n  BFormDatepicker,\n  BCard,\n  BSpinner,\n  BFormFile,\n  BFormTextarea,\n  BInputGroupAppend,\n  BInputGroup,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport axios from '@axios'\nimport { heightTransition } from '@core/mixins/ui/transition'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\nimport vSelect from 'vue-select'\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormInput,\n    BFormCheckbox,\n    BForm,\n    BButton,\n    BFormDatepicker,\n    BCard,\n    BSpinner,\n    BFormFile,\n    BFormTextarea,\n    BInputGroupAppend,\n    BInputGroup,\n    vSelect,\n  },\n  directives: {\n    Ripple,\n  },\n\n  mixins: [heightTransition],\n\n  data() {\n    return {\n      options: {\n        date: {\n          date: true,\n          delimiter: '-',\n          datePattern: ['Y', 'm', 'd'],\n        },\n      },\n\n      isSubmitting: false,\n\n      formValues: {\n        id: '',\n        group_title: '',\n        slots: '',\n        cost_per_member: '',\n        email: '',\n        password: '',\n        visibility: '',\n        group_id: '',\n        user_id: '',\n        sub_category_id: '',\n        category_id: '',\n        total_members: '',\n        plan_id: '',\n        status: '',\n        plans_id: '',\n        createdAt: '',\n        updatedAt: '',\n        sub_cat_title: '',\n        title: '',\n        name: '',\n      },\n      categories_list: [],\n      sub_category_list: [],\n      plan_list: [],\n    }\n  },\n  mounted() {\n    this.getGroupDetails(this.$route.params.id)\n    this.get_cat_list()\n    this.initTrHeight()\n  },\n  created() {\n    window.addEventListener('resize', this.initTrHeight)\n  },\n  destroyed() {\n    window.removeEventListener('resize', this.initTrHeight)\n  },\n  methods: {\n    Submit() {\n      this.isSubmitting = true\n      console.log('submit', this.formValues)\n      if (this.formValues.question === '') {\n        this.isSubmitting = false\n        this.$toast({\n          component: ToastificationContent,\n          position: 'top-right',\n          props: {\n            title: 'Please Enter question',\n            icon: 'AlertCircleIcon',\n            variant: 'danger',\n          },\n        })\n        return\n      }\n      if (this.formValues.answer === '') {\n        this.isSubmitting = false\n        this.$toast({\n          component: ToastificationContent,\n          position: 'top-right',\n          props: {\n            title: 'Please enter answer',\n            icon: 'AlertCircleIcon',\n            variant: 'danger',\n          },\n        })\n        return\n      }\n\n      axios\n        .post(`/faqs/updateFAQs/${this.$route.params.id}`, this.formValues)\n        .then(response => {\n          if (response.data.hasOwnProperty('success')) {\n            if (response.data.success === true) {\n              console.log(response.data.data)\n\n              this.$router.replace('/faqs').then(() => {\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: response.data.message,\n                    icon: 'EditIcon',\n                    variant: 'success',\n                  },\n                })\n              })\n            } else {\n              this.isSubmitting = false\n\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: response.data.message,\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                },\n              })\n            }\n          } else {\n            this.isSubmitting = false\n\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    },\n    getGroupDetails(id) {\n      axios\n        .get(`/groups/group_deatils/${id}`)\n        .then(response => {\n          if (response.data.hasOwnProperty('success')) {\n            if (response.data.success === true) {\n              this.formValues.id = response.data.data.group.id\n              this.formValues.group_title = response.data.data.group.group_title\n              this.formValues.slots = response.data.data.group.slots\n              this.formValues.cost_per_member = response.data.data.group.cost_per_member\n              this.formValues.email = response.data.data.group.email\n              this.formValues.password = response.data.data.group.password\n              this.formValues.visibility = response.data.data.group.visibility\n              this.formValues.group_id = response.data.data.group.group_id\n              this.formValues.user_id = response.data.data.group.user_id\n              this.formValues.total_members = response.data.data.group.total_members\n              this.formValues.plan_id = response.data.data.group.plan_id\n              this.formValues.status = response.data.data.group.status\n              this.formValues.plans_id = response.data.data.group.plans_id\n              this.formValues.sub_cat_title = response.data.data.group.sub_category.sub_cat_title\n              this.formValues.title = response.data.data.group.sub_category.category.title\n              this.formValues.name = response.data.data.plan.name\n              this.formValues.category_id = response.data.data.group.sub_category.category_id\n              this.get_sub_cat_list(this.formValues.category_id)\n              this.get_plans_list(response.data.data.group.sub_category.id)\n            } else {\n              this.isSubmitting = false\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: response.data.message,\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                },\n              })\n            }\n          } else {\n            this.isSubmitting = false\n\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    },\n    get_cat_list() {\n      axios\n        .get('/groups/categories_list')\n        .then(response => {\n          if (response.data.hasOwnProperty('success')) {\n            if (response.data.success === true) {\n              this.categories_list = response.data.data\n            } else {\n              this.isSubmitting = false\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: response.data.message,\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                },\n              })\n            }\n          } else {\n            this.isSubmitting = false\n\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    },\n    get_sub_cat_list(id) {\n      axios\n        .get(`/groups/sub_categories_list/${id}`)\n        .then(response => {\n          if (response.data.hasOwnProperty('success')) {\n            if (response.data.success === true) {\n              this.sub_category_list = response.data.data\n            } else {\n              this.isSubmitting = false\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: response.data.message,\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                },\n              })\n            }\n          } else {\n            this.isSubmitting = false\n\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    },\n    get_plans_list(id) {\n      axios\n        .get(`/groups/plans_list/${id}`)\n        .then(response => {\n          if (response.data.hasOwnProperty('success')) {\n            if (response.data.success === true) {\n              this.plan_list = response.data.data\n            } else {\n              this.isSubmitting = false\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: response.data.message,\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                },\n              })\n            }\n          } else {\n            this.isSubmitting = false\n\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    },\n    initTrHeight() {\n      this.trSetHeight(null)\n      this.$nextTick(() => {\n      })\n    },\n  },\n}\n</script>\n\n<style>\ntextarea {\n  resize: vertical;\n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.hr_divider {\n  border-bottom: 2px solid #82868b;\n}\n</style>\n<style lang=\"scss\">\n@import \"@core/scss/vue/libs/vue-autosuggest.scss\";\n</style>\n"]}]}
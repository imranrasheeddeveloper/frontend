{"remainingRequest":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\my_wallets\\editPattyCashView.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\my_wallets\\editPattyCashView.vue","mtime":1659684793182},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1658911433225},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1658911433727},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1658911433648},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1658911433727}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnRleHRhcmVhIHsKICByZXNpemU6IG5vbmU7Cn0KaW5wdXRbdHlwZT0ibnVtYmVyIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sCmlucHV0W3R5cGU9Im51bWJlciJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHsKICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7CiAgbWFyZ2luOiAwOwp9Ci5ocl9kaXZpZGVyIHsKICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzgyODY4YjsKfQo="},{"version":3,"sources":["editPattyCashView.vue"],"names":[],"mappingsyoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editPattyCashView.vue","sourceRoot":"src/views/table/bs-table/my_wallets","sourcesContent":["<template>\n  <b-form @submit.prevent>\n    <b-row>\n      <!-- @input=\"Type_Change(item)\" -->\n\n      <b-col md=\"6\">\n        <b-form-group label=\"Transaction Type\" label-for=\"'trans_type\">\n          <v-select\n            id=\"'trans_type\"\n            v-model=\"formValues.transaction_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"RequestType\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n            @input=\"Transaction_Type_Change(formValues)\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <label for=\"'v-date\">Date</label>\n        <b-input-group>\n          <cleave\n            id=\"'v-date\"\n            v-model=\"formValues.date\"\n            class=\"form-control\"\n            :raw=\"false\"\n            :options=\"options.date\"\n            placeholder=\"YYYY-MM-DD\"\n          />\n\n          <b-input-group-append>\n            <b-form-datepicker\n              v-model=\"formValues.date\"\n              show-decade-nav\n              button-only\n              right\n              locale=\"en-US\"\n              aria-controls=\"'v-date\"\n            />\n          </b-input-group-append>\n        </b-input-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group label=\"Assign To Category\" label-for=\"'Category\">\n          <v-select\n            id=\"'Category\"\n            v-model=\"formValues.assign_to_category\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"AssignToCategory\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n            @input=\"Type_Change()\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group label=\"Assign To Entity\" label-for=\"'autosuggest__input\">\n          <vue-autosuggest\n            v-model=\"formValues.assign_to_entity\"\n            :suggestions=\"filteredOptions\"\n            :limit=\"10\"\n            :input-props=\"{\n              id: 'autosuggest__input',\n              class: 'form-control',\n              placeholder: 'Search with name or ID',\n            }\"\n            @input=\"onInputChange(formValues)\"\n            @selected=\"assignOwnerField($event)\"\n          >\n            <template slot-scope=\"{ suggestion }\">\n              <span class=\"my-suggestion-item\"\n                >{{ suggestion.item.name }}, {{ suggestion.item.id }}\n              </span>\n            </template>\n          </vue-autosuggest>\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"4\">\n        <b-form-group label=\"Unit Price\" label-for=\"'unit_price\">\n          <b-form-input\n            @scroll.prevent\n            id=\"'unit_price\"\n            v-model.number=\"formValues.unit_price\"\n            type=\"number\"\n            placeholder=\"0.00\"\n            min=\"0\"\n            @input=\"totalAmount(formValues)\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"4\">\n        <b-form-group label=\"Quantity\" label-for=\"'quantity\">\n          <b-form-input\n            @scroll.prevent\n            id=\"'quantity\"\n            v-model.number=\"formValues.quantity\"\n            type=\"number\"\n            placeholder=\"0.00\"\n            min=\"0\"\n            @input=\"totalAmount(formValues)\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"4\">\n        <b-form-group label=\"Total\" label-for=\"'total\">\n          <b-form-input\n            id=\"'total\"\n            v-model.number=\"formValues.total\"\n            type=\"number\"\n            min=\"0\"\n            placeholder=\"0.00\"\n            :readonly=\"Readonly_Total_Amount\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group label=\"Description\" label-for=\"'description\">\n          <b-form-textarea\n            id=\"'description\"\n            v-model=\"formValues.description\"\n            placeholder=\"Write Description's Here..\"\n            rows=\"2\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group label=\"Notes\" label-for=\"'notes\">\n          <b-form-textarea\n            id=\"'notes\"\n            v-model=\"formValues.notes\"\n            placeholder=\"Write Note's Here..\"\n            rows=\"2\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group label=\"Attachment (*).\" label-for=\"'attach\">\n          <b-form-file\n            id=\"'attach\"\n            multiple\n            v-model=\"new_attachment\"\n            accept=\"image/* , .pdf\"\n            placeholder=\"Upload attachment...\"\n            drop-placeholder=\"Drop file here...\"\n            @change=\"imageUpload($event)\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col\n        md=\"6 my-2 border rounded m-0 p-0 text-center\"\n        v-for=\"item in formValues.attachment\"\n        :key=\"item\"\n      >\n        <b-form-group class=\"m-0 p-0\">\n          <a\n            class=\"btn btn-primary mx-2 my-0\"\n            :href=\"base_url + '/' + item\"\n            target=\"_blank\"\n            :title=\"item\"\n            >View file</a\n          >\n          <button\n            :title=\"item\"\n            class=\"btn btn-danger mx-2 my-0\"\n            @click=\"reomveFile(item)\"\n          >\n            Delete file\n          </button>\n        </b-form-group>\n      </b-col>\n      \n\n            <b-col cols=\"6\" v-if=\"show_credit_debit\">\n            <div class=\"d-flex p-1\">\n            <b-form-checkbox class=\"d-flex\" value=\"Credit\" v-model=\"formValues.credit_debit\" name=\"credit_debit\">\n              Credit\n            </b-form-checkbox>\n              <b-form-checkbox class=\"d-flex ml-2 pl-2\" value=\"Debit\" v-model=\"formValues.credit_debit\" name=\"credit_debit\">\n              Debit\n            </b-form-checkbox>\n            </div>\n      </b-col>\n\n      <!-- submit and reset -->\n      <b-col md=\"12\">\n        <b-button\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          type=\"submit\"\n          variant=\"primary\"\n          class=\"mr-1\"\n          :disabled=\"isSubmitting\"\n          @click=\"Submit\"\n        >\n          <b-spinner v-if=\"isSubmitting\" small />\n          <span v-if=\"isSubmitting\">Please Wait</span>\n\n          <span v-if=\"!isSubmitting\">Update</span>\n        </b-button>\n      </b-col>\n    </b-row>\n  </b-form>\n</template>\n\n<script>\nimport {\n  BRow,\n  BCol,\n  BFormGroup,\n  BFormInput,\n  BFormCheckbox,\n  BForm,\n  BButton,\n  BFormDatepicker,\n  BCard,\n  BSpinner,\n  BFormFile,\n  BFormTextarea,\n  BInputGroupAppend,\n  BInputGroup,\n} from \"bootstrap-vue\";\nimport Ripple from \"vue-ripple-directive\";\nimport vSelect from \"vue-select\";\nimport axios from \"@axios\";\nimport { heightTransition } from \"@core/mixins/ui/transition\";\nimport ToastificationContent from \"@core/components/toastification/ToastificationContent.vue\";\nimport { VueAutosuggest } from \"vue-autosuggest\";\n\nimport Cleave from \"vue-cleave-component\";\nimport \"cleave.js/dist/addons/cleave-phone.us\";\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormInput,\n    BFormCheckbox,\n    BForm,\n    BButton,\n    BFormDatepicker,\n    vSelect,\n    VueAutosuggest,\n    BCard,\n    BSpinner,\n    BFormFile,\n    BFormTextarea,\n    BInputGroupAppend,\n    Cleave,\n    BInputGroup,\n  },\n  directives: {\n    Ripple,\n  },\n\n  mixins: [heightTransition],\n\n  data() {\n    return {\n      options: {\n        date: {\n          date: true,\n          delimiter: \"-\",\n          datePattern: [\"Y\", \"m\", \"d\"],\n        },\n      },\n      base_url: '',\n\n      isSubmitting: false,\n      show_credit_debit: false,\n\n\n      Readonly_Total_Amount: true,\n\n        new_attachment:[],\n\n      filteredOptions: [],\n\n      formValues: {\n        id: null,\n        wallet_id: null,\n        transaction_type: \"\",\n        assign_to_category: \"\",\n        assign_to_entity: \"\",\n        assign_to_entity_id: \"\",\n        date: \"\",\n        unit_price: null,\n        quantity: null,\n        total: null,\n        attachment: [],\n        notes: \"\",\n        description: \"\",\n        approve: false,\n        accept: false,\n        credit_debit: \"Debit\",\n\n      },\n      RequestType: [\n        { value: \"Equipment Purchase\", text: \"Equipment Purchase\" },\n        { value: \"Material Purchase\", text: \"Material Purchase\" },\n        { value: \"Accommodation Purchase\", text: \"Accommodation Purchase\" },\n        { value: \"Employee Advance\", text: \"Employee Advance\" },\n        { value: \"Employee Payment\", text: \"Employee Payment\" },\n        { value: \"Utility Purchase\", text: \"Utility Purchase\" },\n        { value: \"Fuel Credit\", text: \"Fuel Credit\" },\n        { value: \"Fuel Expense\", text: \"Fuel Expense\"},\n        { value: \"Adjustment\", text: \"Adjustment\" },\n        { value: \"Credit\", text: \"Credit\" },\n        { value: \"Service Purchase\", text: \"Service Purchase\" },\n        { value: \"Transportation Expense\", text: \"Transportation Expense\" },\n        { value: \"Others\", text: \"Others\" },\n      ],\n\n      AssignToCategory: [\n        { value: \"Accommodation\", text: \"Accommodation\" },\n        { value: \"Client\", text: \"Client\" },\n        { value: \"Employee\", text: \"Employee\" },\n        { value: \"Supplier\", text: \"Supplier\" },\n        { value: \"Vendor\", text: \"Vendor\" },\n      ],\n    };\n  },\n  mounted() {\n    this.initTrHeight();\n    this.getDocument();\n  },\n  created() {\n    window.addEventListener(\"resize\", this.initTrHeight);\n  },\n  destroyed() {\n    window.removeEventListener(\"resize\", this.initTrHeight);\n  },\n  methods: {\n    totalAmount(item) {\n      var TotalAmount = 0;\n\n      TotalAmount = Number(item.unit_price) * Number(item.quantity);\n\n      item.total = Number(TotalAmount);\n    },\n\n    Submit() {\n      console.log(\"param\", this.$route.params.id);\n\n      // create new formData for post request to send files\n\n      const formData = new FormData();\n\n\n      if(this.new_attachment.length > 0){\n          for(let i=0;i<this.new_attachment.length;i++){\n            formData.append(\"file[]\", this.new_attachment[i]);\n          }\n      }\n      else{\n        this.new_attachment = [];\n      }\n\n\n      this.isSubmitting = true;\n      console.log(\"submt\", this.formValues);\n      // return;\n\n\n      console.log(\"new form values\", this.formValues);\n\n\n\n      Object.entries(this.formValues).forEach(([key, value]) => {\n        if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !Array.isArray(value)\n        ) {\n          if (value instanceof File) {\n            formData.append(key, value);\n          } else {\n            console.log(key, value);\n            formData.append(key, JSON.stringify(value));\n          }\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          Array.isArray(value)\n        ) {\n          formData.append(key, JSON.stringify(value));\n        } else if (value !== null) {\n          formData.append(key, value);\n        }\n      });\n\n\n      axios\n        .post(\"/updateMyTransaction\", formData)\n        .then((response) => {\n          if (response.data.hasOwnProperty(\"success\")) {\n            if (response.data.success === true) {\n              console.log(response.data.data);\n\n              this.$router.replace(\"/My_List_Patty_Cash/\"+this.formValues.wallet_id).then(() => {\n                this.$toast({\n                  component: ToastificationContent,\n                  position: \"top-right\",\n                  props: {\n                    title: response.data.message,\n                    icon: \"EditIcon\",\n                    variant: \"success\",\n                  },\n                });\n              });\n            } else {\n              this.isSubmitting = false;\n\n              this.$toast({\n                component: ToastificationContent,\n                position: \"top-right\",\n                props: {\n                  title: response.data.message,\n                  icon: \"AlertCircleIcon\",\n                  variant: \"danger\",\n                },\n              });\n            }\n          } else {\n            this.isSubmitting = false;\n\n            this.$toast({\n              component: ToastificationContent,\n              position: \"top-right\",\n              props: {\n                title: \"Error\",\n                icon: \"AlertCircleIcon\",\n                variant: \"danger\",\n                text: \"Something went wrong, try again later\",\n              },\n            });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n\n    getDocument() {\n      console.log(this.$route.params.id);\n\n      axios\n        .get(\"/getMyTransaction\", {\n          params: {\n            id: this.$route.params.id,\n          },\n        })\n        .then((response) => {\n          if (response.data.hasOwnProperty(\"success\")) {\n            if (response.data.success === true) {\n              console.log(response.data.data);\n\n\n              this.formValues = response.data.data;\n              this.base_url = response.data.base_url;\n              this.filteredOptions = [];\n              this.set_Transaction_Type_Change(this.formValues);\n\n              this.initTrHeight();\n\n              console.log(\"form\", this.formValues);\n\n              console.log(\"Transaction Fetched\");\n            } else {\n              this.$toast({\n                component: ToastificationContent,\n                position: \"top-right\",\n                props: {\n                  title: \"Error\",\n                  icon: \"AlertCircleIcon\",\n                  variant: \"danger\",\n                  text: \"Something went wrong, try again later\",\n                },\n              });\n            }\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: \"top-right\",\n              props: {\n                title: \"Error\",\n                icon: \"AlertCircleIcon\",\n                variant: \"danger\",\n                text: \"Something went wrong, try again later\",\n              },\n            });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    imageUpload(e) {\n      console.log(\"attachment files\", e.target.files);\n      if (e.target.files.length > 0) {\n        for (let i = 0; i < e.target.files.length; i++) {\n          this.new_attachment.push(e.target.files[i]);\n        }\n      } else {\n        this.new_attachment = null;\n      }\n      console.log(\"attachment\", this.new_attachment);\n    },\n\n    Type_Change() {\n      console.log(\"clear item \", this.formValues);\n      this.formValues.assign_to_entity = \"\";\n      this.formValues.assign_to_entity_id = \"\";\n\n      this.filteredOptions = [];\n      console.log(\"clear item new\", this.formValues);\n    },\n\n        Transaction_Type_Change(item) {\n\n\n\n\n\n          if(item.transaction_type == 'Adjustment' || item.transaction_type == 'Others'){\n            this.show_credit_debit = true;\n            item.credit_debit = \"Debit\";\n          }else if(item.transaction_type == 'Credit'){\n              item.credit_debit = \"Credit\";\n            this.show_credit_debit = false;\n\n\n          }else{\n            this.show_credit_debit = false;\n            item.credit_debit = \"Debit\";\n\n          }\n          console.log('item.credit_debit',item.credit_debit);\n\n    },\n\n            set_Transaction_Type_Change(item) {\n\n\n\n          if(item.transaction_type == 'Adjustment' || item.transaction_type == 'Others'){\n            this.show_credit_debit = true;\n          }else{\n            this.show_credit_debit = false;\n\n          }\n\n\n    },\n    onInputChange(item) {\n      let text = item.assign_to_entity;\n      let type = item.assign_to_category;\n      if (text === \"\" || text === undefined) {\n        return;\n      }\n      if (type === \"\" || type === undefined) {\n        return;\n      }\n      console.log(\"text\", text);\n\n      axios\n        .get(\"/documentResourceOwner\", {\n          params: {\n            id: text,\n            type: item.assign_to_category,\n          },\n        })\n        .then((response) => {\n          if (response.data.hasOwnProperty(\"success\")) {\n            if (response.data.success === true) {\n              console.log(response.data.data);\n              this.filteredOptions = [];\n              // this.filteredOptions = [{ data: response.data.data }];\n              this.filteredOptions = [{ data: response.data.data }];\n\n              console.log('item',item);\n              console.log('this.formValues',this.formValues);\n\n\n              console.log(\"Assign to entity Fetched\");\n            } else {\n              this.$toast({\n                component: ToastificationContent,\n                position: \"top-right\",\n                props: {\n                  title: \"Error\",\n                  icon: \"AlertCircleIcon\",\n                  variant: \"danger\",\n                  text: response.data.message,\n                },\n              });\n            }\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: \"top-right\",\n              props: {\n                title: \"Error\",\n                icon: \"AlertCircleIcon\",\n                variant: \"danger\",\n                text: \"Something went wrong, try again later\",\n              },\n            });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n\n    assignOwnerField(item, event) {\n      console.log(\"item\", item);\n      console.log(\"name\", event.item);\n      this.formValues.assign_to_entity = event.item.name;\n      this.formValues.assign_to_entity_id = event.item.id;\n      console.log(\"item new\", item);\n\n      return;\n    },\n    reomveFile(file) {\n      console.log(\"this.formValues.attachment\", this.formValues.attachment);\n\n      const index = this.formValues.attachment.indexOf(file);\n      if (index > -1) {\n        this.formValues.attachment.splice(index, 1); // 2nd parameter means remove one item only\n      }\n      console.log(\"this.formValues.attachment\", this.formValues.attachment);\n    },\n\n\n    initTrHeight() {\n      this.trSetHeight(null);\n      this.$nextTick(() => {\n        // this.trSetHeight(this.$refs.form.scrollHeight);\n      });\n    },\n  },\n};\n</script>\n\n<style>\ntextarea {\n  resize: none;\n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.hr_divider {\n  border-bottom: 2px solid #82868b;\n}\n</style>\n<style lang=\"scss\">\n@import \"@core/scss/vue/libs/vue-autosuggest.scss\";\n</style>"]}]}
{"remainingRequest":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\documentManagement\\editDocumentView.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\documentManagement\\editDocumentView.vue","mtime":1659510600124},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1658911433225},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1658911433727},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1658911433648},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1658911445082},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1658911433727}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJ0Bjb3JlL3Njc3MvdnVlL2xpYnMvdnVlLWF1dG9zdWdnZXN0LnNjc3MnOwo="},{"version":3,"sources":["editDocumentView.vue"],"names":[],"mappingssrBA","file":"editDocumentView.vue","sourceRoot":"src/views/table/bs-table/documentManagement","sourcesContent":["<template>\n  <b-form @submit.prevent>\n    <b-row>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Recipient Type\"\n          label-for=\"Recipient_Type\"\n        >\n          <v-select\n            id=\"Recipient_Type\"\n            v-model=\"formValues.recipient_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"recipientType\"\n            label=\"text\"\n            :reduce=\"text => text.value\"\n            @input=\"Type_Change(formValues.recipient_type)\"\n\n\n          />\n        </b-form-group>\n      </b-col>\n             <b-col md=\"6\">\n\n        <b-form-group\n          label=\" Recipient\"\n          label-for=\"autosuggest__input\"\n        >\n          <vue-autosuggest\n            v-model=\"formValues.resource_owner_name\"\n\n            :suggestions=\"filteredOptions\"\n\n            :limit=\"10\"\n            :input-props=\"{id:'autosuggest__input',class:'form-control', placeholder:'Search with name or ID',}\"\n            @input=\"onInputChange\"\n\n            @selected=\"assignOwnerField\"\n          >\n            <template slot-scope=\"{suggestion}\">\n              <span class=\"my-suggestion-item\">{{ suggestion.item.name }}, {{ suggestion.item.id }} </span>\n            </template>\n          </vue-autosuggest>\n        </b-form-group>\n      </b-col>\n            <b-col md=\"6\">\n        <b-form-group\n          label=\" Document Type\"\n          label-for=\" Document Type\"\n        >\n          <v-select\n            id=\"Recipient\"\n            v-model=\"formValues.recipient\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"recipients\"\n\n            label=\"text\"\n            :reduce=\"text => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n\n        <b-col md=\"6\">\n        <label for=\"date\">Date</label>\n        <b-input-group>\n\n          <cleave\n            id=\"date\"\n            v-model=\"formValues.date\"\n            class=\"form-control\"\n            :raw=\"false\"\n            :options=\"options.date\"\n            placeholder=\"YYYY-MM-DD\"\n          />\n\n          <b-input-group-append>\n            <b-form-datepicker\n              v-model=\"formValues.date\"\n              show-decade-nav\n              button-only\n              right\n              locale=\"en-US\"\n              aria-controls=\"date\"\n            />\n          </b-input-group-append>\n\n        </b-input-group>\n      </b-col>\n\n\n            <b-col md=\"6\">\n        <b-form-group\n          label=\"Attachment (*)\"\n          label-for=\"attach\"\n        >\n\n          <b-form-file\n            id=\"attach\"\n            multiple\n            v-model=\"attachment\"\n            accept=\"image/* , .pdf\"\n            placeholder=\"Upload attachment...\"\n            drop-placeholder=\"Drop file here...\"\n            @change=\"imageUpload($event)\"\n          />\n        </b-form-group>\n      </b-col>\n                  <b-col md=\"6\">\n        <b-form-group\n          label=\"Method\"\n          label-for=\"Method\"\n        >\n          <v-select\n            id=\"Method\"\n            v-model=\"formValues.method\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"Methods\"\n            label=\"text\"\n            :reduce=\"text => text.value\"\n\n\n          />\n        </b-form-group>\n      </b-col>\n                <b-col md=\"6\">\n                  <b-form-group\n                    label=\"Received by:\"\n                    label-for=\"Received_by\"\n                  >\n                    <b-form-input\n                      @scroll.prevent\n                      id=\"Received_by\"\n                      v-model=\"formValues.received_by\"\n                    />\n                  </b-form-group>\n                </b-col>\n                <b-col md=\"6\">\n                  <b-form-group\n                    label=\"Received at:\"\n                    label-for=\"Received_at\"\n                  >\n                    <b-form-input\n                      @scroll.prevent\n                      id=\"Received_at\"\n                      v-model=\"formValues.received_at\"\n                    />\n                  </b-form-group>\n                </b-col>\n        <b-col md=\"6 my-2 border rounded m-0 p-0 text-center\" v-for=\"item in formValues.attachment\" :key=\"item\">\n        <b-form-group\n            class=\"m-0 p-0\"\n        >\n\n           <a\n                class=\"btn btn-primary mx-2 my-0\"\n                :href=\"base_url+'/'+item\"\n                target=\"_blank\"\n                :title=\"item\"\n            >View file</a>\n            <button\n            :title=\"item\"\n                class=\"btn btn-danger mx-2 my-0\"\n                @click=\"reomveFile(item)\"\n            >Delete file</button>\n        </b-form-group>\n      </b-col>\n       <!-- <b-row class=\"border-bottom \"  v-for=\"item in formValues.attachment\" :key=\"item\">\n                      <b-col cols=\"2\">\n                        <strong>Attachment</strong>\n                      </b-col>\n                      <b-col\n                        cols=\"10\"\n                      >\n\n                        <a\n                          class=\"btn btn-primary\"\n                          :href=\"base_url+'/'+item\"\n                          target=\"_blank\"\n                        >View file</a>\n\n                      </b-col>\n                    </b-row> -->\n        <b-col md=\"12\">\n            <b-form-group\n              label=\"Description\"\n              label-for=\"Description\"\n            >\n\n              <b-form-textarea\n                id=\"Description\"\n                v-model=\"formValues.description\"\n                placeholder=\"Write Description Here..\"\n                rows=\"5\"\n                \n              />\n            </b-form-group>\n          </b-col>\n\n\n\n      <!-- submit and reset -->\n      <b-col md=\"12\">\n        <b-button\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          type=\"submit\"\n          variant=\"primary\"\n          class=\"mr-1\"\n          :disabled=\"isSubmitting\"\n          @click=\"submitDocument\"\n        >\n          <b-spinner\n            v-if=\"isSubmitting\"\n            small\n          />\n          <span v-if=\"isSubmitting\">Please Wait</span>\n\n          <span v-if=\"!isSubmitting\">Submit</span>\n        </b-button>\n\n      </b-col>\n    </b-row>\n  </b-form>\n</template>\n\n<script>\nimport {\n  BRow, BCol, BFormGroup, BFormInput, BFormCheckbox, BForm, BButton, BFormDatepicker, BCard, BFormFile, BSpinner, BInputGroup, BInputGroupPrepend, BFormRadio, BFormCheckboxGroup, BInputGroupAppend,BFormTextarea,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport vSelect from 'vue-select'\nimport { VueAutosuggest } from 'vue-autosuggest'\nimport axios from '@axios'\nimport { heightTransition } from '@core/mixins/ui/transition'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\n\nimport Cleave from 'vue-cleave-component'\nimport 'cleave.js/dist/addons/cleave-phone.us'\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormInput,\n    BFormCheckbox,\n    BForm,\n    BButton,\n    BFormDatepicker,\n    vSelect,\n    VueAutosuggest,\n    BCard,\n    BFormFile,\n    BSpinner,\n    BInputGroup,\n    BInputGroupPrepend,\n    BFormRadio,\n    BFormCheckboxGroup,\n    BInputGroupAppend,\n    Cleave,\n    BFormTextarea,\n\n  },\n  directives: {\n    Ripple,\n  },\n\n  mixins: [heightTransition],\n\n  data() {\n    return {\n      base_url: '',\n\n      options: {\n\n        date: {\n          date: true,\n          delimiter: '-',\n          datePattern: ['Y', 'm', 'd'],\n        },\n\n      },\n      isSubmitting: false,\n\n      recipientType: [\n        { value: 'Accommodation', text: 'Accommodation' },\n        { value: 'Client', text: 'Client' },\n        { value: 'Employee', text: 'Employee' },\n        { value: 'Supplier', text: 'Supplier' },\n        { value: 'Vendor', text: 'Vendor' },\n\n      ],\n      Methods: [\n        { value: 'Whatsapp', text: 'Whatsapp' },\n        { value: 'Email', text: 'Email' },\n        { value: 'Mail', text: 'Mail' },\n        { value: 'In-person', text: 'In-person' },\n        { value: 'Other', text: 'Other' },\n      ],\n        recipients: [\n        { value: 'New Contract', text: 'New Contract' },\n        { value: 'Renewal Contract', text: 'Renewal Contract' },\n        { value: 'Contract Termination', text: 'Contract Termination' },\n        { value: 'Rent Payment', text: 'Rent Payment' },\n        { value: 'Electricity Payment', text: 'Electricity Payment' },\n        { value: 'Others', text: 'Others' },\n      ],\n        recipients_accommodation: [\n        { value: 'New Contract', text: 'New Contract' },\n        { value: 'Renewal Contract', text: 'Renewal Contract' },\n        { value: 'Contract Termination', text: 'Contract Termination' },\n        { value: 'Rent Payment', text: 'Rent Payment' },\n        { value: 'Electricity Payment', text: 'Electricity Payment' },\n        { value: 'Others', text: 'Others' },\n      ],\n        recipients_client: [\n        { value: 'Addendum', text: 'Addendum' },\n        { value: 'Statement Of Account', text: 'Statement Of Account' },\n        { value: 'Balance Confirmation', text: 'Balance Confirmation' },\n        { value: 'Delayed Payment', text: 'Delayed Payment' },\n        { value: 'Dispatch Notice', text: 'Dispatch Notice' },\n        { value: 'Non-Renewal', text: 'Non-Renewal' },\n        { value: 'Renewal', text: 'Renewal' },\n        { value: 'Termination / Suspension', text: 'Termination / Suspension' },\n        { value: 'Others', text: 'Others' },\n\n\n      ],\n        recipients_vendor: [\n        { value: 'AJEER Request', text: 'AJEER Request' },\n        { value: 'Balance Confirmation', text: 'Balance Confirmation' },\n        { value: 'Employee Runaway', text: 'Employee Runaway' },\n        { value: 'Employee Termination', text: 'Employee Termination' },\n        { value: 'Employee Vacation Request', text: 'Employee Vacation Request' },\n        { value: 'Iqama Expiry', text: 'Iqama Expiry' },\n        { value: 'Contract Compliance', text: 'Contract Compliance' },\n        { value: 'Financial Compliance', text: 'Financial Compliance' },\n        { value: 'Others', text: 'Others' },\n\n\n\n      ],\n        recipients_employee: [\n        { value: 'Salary Slip', text: 'Salary Slip' },\n        { value: 'Employment Certificate', text: 'Employment Certificate' },\n        { value: 'Entry & Exit Certificate', text: 'Entry & Exit Certificate' },\n        { value: 'Salary Certificate', text: 'Salary Certificate' },\n        { value: 'Vacation Benefits', text: 'Vacation Benefits' },\n        { value: 'EOSB', text: 'EOSB' },\n        { value: 'Others', text: 'Others' },\n\n\n      ],\n        recipients_supplier: [\n        { value: 'Balance Confirmation', text: 'Balance Confirmation' },\n        { value: 'Statement of Account', text: 'Statement of Account' },\n        { value: 'Cancellation', text: 'Cancellation' },\n        { value: 'Refund', text: 'Refund' },\n        { value: 'Others', text: 'Others' },\n\n      ],\n\n\n      attachment: [],\n      filteredOptions: [],\n\n      formValues: {\n          id: '',\n        recipient_type: '',\n        recipient: '',\n        resource_owner_id:'',\n        resource_owner_name:'',\n        description:'',\n        created_by: '',\n        updated_by: '',\n        \n        date:'',\n        method:'',\n        received_by:'',\n        received_at:'',\n        // attachment : null,\n\n      },\n\n\n    }\n  },\n  mounted() {\n    this.initTrHeight()\n    this.getDocument()\n  },\n  created() {\n    window.addEventListener('resize', this.initTrHeight)\n  },\n  destroyed() {\n    window.removeEventListener('resize', this.initTrHeight)\n  },\n  methods: {\n\n    Type_Change(type) {\n        // console.log('recipient_type',this.formValues.recipient_type);\n        this.formValues.recipient = null;\n        // console.log('recipient',this.formValues.recipient);\n        this.clearResourceOwner();\n\n        this.recipients = null;\n        if(type == \"Accommodation\"){\n            this.recipients = this.recipients_accommodation;\n            return ;\n\n        }\n        if(type == \"Client\"){\n            this.recipients = this.recipients_client;\n            return ;\n\n        }\n        if(type == \"Employee\"){\n            this.recipients = this.recipients_employee;\n            return ;\n\n        }\n        if(type == \"Supplier\"){\n            this.recipients = this.recipients_supplier;\n            return ;\n\n        }\n        if(type == \"Vendor\"){\n            this.recipients = this.recipients_vendor;\n            return ;\n\n        }\n        console.log('type',type);\n        this.recipients = this.recipients_accommodation;\n        return ;\n\n    },\n\n    submitDocument() {\n        console.log('thi.formValues.attachment',this.formValues.attachment);\n        \n\n        // return ;\n        \n      this.isSubmitting = true\n      const formData = new FormData()\n\n      Object.entries(this.formValues).forEach(([key, value]) => {\n        if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n          if (value instanceof File) {\n            formData.append(key, value)\n          } else {\n            console.log(key, value)\n            formData.append(key, JSON.stringify(value))\n          }\n        } else if (typeof value === 'object' && value !== null && Array.isArray(value)) {\n          formData.append(key, JSON.stringify(value))\n        } else if (value !== null) {\n          formData.append(key, value)\n        }\n      })\n      \n        if(this.attachment.length > 0){\n          for(let i=0;i<this.attachment.length;i++){\n            formData.append(\"file[]\", this.attachment[i]);\n          }\n      }\n      else{\n        this.attachment = [];\n      }\n      // console.log('formValues',this.formValues);\n      // console.log('formData',formData);\n      \n      axios.post('/updateDocument',\n        formData).then(response => {\n        if (response.data.hasOwnProperty('success')) {\n          if (response.data.success === true) {\n            console.log(response.data.data)\n\n            this.$router.replace('/document_management')\n              .then(() => {\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: response.data.message,\n                    icon: 'EditIcon',\n                    variant: 'success',\n                  },\n                })\n              })\n          } else {\n            this.isSubmitting = false\n\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: response.data.message,\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n              },\n            })\n          }\n        } else {\n          this.isSubmitting = false\n\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: 'Something went wrong, try again later',\n            },\n          })\n        }\n      }).catch(error => {\n        console.error(error)\n      })\n    },\n\n        getDocument() {\n        console.log(this.$route.params.id)\n    \n      axios.get('/getDocument', {\n          params: {\n          id: this.$route.params.id,\n        },\n      }).then(response => {\n        if (response.data.hasOwnProperty('success')) {\n          if (response.data.success === true) {\n             console.log(response.data.data); \n            var recipient = response.data.data.recipient;\n            var resource_owner_name = response.data.data.resource_owner_name;\n            var resource_owner_id = response.data.data.resource_owner_id;\n\n\n            console.log('recipient',recipient);\n\n            this.formValues = response.data.data;\n          this.base_url = response.data.base_url;\n\n            this.Type_Change(this.formValues.recipient_type);\n            this.formValues.recipient = recipient;\n            this.formValues.resource_owner_name = resource_owner_name;\n            this.formValues.resource_owner_id = resource_owner_id;\n\n\n\n\n            \n                this.initTrHeight()\n\n            console.log('form' , this.formValues);\n            \n\n\n            console.log('Document Fetched')\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        } else {\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: 'Something went wrong, try again later',\n            },\n          })\n        }\n      }).catch(error => {\n        console.error(error)\n      })\n    },\n    imageUpload(e) {\n      console.log('attachment files',e.target.files);\n      if(e.target.files.length > 0){\n        for(let i=0;i<e.target.files.length;i++){\n          this.attachment.push(e.target.files[i]);\n        }\n      }\n      else{\n        this.attachment = null;\n      }\n      console.log('attachment',this.attachment)\n    },\n\n        reomveFile(file) {\n        console.log('this.formValues.attachment',this.formValues.attachment);\n\n        const index = this.formValues.attachment.indexOf(file);\n        if (index > -1) {\n        this.formValues.attachment.splice(index, 1); // 2nd parameter means remove one item only\n        }\n                console.log('this.formValues.attachment',this.formValues.attachment);\n\n\n    },\n        onInputChange(text) {\n      if (text === '' || text === undefined) {\n        return\n      }\n      console.log('text',text);\n      // return;\n      \n      // https://app.gulflamar.com/api/getEmployeeDropdown\n\n      axios.get('/documentResourceOwner', {\n        params: {\n          id: text,\n          type: this.formValues.recipient_type,\n        },\n      }).then(response => {\n        if (response.data.hasOwnProperty('success')) {\n          if (response.data.success === true) {\n            console.log(response.data.data)\n            this.filteredOptions = [{ data: response.data.data }]\n\n            console.log('Document Resource Owners Fetched')\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: response.data.message,\n              },\n            })\n          }\n        } else {\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: 'Something went wrong, try again later',\n            },\n          })\n        }\n      }).catch(error => {\n        console.error(error)\n      })\n    },\n       assignOwnerField(item) {\n      if (item) {\n        this.formValues.resource_owner_id = item.item.id;\n        this.formValues.resource_owner_name = item.item.name;\n        console.log('this.formValues.resource_owner_idt',this.formValues.resource_owner_id);\n        console.log('this.formValues.resource_owner_name',this.formValues.resource_owner_name);\n\n      }\n    },\n        clearResourceOwner(){\n      console.log('clear');\n      \n        this.formValues.resource_owner_id = '';\n        this.formValues.resource_owner_name = '';\n      this.filteredOptions = [];\n\n      // console.log('filteredOptions',this.filteredOptions);\n      // console.log('this.formValues.resource_owner_id',this.formValues.resource_owner_id);\n      // console.log('this.formValues.resource_owner_name',this.formValues.resource_owner_name);\n\n\n      \n    },\n\n\n\n    initTrHeight() {\n      this.trSetHeight(null)\n      this.$nextTick(() => {\n        // this.trSetHeight(this.$refs.form.scrollHeight)\n      })\n    },\n  },\n}\n</script>\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-autosuggest.scss';\n</style>"]}]}
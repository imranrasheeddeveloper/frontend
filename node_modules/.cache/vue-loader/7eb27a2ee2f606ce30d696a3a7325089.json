{"remainingRequest":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Desktop/new-splitur/frontend/src/views/table/bs-table/plans/add_plans.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/src/views/table/bs-table/plans/add_plans.vue","mtime":1661619716538},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/css-loader/dist/cjs.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/postcss-loader/src/index.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/sass-loader/dist/cjs.js","mtime":1658911444000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJAY29yZS9zY3NzL3Z1ZS9saWJzL3Z1ZS1hdXRvc3VnZ2VzdC5zY3NzIjsK"},{"version":3,"sources":["add_plans.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4RA","file":"add_plans.vue","sourceRoot":"src/views/table/bs-table/plans","sourcesContent":["<template>\n  <b-form @submit.prevent>\n    <b-row>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Name\"\n          label-for=\"v-name\"\n        >\n          <b-form-input\n            id=\"v-name'\"\n            v-model=\"formValues.name\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Color\"\n          label-for=\"v-color\"\n        >\n          <b-form-input\n            id=\"v-color'\"\n            v-model=\"formValues.color\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"slots\"\n          label-for=\"v-slots\"\n        >\n          <b-form-input\n            id=\"v-slots'\"\n            v-model=\"formValues.slots\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Description\"\n          label-for=\"v-description\"\n        >\n          <b-form-textarea\n            id=\"v-description\"\n            v-model=\"formValues.description\"\n            placeholder=\"Write description Here..\"\n            rows=\"2\"\n          />\n        </b-form-group>\n      </b-col>\n      <!-- submit and reset -->\n      <b-col md=\"12\">\n        <b-button\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          type=\"submit\"\n          variant=\"primary\"\n          class=\"mr-1\"\n          :disabled=\"isSubmitting\"\n          @click=\"Submit\"\n        >\n          <b-spinner\n            v-if=\"isSubmitting\"\n            small\n          />\n          <span v-if=\"isSubmitting\">Please Wait</span>\n\n          <span v-if=\"!isSubmitting\">Submit</span>\n        </b-button>\n      </b-col>\n    </b-row>\n  </b-form>\n</template>\n\n<script>\nimport {\n  BRow,\n  BCol,\n  BFormGroup,\n  BFormInput,\n  BFormCheckbox,\n  BForm,\n  BButton,\n  BFormDatepicker,\n  BCard,\n  BSpinner,\n  BFormFile,\n  BFormTextarea,\n  BInputGroupAppend,\n  BInputGroup,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport axios from '@axios'\nimport { heightTransition } from '@core/mixins/ui/transition'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\n\nimport Cleave from 'vue-cleave-component'\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormInput,\n    BFormCheckbox,\n    BForm,\n    BButton,\n    BFormDatepicker,\n    BCard,\n    BSpinner,\n    BFormFile,\n    BFormTextarea,\n    BInputGroupAppend,\n    Cleave,\n    BInputGroup,\n  },\n  directives: {\n    Ripple,\n  },\n\n  mixins: [heightTransition],\n\n  data() {\n    return {\n      options: {\n        date: {\n          date: true,\n          delimiter: '-',\n          datePattern: ['Y', 'm', 'd'],\n        },\n      },\n\n      isSubmitting: false,\n\n      formValues: {\n        name: '',\n        description: '',\n        color: '',\n        slots: '',\n        sub_category_id: '',\n      },\n\n    }\n  },\n  mounted() {\n    this.formValues.sub_category_id = this.$route.params.id\n    this.initTrHeight()\n  },\n  created() {\n    window.addEventListener('resize', this.initTrHeight)\n  },\n  destroyed() {\n    window.removeEventListener('resize', this.initTrHeight)\n  },\n  methods: {\n    Submit() {\n      this.isSubmitting = true\n      console.log('submit', this.formValues)\n\n      axios\n        .post('/groups/create_plan', this.formValues)\n        .then(response => {\n          if (response.data.hasOwnProperty('success')) {\n            if (response.data.success === true) {\n              console.log(response.data.data)\n\n              this.$router.replace(`/plans/${this.formValues.sub_category_id}`).then(() => {\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: response.data.message,\n                    icon: 'EditIcon',\n                    variant: 'success',\n                  },\n                })\n              })\n            } else {\n              this.isSubmitting = false\n\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: response.data.message,\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                },\n              })\n            }\n          } else {\n            this.isSubmitting = false\n\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    },\n    // imageUpload(e) {\n    //   axios\n    //     .post('/users/uploadFile', {\n    //       attachment: e.target.files[0],\n    //     })\n    //     .then(response => {\n    //       if (response.data.hasOwnProperty('success')) {\n    //         if (response.data.success === true) {\n    //           console.log(response.data.filePATH)\n    //           this.formValues.icon = response.data.filePATH\n\n    //           this.$toast({\n    //             component: ToastificationContent,\n    //             position: 'top-right',\n    //             props: {\n    //               title: response.data.message,\n    //               icon: 'EditIcon',\n    //               variant: 'success',\n    //             },\n    //           })\n    //         } else {\n    //           this.isSubmitting = false\n\n    //           this.$toast({\n    //             component: ToastificationContent,\n    //             position: 'top-right',\n    //             props: {\n    //               title: response.data.message,\n    //               icon: 'AlertCircleIcon',\n    //               variant: 'danger',\n    //             },\n    //           })\n    //         }\n    //       } else {\n    //         this.isSubmitting = false\n\n    //         this.$toast({\n    //           component: ToastificationContent,\n    //           position: 'top-right',\n    //           props: {\n    //             title: 'Error',\n    //             icon: 'AlertCircleIcon',\n    //             variant: 'danger',\n    //             text: 'Something went wrong, try again later',\n    //           },\n    //         })\n    //       }\n    //     })\n    //     .catch(error => {\n    //       console.error(error)\n    //     })\n    // },\n    initTrHeight() {\n      this.trSetHeight(null)\n      this.$nextTick(() => {\n        // this.trSetHeight(this.$refs.form.scrollHeight);\n      })\n    },\n  },\n}\n</script>\n\n<style>\ntextarea {\n  resize: vertical;\n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.hr_divider {\n  border-bottom: 2px solid #82868b;\n}\n</style>\n<style lang=\"scss\">\n@import \"@core/scss/vue/libs/vue-autosuggest.scss\";\n</style>\n"]}]}
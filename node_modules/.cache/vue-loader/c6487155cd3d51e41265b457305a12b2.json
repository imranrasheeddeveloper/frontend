{"remainingRequest":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Desktop/new-splitur/frontend/src/views/table/bs-table/sub_categories/edit_sub_cat.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/src/views/table/bs-table/sub_categories/edit_sub_cat.vue","mtime":1660221777707},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/css-loader/dist/cjs.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/postcss-loader/src/index.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdGV4dGFyZWEgewogIHJlc2l6ZTogdmVydGljYWw7Cn0KaW5wdXRbdHlwZT0ibnVtYmVyIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sCmlucHV0W3R5cGU9Im51bWJlciJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHsKICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7CiAgbWFyZ2luOiAwOwp9Ci5ocl9kaXZpZGVyIHsKICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzgyODY4YjsKfQo="},{"version":3,"sources":["edit_sub_cat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit_sub_cat.vue","sourceRoot":"src/views/table/bs-table/sub_categories","sourcesContent":["<template>\n  <b-form @submit.prevent>\n    <b-row>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Title\"\n          label-for=\"v-title\"\n        >\n          <b-form-input\n            id=\"v-title'\"\n            v-model=\"formValues.sub_cat_title\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Validation Type\"\n          label-for=\"v-validation_type\"\n        >\n          <v-select\n            id=\"v-validation_type\"\n            v-model=\"formValues.validation_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"validation_type_options\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Pouplar\"\n          label-for=\"v-pouplar\"\n        >\n          <v-select\n            id=\"v-pouplar\"\n            v-model=\"formValues.is_popular\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"is_popular_options\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <!-- submit and reset -->\n      <b-col md=\"12\">\n        <b-button\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          type=\"submit\"\n          variant=\"primary\"\n          class=\"mr-1\"\n          :disabled=\"isSubmitting\"\n          @click=\"Submit\"\n        >\n          <b-spinner\n            v-if=\"isSubmitting\"\n            small\n          />\n          <span v-if=\"isSubmitting\">Please Wait</span>\n\n          <span v-if=\"!isSubmitting\">Submit</span>\n        </b-button>\n      </b-col>\n    </b-row>\n  </b-form>\n</template>\n\n<script>\nimport {\n  BRow,\n  BCol,\n  BFormGroup,\n  BFormInput,\n  BFormCheckbox,\n  BForm,\n  BButton,\n  BFormDatepicker,\n  BCard,\n  BSpinner,\n  BFormFile,\n  BFormTextarea,\n  BInputGroupAppend,\n  BInputGroup,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport axios from '@axios'\nimport { heightTransition } from '@core/mixins/ui/transition'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\nimport vSelect from 'vue-select'\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormInput,\n    BFormCheckbox,\n    BForm,\n    BButton,\n    BFormDatepicker,\n    BCard,\n    BSpinner,\n    BFormFile,\n    BFormTextarea,\n    BInputGroupAppend,\n    BInputGroup,\n    vSelect,\n  },\n  directives: {\n    Ripple,\n  },\n\n  mixins: [heightTransition],\n\n  data() {\n    return {\n      options: {\n        date: {\n          date: true,\n          delimiter: '-',\n          datePattern: ['Y', 'm', 'd'],\n        },\n      },\n\n      isSubmitting: false,\n\n      formValues: {\n        sub_cat_title: '',\n        validation_type: '',\n        is_popular: '',\n        category_id: '',\n      },\n      sub_cat_id: '',\n\n      validation_type_options: [\n        {\n          text: 'otp',\n          value: 'otp',\n        },\n        {\n          text: 'auth',\n          value: 'auth',\n        },\n        {\n          text: 'otp/auth',\n          value: 'otp/auth',\n        },\n      ],\n      is_popular_options: [{\n        text: 'Yes',\n        value: 'Yes',\n      },\n      {\n        text: 'No',\n        value: 'No',\n      }],\n    }\n  },\n  mounted() {\n    this.formValues.sub_cat_id = this.$route.params.id\n    console.log(this.formValues.sub_cat_id)\n    this.get_sub_cat()\n    this.initTrHeight()\n  },\n  created() {\n    window.addEventListener('resize', this.initTrHeight)\n  },\n  destroyed() {\n    window.removeEventListener('resize', this.initTrHeight)\n  },\n  methods: {\n    Submit() {\n      this.isSubmitting = true\n      console.log('submit', this.formValues.sub_cat_id)\n      if (this.formValues.sub_cat_title === '') {\n        this.isSubmitting = false\n        this.$toast({\n          component: ToastificationContent,\n          position: 'top-right',\n          props: {\n            title: 'Please Enter Title',\n            icon: 'AlertCircleIcon',\n            variant: 'danger',\n          },\n        })\n        return\n      }\n      if (this.formValues.validation_type === '') {\n        this.isSubmitting = false\n        this.$toast({\n          component: ToastificationContent,\n          position: 'top-right',\n          props: {\n            title: 'Please select validation type',\n            icon: 'AlertCircleIcon',\n            variant: 'danger',\n          },\n        })\n        return\n      }\n      if (this.formValues.is_popular === '') {\n        this.isSubmitting = false\n        this.$toast({\n          component: ToastificationContent,\n          position: 'top-right',\n          props: {\n            title: 'Please select is Popular',\n            icon: 'AlertCircleIcon',\n            variant: 'danger',\n          },\n        })\n        return\n      }\n      if (this.formValues.is_popular === 'Yes') {\n        this.formValues.is_popular = true\n      } else {\n        this.formValues.is_popular = false\n      }\n\n      axios\n        .post(`/groups/update_sub_category/${this.$route.params.id}`, this.formValues)\n        .then(response => {\n          if (response.data.hasOwnProperty('success')) {\n            if (response.data.success === true) {\n              console.log(response.data.data)\n              this.$router.replace(`/sub_categories/${this.formValues.category_id}`).then(() => {\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: response.data.message,\n                    icon: 'EditIcon',\n                    variant: 'success',\n                  },\n                })\n              })\n            } else {\n              this.isSubmitting = false\n\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: response.data.message,\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                },\n              })\n            }\n          } else {\n            this.isSubmitting = false\n\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    },\n    get_sub_cat() {\n      axios\n        .get(`/groups/get_sub_category_by_id/${this.$route.params.id}`)\n        .then(response => {\n          if (response.data.hasOwnProperty('success')) {\n            if (response.data.success === true) {\n              console.log(response.data.data)\n              this.formValues = response.data.data\n              if (this.formValues.is_popular === true) {\n                this.formValues.is_popular = 'Yes'\n              } else {\n                this.formValues.is_popular = 'No'\n              }\n            } else {\n              this.isSubmitting = false\n\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: response.data.message,\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                },\n              })\n            }\n          } else {\n            this.isSubmitting = false\n\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        })\n    },\n\n    initTrHeight() {\n      this.trSetHeight(null)\n      this.$nextTick(() => {\n        // this.trSetHeight(this.$refs.form.scrollHeight);\n      })\n    },\n  },\n}\n</script>\n\n<style>\ntextarea {\n  resize: vertical;\n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.hr_divider {\n  border-bottom: 2px solid #82868b;\n}\n</style>\n<style lang=\"scss\">\n@import \"@core/scss/vue/libs/vue-autosuggest.scss\";\n</style>\n"]}]}
{"remainingRequest":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/views/table/bs-table/ResourceCenter/allocatedResourceView.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/views/table/bs-table/ResourceCenter/allocatedResourceView.vue","mtime":1659630294000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/css-loader/dist/cjs.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/postcss-loader/src/index.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbmxhcmdlYWJsZS1pbWFnZSAuZnVsbCB7CiAgei1pbmRleDogOTk5OSAhaW1wb3J0YW50OwoKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSkgIWltcG9ydGFudDsKfQoKLmN1c3RvbUhlYWQgewogIGJhY2tncm91bmQtY29sb3I6ICMwNjYwOGYgIWltcG9ydGFudDsKICBjb2xvcjogI2ZmZjsKfQo="},{"version":3,"sources":["allocatedResourceView.vue"],"names":[],"mappingsy9BA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"allocatedResourceView.vue","sourceRoot":"src/views/table/bs-table/ResourceCenter","sourcesContent":["<template>\n  <div>\n    <!-- search input -->\n    <div class=\"custom-search d-flex justify-content-between\">\n      <b-form-group>\n        <div class=\"d-flex align-items-center\">\n          <!-- <label class=\"mr-1\">Search</label> -->\n\n          <b-input-group>\n            <b-input-group-prepend>\n              <b-button\n                variant=\"outline-primary\"\n                @click=\"(page = 1), getEmployees()\"\n              >\n                <feather-icon icon=\"SearchIcon\" />\n              </b-button>\n            </b-input-group-prepend>\n            <b-form-input\n              v-model=\"searchTerm\"\n              placeholder=\"Search\"\n              type=\"text\"\n              class=\"d-inline-block\"\n              @keyup=\"searchTimeOut()\"\n            />\n\n            <b-input-group-append>\n              <b-button\n                v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                v-b-modal.modal-advancesearch\n                variant=\"outline-primary\"\n              >\n                Advance search\n              </b-button>\n            </b-input-group-append>\n          </b-input-group>\n        </div>\n      </b-form-group>\n\n      <b-form-group v-if=\"$ability.can('add/copy', 'resource')\">\n        <div class=\"d-flex align-items-center\">\n          <b-input-group>\n            <b-input-group-prepend>\n              <div id=\"my-container\">\n                <b-button\n                  id=\"popover-reactive-1\"\n                  ref=\"button\"\n                  title=\"Export\"\n                  v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n                  variant=\"outline-primary\"\n                >\n                  <feather-icon icon=\"DownloadIcon\" />\n                </b-button>\n\n                <b-popover\n                  ref=\"popover\"\n                  target=\"popover-reactive-1\"\n                  triggers=\"click\"\n                  :show.sync=\"popoverShow\"\n                  placement=\"auto\"\n                  container=\"my-container\"\n                >\n                  <template #title>\n                    <div\n                      class=\"d-flex justify-content-between align-items-center\"\n                    >\n                      <span>Export Table</span>\n                    </div>\n                  </template>\n\n                  <div>\n                    <b-form-group label=\"Search Filter\">\n                      <b-form-input\n                        v-model=\"searchTerm\"\n                        placeholder=\"\"\n                        size=\"sm\"\n                      />\n                    </b-form-group>\n\n                    <b-form-group label=\"Records Limit\">\n                      <b-form-input\n                        v-model=\"exportLimit\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        size=\"sm\"\n                      />\n                    </b-form-group>\n\n                    <!-- button -->\n                    <b-row>\n                      <b-col cols=\"6\">\n                        <b-button\n                          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n                          size=\"sm\"\n                          variant=\"danger\"\n                          class=\"mr-1\"\n                          @click=\"onClose\"\n                        >\n                          <feather-icon icon=\"XIcon\" />\n                        </b-button>\n                      </b-col>\n\n                      <b-col cols=\"6\">\n                        <b-button\n                          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n                          size=\"sm\"\n                          variant=\"primary\"\n                          :href=\"\n                            '/api/resourceCsv?searchTerm=' +\n                            searchTerm +\n                            ' &amp;limit=' +\n                            exportLimit\n                          \"\n                          target=\"_blank\"\n                        >\n                          <feather-icon icon=\"DownloadIcon\" />\n                        </b-button>\n                      </b-col>\n                    </b-row>\n                  </div>\n                </b-popover>\n              </div>\n            </b-input-group-prepend>\n\n            <b-input-group-prepend>\n              <b-button\n                v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n                variant=\"primary\"\n                :to=\"{ name: 'allocate-resource' }\"\n                title=\"Allocate Resource\"\n              >\n                ADD+\n              </b-button>\n            </b-input-group-prepend>\n          </b-input-group>\n        </div>\n      </b-form-group>\n    </div>\n\n    <!-- Advance Search Model -->\n    <b-modal\n      hide-footer\n      id=\"modal-advancesearch\"\n      title=\"Advance Search\"\n      ref=\"searchModel\"\n      size=\"lg\"\n      cancel-variant=\"outline-secondary\"\n    >\n      <b-form @submit.prevent>\n        <b-row>\n          <b-col md=\"6\">\n            <b-form-group label=\"Resource Type\" label-for=\"v-resourceType\">\n              <v-select\n                id=\"v-resourceType\"\n                v-model=\"formValues.resourceType\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"resourceTypes\"\n                label=\"text\"\n                :reduce=\"(text) => text.value\"\n                @input=\"resourceTypeChange\"\n              />\n            </b-form-group>\n          </b-col>\n\n          <b-col md=\"6\">\n            <b-form-group label=\"Resource Owner\" label-for=\"autosuggest__input\">\n              <vue-autosuggest\n                :suggestions=\"filteredOptions\"\n                :limit=\"10\"\n                :input-props=\"{\n                  id: 'autosuggest__input',\n                  class: 'form-control',\n                  placeholder: 'Search with name or ID',\n                }\"\n                @input=\"onInputChange\"\n                @selected=\"assignOwnerField\"\n              >\n                <template slot-scope=\"{ suggestion }\">\n                  <span class=\"my-suggestion-item\"\n                    >{{ suggestion.item.name }}, {{ suggestion.item.id }}\n                  </span>\n                </template>\n              </vue-autosuggest>\n            </b-form-group>\n          </b-col>\n\n          <b-col md=\"6\">\n            <label for=\"v-dob\">Date</label>\n            <b-input-group>\n              <cleave\n                id=\"date\"\n                v-model=\"formValues.allocationDate\"\n                class=\"form-control\"\n                :raw=\"false\"\n                :options=\"options.date\"\n                placeholder=\"YYYY-MM-DD\"\n              />\n\n              <b-input-group-append>\n                <b-form-datepicker\n                  v-model=\"formValues.allocationDate\"\n                  show-decade-nav\n                  button-only\n                  right\n                  locale=\"en-US\"\n                  aria-controls=\"v-dob\"\n                />\n              </b-input-group-append>\n            </b-input-group>\n          </b-col>\n\n          <b-col md=\"12\">\n            <b-form-group label=\"Notes\" label-for=\"notes\">\n              <b-form-textarea\n                id=\"notes\"\n                v-model=\"formValues.notes\"\n                placeholder=\"Notes\"\n                rows=\"1\"\n              />\n            </b-form-group>\n          </b-col>\n\n          <b-col md=\"12\">\n            <b-button\n              v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n              type=\"submit\"\n              variant=\"primary\"\n              class=\"mr-1\"\n              @click=\"\n                (page = 1), (searchTerm = ''), closeSearch(), getEmployees()\n              \"\n            >\n              <span>GO</span>\n            </b-button>\n\n            <b-button\n              v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n              type=\"submit\"\n              variant=\"outline-primary\"\n              class=\"mr-1\"\n              @click=\"resetSearch\"\n            >\n              <span>Reset</span>\n            </b-button>\n\n            <b-button\n              v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n              type=\"submit\"\n              variant=\"outline-secondary\"\n              class=\"mr-1\"\n              @click=\"closeSearch\"\n            >\n              <span>Cancel</span>\n            </b-button>\n          </b-col>\n        </b-row>\n      </b-form>\n    </b-modal>\n\n    <b-table\n      :items=\"items\"\n      :fields=\"fields\"\n      responsive\n      class=\"mb-0 bg-white\"\n      :busy=\"isBusy\"\n    >\n      <template #cell(Options)=\"row\">\n        <!-- <div>\n                <b-form-checkbox v-model=\"row.detailsShowing\" @change=\"row.toggleDetails\">\n                    {{ row.detailsShowing ? 'Hide' : 'View Details' }}\n                </b-form-checkbox>\n                <div class=\"d-flex justify-content-start\">\n                    <b-button v-if=\"$ability.can('edit', 'resource')\" :to=\"{ name: 'allocated-resource-edit', params: { id: row.item.id }}\" v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\" variant=\"flat-success\" class=\"btn-icon rounded-circle\">\n                        <feather-icon icon=\"EditIcon\" />\n                    </b-button>\n\n                    <b-button v-if=\"$ability.can('delete', 'resource')\" v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\" variant=\"flat-danger\" class=\"btn-icon rounded-circle\" @click=\"deleteAllocation(row.item.id)\">\n                        <feather-icon icon=\"Trash2Icon\" />\n                    </b-button>\n                </div>\n            </div> -->\n\n        <b-form-group>\n          <div class=\"d-flex align-items-center w-fit-content\">\n            <b-input-group>\n              <b-input-group-prepend>\n                <b-button\n                  size=\"sm\"\n                  v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                  variant=\"outline-primary\"\n                  v-bind:class=\"row.detailsShowing ? 'active' : ''\"\n                  @click=\"row.toggleDetails\"\n                >\n                  <feather-icon\n                    icon=\"ChevronUpIcon\"\n                    v-if=\"row.detailsShowing\"\n                  />\n\n                  <feather-icon icon=\"ChevronDownIcon\" v-else />\n                </b-button>\n              </b-input-group-prepend>\n\n              <b-input-group-append v-if=\"$ability.can('edit', 'resource')\">\n                <b-button\n                  size=\"sm\"\n                  :to=\"{\n                    name: 'allocated-resource-edit',\n                    params: { id: row.item.id },\n                  }\"\n                  v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n                  variant=\"outline-primary text-success\"\n                >\n                  <feather-icon icon=\"EditIcon\" />\n                </b-button>\n              </b-input-group-append>\n              <b-input-group-append v-if=\"$ability.can('delete', 'resource')\">\n                <b-button\n                  size=\"sm\"\n                  v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n                  variant=\"outline-primary text-danger\"\n                  @click=\"deleteDocument(row.item.id)\"\n                >\n                  <feather-icon icon=\"Trash2Icon\" />\n                </b-button>\n              </b-input-group-append>\n            </b-input-group>\n          </div>\n        </b-form-group>\n      </template>\n\n      <!-- full detail on click -->\n      <template #row-details=\"row\">\n        <b-card no-body class=\"pb-0 mb-0\">\n          <div>\n            <b-table\n              :items=\"row.item.resourceItems\"\n              :fields=\"itemFields\"\n              responsive\n              class=\"mb-0 bg-white\"\n              :busy=\"isBusy\"\n              show-empty\n            >\n              <template #empty=\"scope\">\n                <h4>{{ scope.emptyText }}</h4>\n              </template>\n            </b-table>\n          </div>\n        </b-card>\n        <b-card no-body>\n          <b-row class=\"\">\n            <b-col cols=\"12\" class=\"text-right\">\n              <strong>Created By : </strong>\n              {{ row.item.created_by }}\n            </b-col>\n          </b-row>\n          <b-row class=\"\" v-if=\"row.item.updated_by\">\n            <b-col cols=\"12\" class=\"text-right\">\n              <strong>Updated By : </strong>\n              {{ row.item.updated_by }}\n            </b-col>\n          </b-row>\n        </b-card>\n      </template>\n\n      <!-- <template #cell(iqama)=\"data\">\n          <b-avatar :src=\"data.value\" />\n        </template> -->\n\n      <template #cell(ownerType)=\"data\">\n        <b-badge pill :variant=\"statusVariant(data.value)\">\n          {{ data.value }}\n        </b-badge>\n      </template>\n\n      <template #cell(signature)=\"data\">\n        <enlargeable-image\n          :src=\"data.value\"\n          :src_large=\"data.value\"\n          animation_duration=\"600\"\n        >\n          <b-img\n            v-if=\"data.value != ''\"\n            style=\"max-height: 80px\"\n            thumbnail\n            :src=\"data.value\"\n          />\n        </enlargeable-image>\n      </template>\n\n      <template #cell(attachment)=\"data\">\n        <a\n          class=\"btn btn-primary\"\n          v-if=\"isPdf(data.value)\"\n          :href=\"data.value\"\n          target=\"_blank\"\n          >View file</a\n        >\n\n        <enlargeable-image\n          v-else\n          :src=\"data.value\"\n          :src_large=\"data.value\"\n          animation_duration=\"600\"\n        >\n          <b-img\n            v-if=\"data.value != ''\"\n            style=\"max-height: 80px\"\n            thumbnail\n            :src=\"data.value\"\n          />\n        </enlargeable-image>\n      </template>\n\n      <template #cell(date)=\"data\">\n        {{ data.value | moment(\"DD/MM/YYYY\") }}\n      </template>\n\n      <template #cell(passport)=\"data\">\n        <enlargeable-image\n          :src=\"data.value\"\n          :src_large=\"data.value\"\n          animation_duration=\"600\"\n        >\n          <b-img thumbnail :src=\"data.value\" />\n        </enlargeable-image>\n      </template>\n\n      <template #cell(passport_2)=\"data\">\n        <enlargeable-image\n          :src=\"data.value\"\n          :src_large=\"data.value\"\n          animation_duration=\"600\"\n        >\n          <b-img thumbnail :src=\"data.value\" />\n        </enlargeable-image>\n      </template>\n\n      <template #cell(ajeer)=\"data\">\n        <enlargeable-image\n          :src=\"data.value\"\n          :src_large=\"data.value\"\n          animation_duration=\"600\"\n        >\n          <b-img thumbnail :src=\"data.value\" />\n        </enlargeable-image>\n      </template>\n\n      <template #cell(insurance_card)=\"data\">\n        <enlargeable-image\n          :src=\"data.value\"\n          :src_large=\"data.value\"\n          animation_duration=\"600\"\n        >\n          <b-img thumbnail :src=\"data.value\" />\n        </enlargeable-image>\n      </template>\n\n      <template #table-busy>\n        <div class=\"text-center text-primary my-2\">\n          <b-spinner class=\"align-middle\"></b-spinner>\n          <strong>Loading...</strong>\n        </div>\n      </template>\n\n      <!-- <template #cell(status)=\"data\">\n          <b-badge :variant=\"status[1][data.value]\">\n            {{ status[0][data.value] }}\n          </b-badge>\n        </template> -->\n    </b-table>\n\n    <div class=\"d-flex justify-content-end\">\n      <b-pagination\n        v-model=\"page\"\n        :total-rows=\"count\"\n        :per-page=\"pageSize\"\n        pills\n        @change=\"handlePageChange\"\n      ></b-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BCardCode from \"@core/components/b-card-code/BCardCode.vue\";\nimport axios from \"@axios\";\nimport vSelect from \"vue-select\";\nimport {\n  BTable,\n  BFormCheckbox,\n  BButton,\n  BCard,\n  BRow,\n  BCol,\n  BAvatar,\n  BBadge,\n  BImg,\n  BTabs,\n  BTab,\n  BCardText,\n  BPagination,\n  BFormGroup,\n  BFormInput,\n  BFormSelect,\n  BDropdown,\n  BDropdownItem,\n  BInputGroup,\n  BInputGroupAppend,\n  BInputGroupPrepend,\n  BFormDatepicker,\n  BFormFile,\n  BFormTextarea,\n  BFormRadio,\n  BForm,\n  BFormCheckboxGroup,\n  BFormRating,\n  BListGroupItem,\n  BListGroup,\n  BPopover,\n  BSpinner,\n} from \"bootstrap-vue\";\n\nimport Ripple from \"vue-ripple-directive\";\nimport EnlargeableImage from \"@diracleo/vue-enlargeable-image\";\nimport Cleave from \"vue-cleave-component\";\nimport \"cleave.js/dist/addons/cleave-phone.us\";\nimport { VueAutosuggest } from \"vue-autosuggest\";\n\nimport ToastificationContent from \"@core/components/toastification/ToastificationContent.vue\";\n\nexport default {\n  components: {\n    BCardCode,\n    BTable,\n    BButton,\n    BFormCheckbox,\n    BCard,\n    BRow,\n    BCol,\n    BBadge,\n    BAvatar,\n    BImg,\n    EnlargeableImage,\n    BTabs,\n    BTab,\n    BCardText,\n    BPagination,\n    BFormGroup,\n    BFormInput,\n    BFormSelect,\n    BDropdown,\n    BDropdownItem,\n    BInputGroup,\n    BInputGroupAppend,\n    BInputGroupPrepend,\n    BFormDatepicker,\n    BFormFile,\n    BFormTextarea,\n    BFormRadio,\n    BForm,\n    vSelect,\n    BFormCheckboxGroup,\n    BFormRating,\n    BListGroup,\n    BListGroupItem,\n    BPopover,\n    BSpinner,\n    Cleave,\n    VueAutosuggest,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      options: {\n        penColor: \"#000\",\n        backgroundColor: \"#fff\",\n        phone: {\n          prefix: \"9665\",\n          blocks: [12],\n          uppercase: true,\n          noImmediatePrefix: true,\n        },\n        date: {\n          date: true,\n          delimiter: \"-\",\n          datePattern: [\"Y\", \"m\", \"d\"],\n        },\n        account_number: {\n          blocks: [15],\n          uppercase: true,\n        },\n        iqama_number: {\n          blocks: [10],\n          uppercase: true,\n        },\n        cr_number: {\n          blocks: [10],\n          uppercase: true,\n        },\n        iban: {\n          prefix: \"SA\",\n          blocks: [24],\n          uppercase: true,\n          noImmediatePrefix: true,\n        },\n      },\n\n      popoverShow: false,\n      exportLimit: \"\",\n      isBusy: true,\n      fields: [\n        {\n          key: \"Options\",\n          thClass: \"customHead\",\n        },\n        {\n          key: \"ownerType\",\n          sortable: true,\n          thClass: \"customHead\",\n        },\n        {\n          key: \"resourceOwner\",\n          sortable: true,\n          thClass: \"customHead\",\n        },\n        // {\n        //     key: 'signature',\n        //     sortable: true,\n        //     thClass: 'customHead'\n        // },\n        {\n          key: \"attachment\",\n          sortable: true,\n          thClass: \"customHead\",\n        },\n        {\n          key: \"notes\",\n          sortable: true,\n          thClass: \"customHead\",\n        },\n        {\n          key: \"date\",\n          sortable: true,\n          thClass: \"customHead\",\n        },\n        // {\n        //     key: 'created_by',\n        //     label: \"Created By\",\n        //     sortable: true,\n        //     thClass: 'customHead'\n        // }, {\n        //     key: 'updated_by',\n        //     label: \"Updated By\",\n        //     sortable: true,\n        //     thClass: 'customHead'\n        // }\n      ],\n      itemFields: [\"name\", \"quantity\"],\n      items: [],\n      emp_detail: [\n        {\n          age: 40,\n          first_name: \"Dickerson\",\n          last_name: \"Macdonald\",\n        },\n      ],\n      /* eslint-disable global-require */\n      status: [\n        {\n          1: \"Current\",\n          2: \"Professional\",\n          3: \"Rejected\",\n          4: \"Resigned\",\n          5: \"Applied\",\n        },\n        {\n          1: \"light-primary\",\n          2: \"light-success\",\n          3: \"light-danger\",\n          4: \"light-warning\",\n          5: \"light-info\",\n        },\n      ],\n\n      searchTerm: \"\",\n      pageSize: 10,\n      page: 1,\n      count: 0,\n\n      filteredOptions: [],\n\n      formValues: {\n        resourceType: \"\",\n        resourceOwner: \"\",\n        allocationDate: \"\",\n        notes: \"\",\n      },\n\n      resourceTypes: [\n        {\n          value: \"Employee\",\n          text: \"Employee\",\n        },\n        {\n          value: \"Project\",\n          text: \"Project\",\n        },\n        {\n          value: \"Accommodation\",\n          text: \"Accommodation\",\n        },\n      ],\n    };\n  },\n\n  mounted() {\n    this.getEmployees();\n  },\n  methods: {\n    closeSearch() {\n      this.$refs[\"searchModel\"].hide();\n    },\n\n    assignOwnerField(item) {\n      if (item) {\n        this.formValues.resourceOwner = item.item.id;\n      }\n    },\n\n    onInputChange(text) {\n      if (text === \"\" || text === undefined) {\n        return;\n      }\n\n      axios\n        .get(\"/getEmployeeDropdown\", {\n          params: {\n            id: text,\n            resourceType: this.formValues.resourceType,\n          },\n        })\n        .then((response) => {\n          if (response.data.hasOwnProperty(\"success\")) {\n            if (response.data.success === true) {\n              console.log(response.data.data);\n              this.filteredOptions = [\n                {\n                  data: response.data.data,\n                },\n              ];\n\n              console.log(\"Resource Owners Fetched\");\n            } else {\n              this.$toast({\n                component: ToastificationContent,\n                position: \"top-right\",\n                props: {\n                  title: `Error`,\n                  icon: \"AlertCircleIcon\",\n                  variant: \"danger\",\n                  text: response.data.message,\n                },\n              });\n            }\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: \"top-right\",\n              props: {\n                title: `Error`,\n                icon: \"AlertCircleIcon\",\n                variant: \"danger\",\n                text: `Something went wrong, try again later`,\n              },\n            });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n\n    resourceTypeChange(val) {\n      this.getResourceItems();\n    },\n\n    getResourceItems() {\n      axios\n        .get(\"/getResourceItemsDropdown\", {\n          params: {\n            resourceType: this.formValues.resourceType,\n          },\n        })\n        .then((response) => {\n          if (response.data.hasOwnProperty(\"success\")) {\n            if (response.data.success === true) {\n              /*console.log(response.data.data);*/\n              this.resourceItems = response.data.data;\n\n              console.log(\"Resource Items Fetched\");\n            } else {\n              this.$toast({\n                component: ToastificationContent,\n                position: \"top-right\",\n                props: {\n                  title: `Error`,\n                  icon: \"AlertCircleIcon\",\n                  variant: \"danger\",\n                  text: `Something went wrong, try again later`,\n                },\n              });\n            }\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: \"top-right\",\n              props: {\n                title: `Error`,\n                icon: \"AlertCircleIcon\",\n                variant: \"danger\",\n                text: `Something went wrong, try again later`,\n              },\n            });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n\n    resetSearch() {\n      Object.entries(this.formValues).forEach(([key, value]) => {\n        if (key == \"skills\") {\n          this.formValues[key] = [];\n        } else if (\n          key == \"lang_eng\" ||\n          key == \"lang_ar\" ||\n          key == \"lang_hind\" ||\n          key == \"appearance_presentable\"\n        ) {\n          this.formValues[key] = null;\n        } else {\n          this.formValues[key] = \"\";\n        }\n      });\n\n      console.log(this.formValues);\n    },\n\n    onClose() {\n      this.popoverShow = false;\n    },\n\n    statusVariant(ownerType) {\n      if (ownerType == \"Accommodation\") {\n        return \"warning\";\n      } else if (ownerType == \"Project\") {\n        return \"success\";\n      } else if (ownerType == \"Employee\") {\n        return \"primary\";\n      } else {\n        return \"light\";\n      }\n    },\n\n    isPdf(url) {\n      if (url.substr(url.lastIndexOf(\".\") + 1) == \"pdf\") {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    deleteAllocation(id) {\n      this.$swal({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Yes, delete it!\",\n        customClass: {\n          confirmButton: \"btn btn-danger\",\n          cancelButton: \"btn btn-outline-danger ml-1\",\n        },\n        buttonsStyling: false,\n      }).then((result) => {\n        if (result.value) {\n          axios\n            .get(\"/deleteAllocation\", {\n              params: {\n                id: id,\n              },\n            })\n            .then((response) => {\n              if (response.data.hasOwnProperty(\"success\")) {\n                if (response.data.success === true) {\n                  this.getEmployees();\n                  this.$toast({\n                    component: ToastificationContent,\n                    position: \"top-right\",\n                    props: {\n                      title: response.data.message,\n                      icon: \"EditIcon\",\n                      variant: \"success\",\n                    },\n                  });\n                  console.log(\"Employee deleted\");\n                } else {\n                  this.$toast({\n                    component: ToastificationContent,\n                    position: \"top-right\",\n                    props: {\n                      title: `Error`,\n                      icon: \"AlertCircleIcon\",\n                      variant: \"danger\",\n                      text: response.data.message,\n                    },\n                  });\n                }\n              } else {\n                this.$toast({\n                  component: ToastificationContent,\n                  position: \"top-right\",\n                  props: {\n                    title: `Error`,\n                    icon: \"AlertCircleIcon\",\n                    variant: \"danger\",\n                    text: `Something went wrong, try again later`,\n                  },\n                });\n              }\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }\n      });\n    },\n\n    getEmployees() {\n      this.isBusy = true;\n\n      axios\n        .get(\"/getAllocatedResources\", {\n          params: {\n            searchTerm: this.searchTerm,\n            page_no: this.page,\n            advanceSearch: this.formValues,\n          },\n        })\n\n        .then((response) => {\n          console.log(\"response\", response.data.data);\n          this.items = response.data.data;\n          this.count = response.data.totalRows;\n          this.isBusy = false;\n\n          // TODO\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n\n    handlePageChange(value) {\n      this.page = value;\n      this.isBusy = true;\n      this.getEmployees();\n    },\n\n    searchTimeOut() {\n      let timeout = null;\n      clearTimeout(timeout);\n      // Make a new timeout set to go off in 800ms\n      timeout = setTimeout(() => {\n        this.page = 1;\n        this.getEmployees();\n      }, 800);\n    },\n  },\n};\n</script>\n\n<style lang=\"css\">\n.enlargeable-image .full {\n  z-index: 9999 !important;\n\n  background-color: rgba(0, 0, 0, 0.5) !important;\n}\n\n.customHead {\n  background-color: #06608f !important;\n  color: #fff;\n}\n</style>\n"]}]}
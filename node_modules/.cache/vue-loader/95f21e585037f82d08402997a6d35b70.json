{"remainingRequest":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\ResourceCenter\\allocateResourceView.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\ResourceCenter\\allocateResourceView.vue","mtime":1659630420226},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1658911433225},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1658911433727},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1658911433648},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1658911433727}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojc2lnbmF0dXJlIHsKYm9yZGVyOiBkb3VibGUgM3B4IHRyYW5zcGFyZW50Owpib3JkZXItcmFkaXVzOiA1cHg7CmJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh3aGl0ZSwgd2hpdGUpLAogIHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgdG9wIGxlZnQsICM0YmM1ZTgsICM5ZjYyNzQpOwpiYWNrZ3JvdW5kLW9yaWdpbjogYm9yZGVyLWJveDsKYmFja2dyb3VuZC1jbGlwOiBjb250ZW50LWJveCwgYm9yZGVyLWJveDsKfQoK"},{"version":3,"sources":["allocateResourceView.vue"],"names":[],"mappingsgvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"allocateResourceView.vue","sourceRoot":"src/views/table/bs-table/ResourceCenter","sourcesContent":["<template>\n<b-form @submit.prevent>\n  <b-row>\n    <b-col md=\"6\">\n      <b-form-group\n        label=\"Resource Type\"\n        label-for=\"v-resourceType\"\n      >\n        <v-select\n          id=\"v-resourceType\"\n          v-model=\"resourceType\"\n          :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n          :options=\"resourceTypes\"\n\n          label=\"text\"\n          :reduce=\"text => text.value\"\n          @input=\"resourceTypeChange\"\n           >\n          </v-select>\n      </b-form-group>\n    </b-col>\n\n    <b-col md=\"6\">\n\n      <b-form-group\n        label=\"Resource Owner\"\n        label-for=\"autosuggest__input\"\n      >\n        <vue-autosuggest\n\n          :suggestions=\"filteredOptions\"\n\n          :limit=\"10\"\n          :input-props=\"{id:'autosuggest__input',class:'form-control', placeholder:'Search with name or ID'}\"\n          @input=\"onInputChange\"\n\n          @selected=\"assignOwnerField\"\n        >\n          <template slot-scope=\"{suggestion}\">\n            <span class=\"my-suggestion-item\">{{ suggestion.item.name }}, {{ suggestion.item.id }} </span>\n          </template>\n        </vue-autosuggest>\n      </b-form-group>\n    </b-col>\n    <b-col md=\"6\">\n\n      <label for=\"v-dob\">Date</label>\n      <b-input-group>\n\n        <cleave\n          id=\"date\"\n          v-model=\"allocationDate\"\n          class=\"form-control\"\n          :raw=\"false\"\n          :options=\"options.date\"\n          placeholder=\"YYYY-MM-DD\"\n        />\n\n        <b-input-group-append>\n          <b-form-datepicker\n            v-model=\"allocationDate\"\n            show-decade-nav\n            button-only\n            right\n            locale=\"en-US\"\n            aria-controls=\"v-dob\"\n          />\n        </b-input-group-append>\n\n      </b-input-group>\n    </b-col>\n\n    <b-col md=\"6\">\n      <b-form-group\n        label=\"Attachment\"\n        label-for=\"v-attachment\"\n      >\n\n        <b-form-file\n          id=\"v-attachment\"\n          v-model=\"attachmentFile\"\n          accept=\"image/* , .pdf\"\n          placeholder=\"Upload Attachment...\"\n          drop-placeholder=\"Drop file here...\"\n        />\n      </b-form-group>\n    </b-col>\n    <b-col  md=\"6\" v-if=\"locationField\">\n      <b-form-group\n        label=\"Location\"\n        label-for=\"resourceOwnerLocation\"\n      >\n        <v-select\n          id=\"resourceOwnerLocation\"\n          v-model=\"resourceOwnerLocation\"\n          :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n          :options=\"fillerdLocations\"\n          label=\"text\"\n          :reduce=\"text => text.text\"\n        />\n      </b-form-group>\n    </b-col>\n\n    <b-col md=\"12\">\n      <b-form-group\n        label=\"Notes\"\n        label-for=\"notes\"\n      >\n\n        <b-form-textarea\n          id=\"notes\"\n          v-model=\"notes\"\n          placeholder=\"Notes\"\n          rows=\"1\"\n        />\n      </b-form-group>\n    </b-col>\n    <!-- form repeate -->\n    <b-col md=\"12\">\n\n      <b-card title=\"Resource Items\">\n        <div>\n          <b-form\n            ref=\"form\"\n            :style=\"{height: trHeight}\"\n            class=\"repeater-form\"\n            @submit.prevent=\"repeateAgain\"\n          >\n\n            <!-- Row Loop -->\n            <b-row\n              v-for=\"(item, index) in items\"\n              :id=\"item.id\"\n              :key=\"item.id\"\n              ref=\"row\"\n            >\n\n              <!-- Item Name -->\n              <b-col md=\"5\">\n                <b-form-group\n                  label=\"Item Name\"\n                  label-for=\"item-name\"\n                >\n\n                  <v-select\n                    id=\"item-name\"\n                    v-model=\"item.name\"\n                    :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                    :options=\"resourceItems\"\n\n                    label=\"text\"\n                    :reduce=\"text => text.value\"\n                  />\n\n                </b-form-group>\n              </b-col>\n\n              <!-- Quantity -->\n              <b-col md=\"5\">\n                <b-form-group\n                  label=\"Quantity\"\n                  label-for=\"quantity\"\n                >\n                  <b-form-input\n                    id=\"quantity\"\n                    v-model=\"item.quantity\"\n                    type=\"number\"\n                    placeholder=\"1\"\n                  />\n                </b-form-group>\n              </b-col>\n\n              <!-- Remove Button -->\n              <b-col\n                md=\"2\"\n                class=\"mb-50\"\n              >\n                <b-button\n                  v-ripple.400=\"'rgba(234, 84, 85, 0.15)'\"\n                  variant=\"outline-danger\"\n                  class=\"mt-0 mt-md-2\"\n                  @click=\"removeItem(index)\"\n                >\n                  <feather-icon\n                    icon=\"XIcon\"\n                    class=\"mr-25\"\n                  />\n                  <span>Delete</span>\n                </b-button>\n              </b-col>\n              <b-col cols=\"12\">\n                <hr>\n              </b-col>\n            </b-row>\n\n          </b-form>\n        </div>\n        <b-button\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          variant=\"primary\"\n          @click=\"repeateAgain\"\n        >\n          <feather-icon\n            icon=\"PlusIcon\"\n            class=\"mr-25\"\n          />\n          <span>Add more</span>\n        </b-button>\n\n      </b-card>\n    </b-col>\n\n    <!-- <b-col md=\"6\">\n      <b-card title=\"Signature\">\n        <VueSignaturePad\n          id=\"signature\"\n          ref=\"signaturePad\"\n          class=\"col-12\" \n          height=\"250px\"\n          :options=\"options\"\n        />\n        <b-button\n          v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n          variant=\"danger\"\n          class=\"mt-1\"\n          @click=\"clearCanvas\"\n        >\n          Clear\n        </b-button>\n      </b-card>\n\n    </b-col> -->\n\n    <!-- submit and reset -->\n    <b-col md=\"12\">\n      <b-button\n        v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n        type=\"submit\"\n        variant=\"primary\"\n        class=\"mr-1\"\n        :disabled=\"isSubmitting\"\n        @click=\"submitResource\"\n      >\n        <b-spinner\n          v-if=\"isSubmitting\"\n          small\n        />\n        <span v-if=\"isSubmitting\">Please Wait</span>\n\n        <span v-if=\"!isSubmitting\">Submit</span>\n\n      </b-button>\n\n    </b-col>\n  </b-row>\n</b-form>\n</template>\n\n<script>\nimport {\nBRow, BCol, BFormGroup, BFormInput, BFormCheckbox, BForm, BButton, BFormDatepicker, BCard, BSpinner, BFormFile, BFormTextarea, BInputGroupAppend, BInputGroup,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport vSelect from 'vue-select'\nimport { VueAutosuggest } from 'vue-autosuggest'\nimport axios from '@axios'\nimport { heightTransition } from '@core/mixins/ui/transition'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\n\nimport Cleave from 'vue-cleave-component'\nimport 'cleave.js/dist/addons/cleave-phone.us'\n\nexport default {\ncomponents: {\n  BRow,\n  BCol,\n  BFormGroup,\n  BFormInput,\n  BFormCheckbox,\n  BForm,\n  BButton,\n  BFormDatepicker,\n  vSelect,\n  VueAutosuggest,\n  BCard,\n  BSpinner,\n  BFormFile,\n  BFormTextarea,\n  BInputGroupAppend,\n  Cleave,\n  BInputGroup,\n\n},\ndirectives: {\n  Ripple,\n},\n\nmixins: [heightTransition],\n\ndata() {\n  return {\n    options: {\n      penColor: '#000',\n      backgroundColor: '#fff',\n      phone: {\n        prefix: '9665',\n        blocks: [12],\n        uppercase: true,\n        noImmediatePrefix: true,\n      },\n      date: {\n        date: true,\n        delimiter: '-',\n        datePattern: ['Y', 'm', 'd'],\n      },\n      account_number: {\n        blocks: [15],\n        uppercase: true,\n      },\n      iqama_number: {\n        blocks: [10],\n        uppercase: true,\n      },\n      cr_number: {\n        blocks: [10],\n        uppercase: true,\n      },\n      iban: {\n        prefix: 'SA',\n        blocks: [24],\n        uppercase: true,\n        noImmediatePrefix: true,\n      },\n    },\n\n    isSubmitting: false,\n\n    resourceTypes: [\n      { value: 'Employee', text: 'Employee' },\n      { value: 'Project', text: 'Project' },\n      { value: 'Accommodation', text: 'Accommodation' },\n    ],\n\n    resourceType: 'Employee',\n    filteredOptions: [],\n    fillerdLocations: [],\n    resourceOwner: '',\n    allocationDate: '',\n    attachmentFile: null,\n    attachment: '',\n    signature: '',\n    notes: '',\n    resourceOwnerLocation:'',\n\n    resourceItems: [],\n    items: [{\n      id: 1,\n      name: '',\n      quantity: '',\n    }],\n    nextTodoId: 2,\n    locationField: false,\n  }\n},\nmounted() {\n  this.initTrHeight()\n  this.getResourceItems()\n},\ncreated() {\n  window.addEventListener('resize', this.initTrHeight)\n},\ndestroyed() {\n  window.removeEventListener('resize', this.initTrHeight)\n},\nmethods: {\n  clearCanvas() {\n    this.$refs.signaturePad.clearSignature()\n  },\n\n  submitResource() {\n    this.isSubmitting = true\n\n    /* var sign = this.$refs.signaturePad.toData();\n      var isEmpty = this.$refs.signaturePad.isEmpty(); */\n    // const { isEmpty, data } = this.$refs.signaturePad.saveSignature()\n    // const sign = data\n    // if (isEmpty) {\n      // this.$toast({\n      //   component: ToastificationContent,\n      //   position: 'top-right',\n      //   props: {\n      //     title: 'Signature missing',\n      //     icon: 'AlertCircleIcon',\n      //     variant: 'danger',\n\n      //   },\n      // })\n\n      // this.isSubmitting = false\n    // } else {\n      // this.signature = sign\n      if (this.attachmentFile != null) {\n        this.uploadImg(this.attachmentFile)\n      } else {\n        axios.post('/allocateResource', {\n          resourceOwnerType: this.resourceType,\n          resourceOwnerId: this.resourceOwner,\n          allocationDate: this.allocationDate,\n          resource_owner_location: this.resourceOwnerLocation,\n          attachment: this.attachment,\n          resourceItems: this.items,\n          notes: this.notes,\n          signature: this.signature,\n\n        }).then(response => {\n          if (response.data.hasOwnProperty('success')) {\n            if (response.data.success === true) {\n              console.log(response.data.data)\n\n              this.$router.replace('/allocated_resources')\n                .then(() => {\n                  this.$toast({\n                    component: ToastificationContent,\n                    position: 'top-right',\n                    props: {\n                      title: response.data.message,\n                      icon: 'EditIcon',\n                      variant: 'success',\n                    },\n                  })\n                })\n            } else {\n              this.isSubmitting = false\n\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: response.data.message,\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n\n                },\n              })\n            }\n          } else {\n            this.isSubmitting = false\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        }).catch(error => {\n          console.error(error)\n        })\n      }\n    // }\n  },\n\n  uploadImg(img) {\n    const formData = new FormData()\n    formData.append('image', img)\n\n    axios.post('/imgUpload',\n      formData).then(response => {\n      console.log(response)\n      if (response.data.hasOwnProperty('success')) {\n        if (response.data.success === true) {\n          /* this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: `Done`,\n                    icon: 'EditIcon',\n                    variant: 'success',\n                    text: response.data.message,\n                  },\n                }) */\n\n          console.log('imgUploadResponce', response.data)\n          this.attachment = response.data.data.image\n          // create purchase start -------------------------------------------------------------------\n          console.log(this.signature)\n          axios.post('/allocateResource', {\n            resourceOwnerType: this.resourceType,\n            resourceOwnerId: this.resourceOwner,\n            resource_owner_location: this.resourceOwnerLocation,\n            allocationDate: this.allocationDate,\n            attachment: this.attachment,\n            resourceItems: this.items,\n            notes: this.notes,\n            signature: this.signature,\n          }).then(response => {\n            if (response.data.hasOwnProperty('success')) {\n              if (response.data.success === true) {\n                console.log(response.data.data)\n\n                this.$router.replace('/allocated_resources')\n                  .then(() => {\n                    this.$toast({\n                      component: ToastificationContent,\n                      position: 'top-right',\n                      props: {\n                        title: response.data.message,\n                        icon: 'EditIcon',\n                        variant: 'success',\n                      },\n                    })\n                  })\n              } else {\n                this.isSubmitting = false\n\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: `! ${response.data.message}`,\n                    icon: 'AlertCircleIcon',\n                    variant: 'danger',\n                  },\n                })\n              }\n            } else {\n              this.isSubmitting = false\n\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: 'Error',\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                  text: 'Something went wrong, try again later',\n                },\n              })\n            }\n          }).catch(error => {\n            console.error(error)\n          })\n          // create purchase end-----------------------------------------------------------------------------\n        } else {\n          this.isSubmitting = false\n\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: response.data.message,\n            },\n          })\n        }\n      } else {\n        this.isSubmitting = false\n\n        this.$toast({\n          component: ToastificationContent,\n          position: 'top-right',\n          props: {\n            title: 'Error',\n            icon: 'AlertCircleIcon',\n            variant: 'danger',\n            text: 'Something went wrong, try again later',\n          },\n        })\n      }\n    }).catch(error => {\n      console.error(error)\n    })\n  },\n    onLocationInputChange(text) {\n    if (text === '' || text === undefined) {\n      return\n    }\n  \n    axios.get('/getClientLocations', {\n      params: {\n        client_code: text,\n      },\n    }).then(response => {\n      if (response.data.hasOwnProperty('success')) {\n        if (response.data.success === true) {\n          console.log(response.data.data.data , 'location_name faraz')\n          this.fillerdLocations = response.data.data\n        } else {\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: response.data.message,\n            },\n          })\n        }\n      } else {\n        this.$toast({\n          component: ToastificationContent,\n          position: 'top-right',\n          props: {\n            title: 'Error',\n            icon: 'AlertCircleIcon',\n            variant: 'danger',\n            text: 'Something went wrong, try again later',\n          },\n        })\n      }\n    }).catch(error => {\n      console.error(error)\n    })\n  },\n  resourceTypeChange(val) {\n    this.getResourceItems()\n  },\n\n  assignOwnerField(item) {\n    if (item) {\n      this.resourceOwner = item.item.id\n      this.onLocationInputChange(this.resourceOwner)\n      this.client_code = this.resourceOwner\n      console.log(this.client_code, 'shopcode')\n    }\n  },\n\n  onInputChange(text) {\n    if (text === '' || text === undefined) {\n      return\n    }\n\n    axios.get('/getEmployeeDropdown', {\n      params: {\n        id: text,\n        resourceType: this.resourceType,\n      },\n    }).then(response => {\n      if (response.data.hasOwnProperty('success')) {\n        if (response.data.success === true) {\n          console.log(response.data.data)\n          this.filteredOptions = [{ data: response.data.data }]\n\n          console.log('Resource Owners Fetched')\n        } else {\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: response.data.message,\n            },\n          })\n        }\n      } else {\n        this.$toast({\n          component: ToastificationContent,\n          position: 'top-right',\n          props: {\n            title: 'Error',\n            icon: 'AlertCircleIcon',\n            variant: 'danger',\n            text: 'Something went wrong, try again later',\n          },\n        })\n      }\n    }).catch(error => {\n      console.error(error)\n    })\n  },\n\n  getResourceItems() {\n    axios.get('/getResourceItemsDropdown', {\n      params: {\n        resourceType: this.resourceType,\n      },\n    }).then(response => {\n      if (response.data.hasOwnProperty('success')) {\n        if (response.data.success === true) {\n          /* console.log(response.data.data); */\n          if (this.resourceType == 'Project') {\n          this.locationField = true;\n      } else {\n          this.locationField = false;\n      }\n          this.resourceItems = response.data.data\n\n          console.log('Resource Items Fetched')\n        } else {\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: 'Something went wrong, try again later',\n            },\n          })\n        }\n      } else {\n        this.$toast({\n          component: ToastificationContent,\n          position: 'top-right',\n          props: {\n            title: 'Error',\n            icon: 'AlertCircleIcon',\n            variant: 'danger',\n            text: 'Something went wrong, try again later',\n          },\n        })\n      }\n    }).catch(error => {\n      console.error(error)\n    })\n  },\n\n  repeateAgain() {\n    this.items.push({\n      id: this.nextTodoId += this.nextTodoId,\n      name: '',\n      quantity: '',\n    })\n    console.log(this.items)\n    this.$nextTick(() => {\n      this.trAddHeight(this.$refs.row[0].offsetHeight)\n    })\n  },\n  removeItem(index) {\n    this.items.splice(index, 1)\n    this.trTrimHeight(this.$refs.row[0].offsetHeight)\n  },\n  initTrHeight() {\n    this.trSetHeight(null)\n    this.$nextTick(() => {\n      this.trSetHeight(this.$refs.form.scrollHeight)\n    })\n  },\n},\n}\n</script>\n\n<style>\n\n#signature {\nborder: double 3px transparent;\nborder-radius: 5px;\nbackground-image: linear-gradient(white, white),\n  radial-gradient(circle at top left, #4bc5e8, #9f6274);\nbackground-origin: border-box;\nbackground-clip: content-box, border-box;\n}\n\n</style>\n"]}]}
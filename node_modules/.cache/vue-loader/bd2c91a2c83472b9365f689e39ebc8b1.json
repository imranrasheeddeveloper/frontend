{"remainingRequest":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Desktop/new-splitur/frontend/src/views/table/bs-table/paymnetTransactions/list_paymnetTransactions.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/src/views/table/bs-table/paymnetTransactions/list_paymnetTransactions.vue","mtime":1660305999969},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/css-loader/dist/cjs.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/postcss-loader/src/index.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVubGFyZ2VhYmxlLWltYWdlIC5mdWxsICB7CiAgei1pbmRleDo5OTk5ICFpbXBvcnRhbnQ7CgogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC41KSAhaW1wb3J0YW50Owp9CgouY3VzdG9tSGVhZHsKCiAgYmFja2dyb3VuZC1jb2xvcjogIzI0NkJGRCAhaW1wb3J0YW50OwogIGNvbG9yOiNmZmY7Cn0KCi50YWJzX21hcmdpbl9jYWxzc3sKICBtYXJnaW4tdG9wOiA1cHggIWltcG9ydGFudDsKICBtYXJnaW4tYm90dG9tOiA1cHggIWltcG9ydGFudDsKCn0KCg=="},{"version":3,"sources":["list_paymnetTransactions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgVA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"list_paymnetTransactions.vue","sourceRoot":"src/views/table/bs-table/paymnetTransactions","sourcesContent":["<template>\n\n  <div>\n\n    <!-- search input -->\n    <div class=\"custom-search d-flex justify-content-between\">\n      <b-form-group>\n        <div class=\"d-flex align-items-center\">\n          <!-- <label class=\"mr-1\">Search</label> -->\n\n          <b-input-group>\n            <b-input-group-prepend>\n              <b-button\n                variant=\"outline-primary\"\n                @click=\"page=1, getPymentRequests()\"\n              >\n                <feather-icon icon=\"SearchIcon\" />\n              </b-button>\n            </b-input-group-prepend>\n            <b-form-input\n              v-model=\"searchTerm\"\n              placeholder=\"Search\"\n              type=\"text\"\n              class=\" d-inline-block\"\n              @keyup=\"searchTimeOut()\"\n            />\n          </b-input-group>\n\n        </div>\n      </b-form-group>\n\n    </div>\n\n    <b-table\n      :items=\"items\"\n      :fields=\"fields\"\n      striped\n      responsive\n      class=\"mb-0\"\n      :busy=\"isBusy\"\n    >\n      <template #cell(Options)=\"row\">\n\n        <div>\n          <!-- As `row.showDetails` is one-way, we call the toggleDetails function on @change -->\n          <b-form-group>\n            <div class=\"d-flex align-items-center w-fit-content\">\n              <b-input-group>\n                <b-input-group-prepend>\n                  <b-button\n                    v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                    size=\"sm\"\n                    variant=\"outline-primary\"\n                    :class=\"row.detailsShowing ? 'active' : ''\"\n                    @click=\"row.toggleDetails\"\n                  >\n                    <feather-icon\n                      v-if=\"row.detailsShowing\"\n                      icon=\"ChevronUpIcon\"\n                    />\n\n                    <feather-icon\n                      v-else\n                      icon=\"ChevronDownIcon\"\n                    />\n                  </b-button>\n                </b-input-group-prepend>\n\n              </b-input-group>\n            </div>\n          </b-form-group>\n        </div>\n      </template>\n\n      <!-- full detail on click -->\n\n      <template #row-details=\"row\">\n        <b-card no-body>\n          <b-row>\n            <b-col\n              cols=\"12\"\n              class=\"m-0 p-2\"\n            >\n              <b-card-text>\n                <b-row class=\"border-bottom\">\n                  <b-col cols=\"2\">\n                    <strong>Group Title</strong>\n                  </b-col>\n                  <b-col cols=\"10\">\n                    {{ row.item.groups_payment_transactions.group_title }}\n                  </b-col>\n                </b-row>\n\n                <b-row class=\"border-bottom\">\n                  <b-col cols=\"2\">\n                    <strong>Group Id</strong>\n                  </b-col>\n                  <b-col cols=\"10\">\n                    {{ row.item.groups_payment_transactions.group_id }}\n                  </b-col>\n                </b-row>\n                <b-row class=\"border-bottom\">\n                  <b-col cols=\"2\">\n                    <strong>Sub Category Title</strong>\n                  </b-col>\n                  <b-col cols=\"10\">\n                    {{ row.item.groups_payment_transactions.sub_category.sub_cat_title }}\n                  </b-col>\n                </b-row>\n                <b-row class=\"border-bottom\">\n                  <b-col cols=\"2\">\n                    <strong>Category</strong>\n                  </b-col>\n                  <b-col cols=\"10\">\n                    {{ row.item.groups_payment_transactions.sub_category.category.title }}\n                  </b-col>\n                </b-row>\n              </b-card-text>\n            </b-col>\n          </b-row>\n        </b-card>\n      </template>\n\n      <template #table-busy>\n        <div class=\"text-center text-primary my-2\">\n          <b-spinner class=\"align-middle\" />\n          <strong>Loading...</strong>\n        </div>\n      </template>\n\n    </b-table>\n\n    <div class=\"d-flex justify-content-end\">\n      <b-pagination\n        v-model=\"page\"\n        :total-rows=\"count\"\n        :per-page=\"pageSize\"\n        pills\n        @change=\"handlePageChange\"\n      />\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport axios from '@axios'\nimport vSelect from 'vue-select'\nimport {\n  BTable, BFormCheckbox, BButton, BCard, BRow, BCol, BAvatar, BBadge, BImg, BTabs, BTab, BCardText, BPagination, BFormGroup, BFormInput, BFormSelect, BDropdown, BDropdownItem, BInputGroup, BInputGroupAppend, BInputGroupPrepend, BFormDatepicker, BFormFile, BFormTextarea, BFormRadio, BForm, BFormCheckboxGroup, BFormRating, BListGroupItem, BListGroup, BPopover, BSpinner,\n} from 'bootstrap-vue'\n\nimport Ripple from 'vue-ripple-directive'\nimport EnlargeableImage from '@diracleo/vue-enlargeable-image'\nimport Cleave from 'vue-cleave-component'\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport { VueAutosuggest } from 'vue-autosuggest'\n\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\n\nexport default {\n  components: {\n    BCardCode,\n    BTable,\n    BButton,\n    BFormCheckbox,\n    BCard,\n    BRow,\n    BCol,\n    BBadge,\n    BAvatar,\n    BImg,\n    EnlargeableImage,\n    BTabs,\n    BTab,\n    BCardText,\n    BPagination,\n    BFormGroup,\n    BFormInput,\n    BFormSelect,\n    BDropdown,\n    BDropdownItem,\n    BInputGroup,\n    BInputGroupAppend,\n    BInputGroupPrepend,\n    BFormDatepicker,\n    BFormFile,\n    BFormTextarea,\n    BFormRadio,\n    BForm,\n    vSelect,\n    BFormCheckboxGroup,\n    BFormRating,\n    BListGroup,\n    BListGroupItem,\n    BPopover,\n    BSpinner,\n    Cleave,\n    VueAutosuggest,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      popoverShow: false,\n      exportLimit: '',\n      isBusy: true,\n      fields: [{ key: 'Options', thClass: 'customHead' }, {\n        key: 'id', label: 'Id', sortable: true, thClass: 'customHead',\n      }, {\n        key: 'amount', label: 'Amount', sortable: true, thClass: 'customHead',\n      }, {\n        key: 'payment_status', label: 'Payment Type', sortable: true, thClass: 'customHead',\n      }, {\n        key: 'createdAt', labe: 'Date', sortable: true, thClass: 'customHead',\n      },\n      ],\n      items: [\n      ],\n\n      searchTerm: '',\n      pageSize: 10,\n      page: 1,\n      count: 0,\n\n      formValues: {\n        request_type: '',\n        request_owner: '',\n        request_owner_id: '',\n        payment_type: '',\n        status: '',\n\n      },\n\n    }\n  },\n\n  mounted() {\n    this.getPymentRequests()\n  },\n  methods: {\n\n    closeSearch() {\n      this.$refs.searchModel.hide()\n    },\n\n    assignOwnerField(event) {\n      this.formValues.request_owner = event.item.name\n      this.formValues.request_owner_id = event.item.id\n\n      console.log('item request_owner', this.formValues.request_owner)\n      console.log('item request_owner_id', this.formValues.request_owner_id)\n    },\n\n    resetSearch() {\n      Object.entries(this.formValues).forEach(([key, value]) => {\n        if (key == 'skills') {\n          this.formValues[key] = []\n        } else if (key == 'lang_eng' || key == 'lang_ar' || key == 'lang_hind' || key == 'appearance_presentable') {\n          this.formValues[key] = null\n        } else {\n          this.formValues[key] = ''\n        }\n      })\n\n      console.log(this.formValues)\n    },\n\n    onClose() {\n      this.popoverShow = false\n    },\n\n    statusVariant(ownerType) {\n      if (ownerType === 'Unpaid') {\n        return 'danger'\n      }\n      if (ownerType === 'Paid') {\n        return 'success'\n      }\n      if (ownerType === 'Partially Paid') {\n        return 'warning'\n      }\n\n      return 'primary'\n    },\n\n    PaymentTypeVariant(PaymentType) {\n      if (PaymentType == 'Cash') {\n        return 'primary'\n      }\n      if (PaymentType == 'Bank Transfer') {\n        return 'success'\n      }\n      return 'primary'\n    },\n\n    getPymentRequests() {\n      this.isBusy = true\n\n      axios.get(`/groups/all_payment_transaction/${this.page}`)\n\n        .then(response => {\n          console.log('response', response.data.data)\n          this.items = response.data.data\n          this.count = response.data.totalRows\n          this.isBusy = false\n\n          // TODO\n        }).catch(error => {\n          console.error(error)\n        })\n    },\n\n    handlePageChange(value) {\n      this.page = value\n      this.isBusy = true\n      this.getPymentRequests()\n    },\n\n    searchTimeOut() {\n      let timeout = null\n      clearTimeout(timeout)\n      // Make a new timeout set to go off in 800ms\n      timeout = setTimeout(() => {\n        this.page = 1\n        this.getPymentRequests()\n      }, 800)\n    },\n  },\n}\n</script>\n\n<style lang=\"css\" >\n\n.enlargeable-image .full  {\n  z-index:9999 !important;\n\n  background-color: rgba(0,0,0,0.5) !important;\n}\n\n.customHead{\n\n  background-color: #246BFD !important;\n  color:#fff;\n}\n\n.tabs_margin_calss{\n  margin-top: 5px !important;\n  margin-bottom: 5px !important;\n\n}\n\n</style>\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-autosuggest.scss';\n</style>\n"]}]}
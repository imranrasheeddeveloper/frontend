{"remainingRequest":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\invoice\\editInvoiceView.vue?vue&type=template&id=183e5c24&","dependencies":[{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\invoice\\editInvoiceView.vue","mtime":1659103100762},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1658911433727},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1658911433727}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxiLWZvcm0gQHN1Ym1pdC5wcmV2ZW50PgogIDxiLXJvdz4KCiAgICA8Yi1jb2wgbWQ9IjYiPgogICAgICA8Yi1mb3JtLWdyb3VwCiAgICAgICAgbGFiZWw9IkNsaWVudCIKICAgICAgICBsYWJlbC1mb3I9ImNsaWVudCIKICAgICAgPgoKICAgICAgICA8dnVlLWF1dG9zdWdnZXN0CgogICAgICAgICAgdi1tb2RlbD0ib2xkQ2xpZW50IgoKICAgICAgICAgIDpzdWdnZXN0aW9ucz0iZmlsdGVyZWRPcHRpb25zIgogICAgICAgICAgOmxpbWl0PSIxMCIKICAgICAgICAgIDppbnB1dC1wcm9wcz0ie2lkOidhdXRvc3VnZ2VzdF9faW5wdXQnLGNsYXNzOidmb3JtLWNvbnRyb2wnLCBwbGFjZWhvbGRlcjonU2VhcmNoIHdpdGggbmFtZSBvciBJRCd9IgogICAgICAgICAgQGlucHV0PSJvbklucHV0Q2hhbmdlIgogICAgICAgICAgQHNlbGVjdGVkPSJhc3NpZ25Pd25lckZpZWxkIgogICAgICAgID4KICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJ7c3VnZ2VzdGlvbn0iPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0ibXktc3VnZ2VzdGlvbi1pdGVtIj57eyBzdWdnZXN0aW9uLml0ZW0ubmFtZSB9fSwge3sgc3VnZ2VzdGlvbi5pdGVtLmlkIH19IDwvc3Bhbj4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgPC92dWUtYXV0b3N1Z2dlc3Q+CgogICAgICA8L2ItZm9ybS1ncm91cD4KICAgIDwvYi1jb2w+CgogICAgPGItY29sIG1kPSI2Ij4KCiAgICAgIDxsYWJlbCBmb3I9InYtZG9iIj5EYXRlPC9sYWJlbD4KICAgICAgPGItaW5wdXQtZ3JvdXA+CgogICAgICAgIDxjbGVhdmUKICAgICAgICAgIGlkPSJkYXRlIgogICAgICAgICAgdi1tb2RlbD0iZm9ybVZhbHVlcy5pbnZvaWNlX2RhdGUiCiAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIgogICAgICAgICAgOnJhdz0iZmFsc2UiCiAgICAgICAgICA6b3B0aW9ucz0ib3B0aW9ucy5kYXRlIgogICAgICAgICAgcGxhY2Vob2xkZXI9IllZWVktTU0tREQiCiAgICAgICAgLz4KCiAgICAgICAgPGItaW5wdXQtZ3JvdXAtYXBwZW5kPgogICAgICAgICAgPGItZm9ybS1kYXRlcGlja2VyCiAgICAgICAgICAgIHYtbW9kZWw9ImZvcm1WYWx1ZXMuaW52b2ljZV9kYXRlIgogICAgICAgICAgICBzaG93LWRlY2FkZS1uYXYKICAgICAgICAgICAgYnV0dG9uLW9ubHkKICAgICAgICAgICAgcmlnaHQKICAgICAgICAgICAgbG9jYWxlPSJlbi1VUyIKICAgICAgICAgICAgYXJpYS1jb250cm9scz0iZGF0ZSIKICAgICAgICAgIC8+CiAgICAgICAgPC9iLWlucHV0LWdyb3VwLWFwcGVuZD4KCiAgICAgIDwvYi1pbnB1dC1ncm91cD4KCiAgICA8L2ItY29sPgoKICAgIDxiLWNvbCBtZD0iNiI+CiAgICAgIDxiLWZvcm0tZ3JvdXAKICAgICAgICBsYWJlbD0iU3RhdHVzIgogICAgICAgIGxhYmVsLWZvcj0ic3RhdHVzIgogICAgICA+CiAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICBpZD0ic3RhdHVzIgogICAgICAgICAgdi1tb2RlbD0iZm9ybVZhbHVlcy5zdGF0dXMiCiAgICAgICAgICA6ZGlyPSIkc3RvcmUuc3RhdGUuYXBwQ29uZmlnLmlzUlRMID8gJ3J0bCcgOiAnbHRyJyIKICAgICAgICAgIDpvcHRpb25zPSJzdGF0dXNlcyIKCiAgICAgICAgICBsYWJlbD0idGV4dCIKICAgICAgICAgIDpyZWR1Y2U9InRleHQgPT4gdGV4dC52YWx1ZSIKICAgICAgICAvPgogICAgICA8L2ItZm9ybS1ncm91cD4KICAgIDwvYi1jb2w+CgogICAgPGItY29sIG1kPSI2Ij4KICAgICAgPGItZm9ybS1ncm91cAogICAgICAgIGxhYmVsPSJMb2NhdGlvbiIKICAgICAgICBsYWJlbC1mb3I9ImxvY2F0aW9uX2VuIgogICAgICA+CiAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICBpZD0ibG9jYXRpb25fZW4iCiAgICAgICAgICB2LW1vZGVsPSJmb3JtVmFsdWVzLmxvY2F0aW9uX2VuIgogICAgICAgICAgOmRpcj0iJHN0b3JlLnN0YXRlLmFwcENvbmZpZy5pc1JUTCA/ICdydGwnIDogJ2x0ciciCiAgICAgICAgICA6b3B0aW9ucz0iZmlsbGVyZExvY2F0aW9ucyIKICAgICAgICAgIGxhYmVsPSJ0ZXh0IgogICAgICAgICAgOnJlZHVjZT0idGV4dCA9PiB0ZXh0LnRleHQiCiAgICAgICAgLz4KICAgICAgPC9iLWZvcm0tZ3JvdXA+CiAgICA8L2ItY29sPgoKICAgIDxiLWNvbCBtZD0iNiI+CiAgICAgIDxiLWZvcm0tZ3JvdXAKICAgICAgICBsYWJlbD0iSW52b2ljZSBBdHRhY2htZW50IgogICAgICAgIGxhYmVsLWZvcj0idi1wdXJjaGFzZU9yZGVyIgogICAgICA+CgogICAgICAgIDxiLWZvcm0tZmlsZQogICAgICAgICAgaWQ9InYtcHVyY2hhc2VPcmRlciIKICAgICAgICAgIHYtbW9kZWw9Imludm9pY2VBdHRhY2hlbWVudCIKICAgICAgICAgIGFjY2VwdD0iaW1hZ2UvKiAsIC5wZGYiCiAgICAgICAgICBwbGFjZWhvbGRlcj0iVXBsb2FkIGF0dGFjaG1lbnQuLi4iCiAgICAgICAgICBkcm9wLXBsYWNlaG9sZGVyPSJEcm9wIGZpbGUgaGVyZS4uLiIKICAgICAgICAvPgogICAgICA8L2ItZm9ybS1ncm91cD4KICAgIDwvYi1jb2w+CgogICAgPGItY29sCiAgICAgIHYtaWY9ImlzUGRmKHVpX2ludm9pY2VfY29weSkiCiAgICAgIG1kPSIyIgogICAgPgoKICAgICAgPGEKICAgICAgICBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IG10LW1kLTIiCiAgICAgICAgOmhyZWY9InVpX2ludm9pY2VfY29weSIKICAgICAgICB0YXJnZXQ9Il9ibGFuayIKICAgICAgPlZpZXcgZmlsZTwvYT4KICAgIDwvYi1jb2w+CiAgICA8Yi1jb2wKICAgICAgdi1lbHNlCiAgICAgIG1kPSIyIgogICAgPgogICAgICA8ZW5sYXJnZWFibGUtaW1hZ2UKICAgICAgICB2LWlmPSJ1aV9pbnZvaWNlX2NvcHkiCiAgICAgICAgOnNyYz0idWlfaW52b2ljZV9jb3B5IgogICAgICAgIDpzcmNfbGFyZ2U9InVpX2ludm9pY2VfY29weSIKICAgICAgICBhbmltYXRpb25fZHVyYXRpb249IjYwMCIKICAgICAgPgogICAgICAgIDxiLWltZwogICAgICAgICAgc3R5bGU9Im1heC1oZWlnaHQ6IDgwcHg7IgogICAgICAgICAgdGh1bWJuYWlsCiAgICAgICAgICA6c3JjPSJ1aV9pbnZvaWNlX2NvcHkiCiAgICAgICAgLz4KICAgICAgPC9lbmxhcmdlYWJsZS1pbWFnZT4KICAgIDwvYi1jb2w+CgogICAgPGItY29sCiAgICAgIHYtaWY9InVpX2ludm9pY2VfY29weSIKICAgICAgbWQ9IjQiCiAgICA+CiAgICAgIDxiLWJ1dHRvbgogICAgICAgIHYtcmlwcGxlLjQwMD0iJ3JnYmEoMjM0LCA4NCwgODUsIDAuMTUpJyIKICAgICAgICB2YXJpYW50PSJvdXRsaW5lLWRhbmdlciIKICAgICAgICBjbGFzcz0ibXQtMCBtdC1tZC0yIG1sLTAiCiAgICAgICAgQGNsaWNrPSJyZW1vdmVJbWFnZSgnaW52b2ljZV9jb3B5JykiCiAgICAgID4KICAgICAgICA8ZmVhdGhlci1pY29uCiAgICAgICAgICBpY29uPSJYSWNvbiIKICAgICAgICAgIGNsYXNzPSJtci0yNSIKICAgICAgICAvPgogICAgICAgIDxzcGFuPkRlbGV0ZTwvc3Bhbj4KICAgICAgPC9iLWJ1dHRvbj4KICAgIDwvYi1jb2w+CgogICAgPGItY29sIG1kPSI2Ij4KICAgICAgPGItZm9ybS1ncm91cAogICAgICAgIGxhYmVsPSJQZXJpb2QiCiAgICAgICAgbGFiZWwtZm9yPSJwZXJpb2QiCiAgICAgID4KICAgICAgICA8dnVlLW1vbnRobHktcGlja2VyCiAgICAgICAgICB2LW1vZGVsPSJmb3JtVmFsdWVzLnBlcmlvZCIKICAgICAgICAgIDptb250aC1sYWJlbHM9Im1vbnRoTGFiZWxBcnJheSIKICAgICAgICAgIEBzZWxlY3RlZD0ic2V0VGltZSIKICAgICAgICAvPgogICAgICA8L2ItZm9ybS1ncm91cD4KICAgIDwvYi1jb2w+CgogICAgPGItY29sIG1kPSIxMiI+CgogICAgICA8Yi1jYXJkIHRpdGxlPSJJbnZvaWNlIFNlcnZpY2VzIj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGItZm9ybQogICAgICAgICAgICByZWY9ImZvcm0iCiAgICAgICAgICAgIDpzdHlsZT0ie2hlaWdodDogdHJIZWlnaHR9IgogICAgICAgICAgICBjbGFzcz0icmVwZWF0ZXItZm9ybSIKICAgICAgICAgICAgQHN1Ym1pdC5wcmV2ZW50PSJyZXBlYXRlQWdhaW4iCiAgICAgICAgICA+CgogICAgICAgICAgICA8IS0tIFJvdyBMb29wIC0tPgogICAgICAgICAgICA8Yi1yb3cKICAgICAgICAgICAgICB2LWZvcj0iKGl0ZW0sIGluZGV4KSBpbiBmb3JtVmFsdWVzLnNlcnZpY2VzIgogICAgICAgICAgICAgIDppZD0iaXRlbS5pZCIKICAgICAgICAgICAgICA6a2V5PSJpdGVtLmlkIgogICAgICAgICAgICAgIHJlZj0icm93IgogICAgICAgICAgICA+CgogICAgICAgICAgICAgIDwhLS0gSXRlbSBOYW1lIC0tPgogICAgICAgICAgICAgIDxiLWNvbCBtZD0iNCI+CiAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwCiAgICAgICAgICAgICAgICAgIGxhYmVsPSJJdGVtIE5hbWUiCiAgICAgICAgICAgICAgICAgIGxhYmVsLWZvcj0iaXRlbS1uYW1lIgogICAgICAgICAgICAgICAgPgoKICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgaWQ9Iml0ZW0tbmFtZSIKICAgICAgICAgICAgICAgICAgICA6a2V5PSJpdGVtLmlkIgogICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9Iml0ZW0ubmFtZSIKICAgICAgICAgICAgICAgICAgICA6ZGlyPSIkc3RvcmUuc3RhdGUuYXBwQ29uZmlnLmlzUlRMID8gJ3J0bCcgOiAnbHRyJyIKICAgICAgICAgICAgICAgICAgICA6b3B0aW9ucz0icmVzb3VyY2VJdGVtcyIKICAgICAgICAgICAgICAgICAgICBsYWJlbD0idGV4dCIKICAgICAgICAgICAgICAgICAgICA6cmVkdWNlPSJ0ZXh0ID0+IHRleHQudmFsdWUiCiAgICAgICAgICAgICAgICAgIC8+CgogICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgPC9iLWNvbD4KCiAgICAgICAgICAgICAgPCEtLSBRdWFudGl0eSAtLT4KICAgICAgICAgICAgICA8Yi1jb2wgbWQ9IjIiPgogICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cAogICAgICAgICAgICAgICAgICBsYWJlbD0iUXVhbnRpdHkiCiAgICAgICAgICAgICAgICAgIGxhYmVsLWZvcj0icXVhbnRpdHkiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxiLWZvcm0taW5wdXQKICAgICAgICAgICAgICAgICAgICBpZD0icXVhbnRpdHkiCiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaXRlbS5xdWFudGl0eSIKICAgICAgICAgICAgICAgICAgICB0eXBlPSJudW1iZXIiCiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IjAiCiAgICAgICAgICAgICAgICAgICAgQGlucHV0PSJjYWxjdWxhdGVQcmljZXMiCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgICA8L2ItY29sPgoKICAgICAgICAgICAgICA8IS0tIFJhdGUgLS0+CiAgICAgICAgICAgICAgPGItY29sIG1kPSIyIj4KICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXAKICAgICAgICAgICAgICAgICAgbGFiZWw9IkFtb3VudCIKICAgICAgICAgICAgICAgICAgbGFiZWwtZm9yPSJhbW91bnQiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxiLWlucHV0LWdyb3VwPgogICAgICAgICAgICAgICAgICAgIDxiLWlucHV0LWdyb3VwLXByZXBlbmQgaXMtdGV4dD4KICAgICAgICAgICAgICAgICAgICAgIFNSCiAgICAgICAgICAgICAgICAgICAgPC9iLWlucHV0LWdyb3VwLXByZXBlbmQ+CiAgICAgICAgICAgICAgICAgICAgPGItZm9ybS1pbnB1dAogICAgICAgICAgICAgICAgICAgICAgaWQ9InJhdGUiCiAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpdGVtLmFtb3VudCIKICAgICAgICAgICAgICAgICAgICAgIHR5cGU9Im51bWJlciIKICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSIwIgogICAgICAgICAgICAgICAgICAgICAgQGlucHV0PSJjYWxjdWxhdGVQcmljZXMiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPC9iLWlucHV0LWdyb3VwPgoKICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPgogICAgICAgICAgICAgIDwvYi1jb2w+CgogICAgICAgICAgICAgIDwhLS0gdG90YWwgLS0+CiAgICAgICAgICAgICAgPGItY29sIG1kPSIzIj4KICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXAKICAgICAgICAgICAgICAgICAgbGFiZWw9IkxpbmUgVG90YWwiCiAgICAgICAgICAgICAgICAgIGxhYmVsLWZvcj0idG90YWwiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxiLWlucHV0LWdyb3VwPgogICAgICAgICAgICAgICAgICAgIDxiLWlucHV0LWdyb3VwLXByZXBlbmQgaXMtdGV4dD4KICAgICAgICAgICAgICAgICAgICAgIFNSCiAgICAgICAgICAgICAgICAgICAgPC9iLWlucHV0LWdyb3VwLXByZXBlbmQ+CiAgICAgICAgICAgICAgICAgICAgPGItZm9ybS1pbnB1dAogICAgICAgICAgICAgICAgICAgICAgaWQ9InRvdGFsIgogICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaXRlbS5ncmFuZFRvdGFsID0gaXRlbS5xdWFudGl0eSAqIGl0ZW0uYW1vdW50IgogICAgICAgICAgICAgICAgICAgICAgdHlwZT0ibnVtYmVyIgogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IjEiCiAgICAgICAgICAgICAgICAgICAgICByZWFkb25seQogICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgIDwvYi1pbnB1dC1ncm91cD4KCiAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgICA8L2ItY29sPgoKICAgICAgICAgICAgICA8IS0tIFJlbW92ZSBCdXR0b24gLS0+CiAgICAgICAgICAgICAgPGItY29sCiAgICAgICAgICAgICAgICBtZD0iMSIKICAgICAgICAgICAgICAgIGNsYXNzPSJtYi01MCIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8Yi1idXR0b24KICAgICAgICAgICAgICAgICAgdi1yaXBwbGUuNDAwPSIncmdiYSgyMzQsIDg0LCA4NSwgMC4xNSknIgogICAgICAgICAgICAgICAgICB2YXJpYW50PSJvdXRsaW5lLWRhbmdlciIKICAgICAgICAgICAgICAgICAgY2xhc3M9Im10LTAgbXQtbWQtMiIKICAgICAgICAgICAgICAgICAgQGNsaWNrPSJyZW1vdmVJdGVtKGluZGV4KSIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGZlYXRoZXItaWNvbgogICAgICAgICAgICAgICAgICAgIGljb249IlhJY29uIgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtci0yNSIKICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPCEtLSA8c3Bhbj5EZWxldGU8L3NwYW4+IC0tPgogICAgICAgICAgICAgICAgPC9iLWJ1dHRvbj4KICAgICAgICAgICAgICA8L2ItY29sPgogICAgICAgICAgICAgIDxiLWNvbCBjb2xzPSIxMiI+CiAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgPC9iLWNvbD4KICAgICAgICAgICAgPC9iLXJvdz4KCiAgICAgICAgICA8L2ItZm9ybT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8Yi1idXR0b24KICAgICAgICAgIHYtcmlwcGxlLjQwMD0iJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSknIgogICAgICAgICAgdmFyaWFudD0icHJpbWFyeSIKICAgICAgICAgIEBjbGljaz0icmVwZWF0ZUFnYWluIgogICAgICAgID4KICAgICAgICAgIDxmZWF0aGVyLWljb24KICAgICAgICAgICAgaWNvbj0iUGx1c0ljb24iCiAgICAgICAgICAgIGNsYXNzPSJtci0yNSIKICAgICAgICAgIC8+CiAgICAgICAgICA8c3Bhbj5BZGQgbW9yZTwvc3Bhbj4KICAgICAgICA8L2ItYnV0dG9uPgoKICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIiPgogICAgICAgICAgPGhyPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2PgogICAgICAgICAgPGItcm93PgoKICAgICAgICAgICAgPGItY29sIG1kPSI0Ij4KICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwCiAgICAgICAgICAgICAgICBsYWJlbD0iU3ViIFRvdGFsIgogICAgICAgICAgICAgICAgbGFiZWwtZm9yPSJzdWJ0b3RhbCIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0CiAgICAgICAgICAgICAgICAgIGlkPSJzdWJ0b3RhbCIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZm9ybVZhbHVlcy5zdWJ0b3RhbCIKICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlN1YiBUb3RhbCIKICAgICAgICAgICAgICAgICAgcmVhZG9ubHkKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgIDwvYi1jb2w+CgogICAgICAgICAgICA8Yi1jb2wgbWQ9IjQiPgogICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXAKICAgICAgICAgICAgICAgIGxhYmVsPSJWQVQiCiAgICAgICAgICAgICAgICBsYWJlbC1mb3I9InZhdCIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0CiAgICAgICAgICAgICAgICAgIGlkPSJ2YXQiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImZvcm1WYWx1ZXMudmF0IgogICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iVkFUIgogICAgICAgICAgICAgICAgICByZWFkb25seQogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgPC9iLWNvbD4KCiAgICAgICAgICAgIDxiLWNvbCBtZD0iNCI+CiAgICAgICAgICAgICAgPGItZm9ybS1ncm91cAogICAgICAgICAgICAgICAgbGFiZWw9IlRvdGFsIgogICAgICAgICAgICAgICAgbGFiZWwtZm9yPSJuZXRfdG90YWwiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPGItZm9ybS1pbnB1dAogICAgICAgICAgICAgICAgICBpZD0ibmV0X3RvdGFsIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJmb3JtVmFsdWVzLm5ldF90b3RhbCIKICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlRvdGFsIgogICAgICAgICAgICAgICAgICByZWFkb25seQogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgPC9iLWNvbD4KCiAgICAgICAgICA8L2Itcm93PgogICAgICAgIDwvZGl2PgoKICAgICAgPC9iLWNhcmQ+CiAgICA8L2ItY29sPgoKICAgIDwhLS0gc3VibWl0IGFuZCByZXNldCAtLT4KCiAgICA8Yi1jb2wgbWQ9IjEyIj4KICAgICAgPGItYnV0dG9uCiAgICAgICAgdi1yaXBwbGUuNDAwPSIncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSciCiAgICAgICAgdHlwZT0ic3VibWl0IgogICAgICAgIHZhcmlhbnQ9InByaW1hcnkiCiAgICAgICAgY2xhc3M9Im1yLTEiCiAgICAgICAgOmRpc2FibGVkPSJpc1N1Ym1pdHRpbmciCiAgICAgICAgQGNsaWNrPSJzdWJtaXRSZXNvdXJjZSIKICAgICAgPgogICAgICAgIDxiLXNwaW5uZXIKICAgICAgICAgIHYtaWY9ImlzU3VibWl0dGluZyIKICAgICAgICAgIHNtYWxsCiAgICAgICAgLz4KICAgICAgICA8c3BhbiB2LWlmPSJpc1N1Ym1pdHRpbmciPlBsZWFzZSBXYWl0PC9zcGFuPgoKICAgICAgICA8c3BhbiB2LWlmPSIhaXNTdWJtaXR0aW5nIj5TdWJtaXQ8L3NwYW4+CiAgICAgIDwvYi1idXR0b24+CgogICAgPC9iLWNvbD4KCiAgPC9iLXJvdz4KPC9iLWZvcm0+Cg=="},null]}
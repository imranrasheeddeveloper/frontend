{"remainingRequest":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Desktop/new-splitur/frontend/src/views/table/bs-table/users/list_users.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/src/views/table/bs-table/users/list_users.vue","mtime":1664653807929},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/css-loader/dist/cjs.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/postcss-loader/src/index.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZW5sYXJnZWFibGUtaW1hZ2UgLmZ1bGwgIHsKICB6LWluZGV4Ojk5OTkgIWltcG9ydGFudDsKCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpICFpbXBvcnRhbnQ7Cn0KCi5jdXN0b21IZWFkewoKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQ2QkZEICFpbXBvcnRhbnQ7CiAgY29sb3I6I2ZmZjsKfQoKLnRhYnNfbWFyZ2luX2NhbHNzewogIG1hcmdpbi10b3A6IDVweCAhaW1wb3J0YW50OwogIG1hcmdpbi1ib3R0b206IDVweCAhaW1wb3J0YW50OwoKfQoK"},{"version":3,"sources":["list_users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAucA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"list_users.vue","sourceRoot":"src/views/table/bs-table/users","sourcesContent":["<template>\n\n  <div>\n\n    <!-- search input -->\n    <div class=\"custom-search d-flex justify-content-between\">\n      <b-form-group>\n        <div class=\"d-flex align-items-center\">\n          <!-- <label class=\"mr-1\">Search</label> -->\n\n          <b-input-group>\n            <b-input-group-prepend>\n              <b-button\n                variant=\"outline-primary\"\n                @click=\"page=1, getUsers()\"\n              >\n                <feather-icon icon=\"SearchIcon\" />\n              </b-button>\n            </b-input-group-prepend>\n            <b-form-input\n              v-model=\"searchTerm\"\n              placeholder=\"Search\"\n              type=\"text\"\n              class=\" d-inline-block\"\n              @keyup=\"searchTimeOut()\"\n            />\n\n            <b-input-group-append>\n              <b-button\n                v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                v-b-modal.modal-advancesearch\n                variant=\"outline-primary\"\n              >\n                Advance search\n              </b-button>\n            </b-input-group-append>\n\n          </b-input-group>\n\n        </div>\n      </b-form-group>\n    </div>\n\n    <!-- Advance Search Model -->\n\n    <b-table\n      :items=\"items\"\n      :fields=\"fields\"\n      striped\n      responsive\n      class=\"mb-0\"\n      :busy=\"isBusy\"\n    >\n      <template #cell(Options)=\"row\">\n\n        <div>\n          <!-- As `row.showDetails` is one-way, we call the toggleDetails function on @change -->\n          <b-form-group>\n            <div class=\"d-flex align-items-center w-fit-content\">\n              <b-input-group>\n                <b-input-group-prepend>\n                  <b-button\n                    v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                    size=\"sm\"\n                    variant=\"outline-primary\"\n                    :class=\"row.detailsShowing ? 'active' : ''\"\n                    @click=\"row.toggleDetails\"\n                  >\n                    <feather-icon\n                      v-if=\"row.detailsShowing\"\n                      icon=\"ChevronUpIcon\"\n                    />\n\n                    <feather-icon\n                      v-else\n                      icon=\"ChevronDownIcon\"\n                    />\n                  </b-button>\n                </b-input-group-prepend>\n\n                <b-input-group-append>\n                  <b-button\n                    v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n                    size=\"sm\"\n                    :to=\"{name: 'updateuser', params: { id: row.item.id } }\"\n                    variant=\"outline-primary text-success\"\n                  >\n                    <feather-icon icon=\"EditIcon\" />\n                  </b-button>\n                </b-input-group-append>\n                <b-input-group-append>\n                  <b-button\n                    v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n                    size=\"sm\"\n                    variant=\"outline-primary text-danger\"\n                    @click=\"deletePayment(row.item.id)\"\n                  >\n                    <feather-icon icon=\"Trash2Icon\" />\n                  </b-button>\n                </b-input-group-append>\n              </b-input-group>\n            </div>\n          </b-form-group>\n        </div>\n      </template>\n\n      <template #cell(last_active)=\"data\">\n        {{ data.value | moment(\"DD/MM/YYYY\") }}\n      </template>\n\n      <template #cell(status)=\"data\">\n        <b-badge\n          pill\n          :variant=\"statusVariant(data.value)\"\n        >\n          {{ data.value }}\n        </b-badge>\n      </template>\n\n      <!-- full detail on click -->\n\n      <template #row-details=\"row\">\n        <b-card no-body>\n          <b-row>\n            <b-col\n              cols=\"12\"\n              class=\"m-0 p-2\"\n            >\n              <b-card-text>\n                <b-row class=\"border-bottom\">\n                  <b-col cols=\"2\">\n                    <strong>Name</strong>\n                  </b-col>\n                  <b-col cols=\"10\">\n                    {{ row.item.name }}\n                  </b-col>\n                </b-row>\n\n                <b-row class=\"border-bottom\">\n                  <b-col cols=\"2\">\n                    <strong>coins</strong>\n                  </b-col>\n                  <b-col cols=\"10\">\n                    {{ row.item.coins }}\n                  </b-col>\n                </b-row>\n                <b-row class=\"border-bottom\">\n                  <b-col cols=\"2\">\n                    <strong>wallet balance</strong>\n                  </b-col>\n                  <b-col cols=\"10\">\n                    {{ row.item.wallet_balance }}\n                  </b-col>\n                </b-row>\n                <b-row class=\"border-bottom\">\n                  <b-col cols=\"2\">\n                    <strong>email</strong>\n                  </b-col>\n                  <b-col cols=\"10\">\n                    {{ row.item.email }}\n                  </b-col>\n                </b-row>\n                <b-row class=\"border-bottom\">\n                  <b-col cols=\"2\">\n                    <strong>otpHash</strong>\n                  </b-col>\n                  <b-col cols=\"10\">\n                    {{ row.item.otpHash }}\n                  </b-col>\n                </b-row>\n                <b-row class=\"border-bottom\">\n                  <b-col cols=\"2\">\n                    <strong>online_ofline_status</strong>\n                  </b-col>\n                  <b-col cols=\"10\">\n                    <b-badge\n                      v-if=\"row.item.online_ofline_status === true\"\n                      pill\n                      variant=\"success\"\n                    >\n                      online\n                    </b-badge>\n\n                    <b-badge\n                      v-if=\"row.item.online_ofline_status === false\"\n                      pill\n                      variant=\"danger\"\n                    >\n                      offline\n                    </b-badge>\n                    <b-badge\n                      v-if=\"row.item.online_ofline_status === null\"\n                      pill\n                      variant=\"danger\"\n                    >\n                      offline\n                    </b-badge>\n                  </b-col>\n                </b-row>\n              </b-card-text>\n            </b-col>\n          </b-row>\n        </b-card>\n      </template>\n\n      <template #table-busy>\n        <div class=\"text-center text-primary my-2\">\n          <b-spinner class=\"align-middle\" />\n          <strong>Loading...</strong>\n        </div>\n      </template>\n\n    </b-table>\n\n    <div class=\"d-flex justify-content-end\">\n      <b-pagination\n        v-model=\"page\"\n        :total-rows=\"count\"\n        :per-page=\"pageSize\"\n        pills\n        @change=\"handlePageChange\"\n      />\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport axios from '@axios'\nimport vSelect from 'vue-select'\nimport {\n  BTable, BFormCheckbox, BButton, BCard, BRow, BCol, BAvatar, BBadge, BImg, BTabs, BTab, BCardText, BPagination, BFormGroup, BFormInput, BFormSelect, BDropdown, BDropdownItem, BInputGroup, BInputGroupAppend, BInputGroupPrepend, BFormDatepicker, BFormFile, BFormTextarea, BFormRadio, BForm, BFormCheckboxGroup, BFormRating, BListGroupItem, BListGroup, BPopover, BSpinner,\n} from 'bootstrap-vue'\n\nimport Ripple from 'vue-ripple-directive'\nimport EnlargeableImage from '@diracleo/vue-enlargeable-image'\nimport Cleave from 'vue-cleave-component'\nimport { VueAutosuggest } from 'vue-autosuggest'\n\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\n\nexport default {\n  components: {\n    BCardCode,\n    BTable,\n    BButton,\n    BFormCheckbox,\n    BCard,\n    BRow,\n    BCol,\n    BBadge,\n    BAvatar,\n    BImg,\n    EnlargeableImage,\n    BTabs,\n    BTab,\n    BCardText,\n    BPagination,\n    BFormGroup,\n    BFormInput,\n    BFormSelect,\n    BDropdown,\n    BDropdownItem,\n    BInputGroup,\n    BInputGroupAppend,\n    BInputGroupPrepend,\n    BFormDatepicker,\n    BFormFile,\n    BFormTextarea,\n    BFormRadio,\n    BForm,\n    vSelect,\n    BFormCheckboxGroup,\n    BFormRating,\n    BListGroup,\n    BListGroupItem,\n    BPopover,\n    BSpinner,\n    Cleave,\n    VueAutosuggest,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      base_url: '',\n\n      options: {\n        penColor: '#000',\n        backgroundColor: '#fff',\n      },\n\n      popoverShow: false,\n      exportLimit: '',\n      isBusy: true,\n      fields: [{ key: 'Options', thClass: 'customHead' }, {\n        key: 'id', label: 'Id', sortable: true, thClass: 'customHead',\n      }, {\n        key: 'userId', label: 'userId By', sortable: true, thClass: 'customHead',\n      }, {\n        key: 'phone', label: 'phone', sortable: true, thClass: 'customHead',\n      }, {\n        key: 'last_active', labe: 'last active', sortable: true, thClass: 'customHead',\n      }, {\n        key: 'splitur_score', label: 'splitur_score', sortable: true, thClass: 'customHead',\n      },\n      ],\n\n      searchTerm: '',\n      pageSize: 10,\n      page: 1,\n      count: 0,\n\n      formValues: {\n        request_type: '',\n        request_owner: '',\n        request_owner_id: '',\n        payment_type: '',\n        status: '',\n      },\n    }\n  },\n\n  mounted() {\n    this.getUsers()\n  },\n  methods: {\n\n    closeSearch() {\n      this.$refs.searchModel.hide()\n    },\n\n    onClose() {\n      this.popoverShow = false\n    },\n\n    deletePayment(id) {\n      console.log(id)\n      this.$swal({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, delete it!',\n        customClass: {\n          confirmButton: 'btn btn-danger',\n          cancelButton: 'btn btn-outline-danger ml-1',\n        },\n        buttonsStyling: false,\n      }).then(result => {\n        if (result.value) {\n          axios.post('/deletePayment', {\n            id,\n          }).then(response => {\n            if (response.data.hasOwnProperty('success')) {\n              if (response.data.success === true) {\n                this.getPymentRequests()\n\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: 'Payment Deleted Successfully',\n                    icon: 'EditIcon',\n                    variant: 'success',\n                  },\n                })\n                console.log('Payment Deleted Successfully')\n              } else {\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: 'Error',\n                    icon: 'AlertCircleIcon',\n                    variant: 'danger',\n                    text: 'Something went wrong, try again later',\n                  },\n                })\n              }\n            } else {\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: 'Error',\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                  text: 'Something went wrong, try again later',\n                },\n              })\n            }\n          }).catch(error => {\n            console.error(error)\n          })\n        }\n      })\n    },\n    getUsers() {\n      this.isBusy = true\n\n      axios.get(`/groups/getAllUsers/${this.page}/${this.searchTerm}`)\n        .then(response => {\n          console.log('response', response.data.data)\n          this.items = response.data.data\n          this.base_url = response.data.base_url\n          this.count = response.data.totalRows\n          this.isBusy = false\n\n          // TODO\n        }).catch(error => {\n          console.error(error)\n        })\n    },\n\n    handlePageChange(value) {\n      this.page = value\n      this.isBusy = true\n      this.getUsers()\n    },\n\n    searchTimeOut() {\n      let timeout = null\n      clearTimeout(timeout)\n      // Make a new timeout set to go off in 800ms\n      timeout = setTimeout(() => {\n        this.page = 1\n        this.getUsers()\n      }, 800)\n    },\n    statusVariant(ownerType) {\n      if (ownerType === true) {\n        return 'primary'\n      }\n      return 'warning'\n    },\n    Type_Change(item) {\n      this.clearResourceOwner(item)\n    },\n    clearResourceOwner(item) {\n      console.log('clear item ', item)\n      this.formValues.request_owner = ''\n      this.formValues.request_owner_id = ''\n\n      this.filteredOptions = []\n      console.log('clear item new', item)\n    },\n  },\n}\n</script>\n\n<style lang=\"css\" >\n\n.enlargeable-image .full  {\n  z-index:9999 !important;\n\n  background-color: rgba(0,0,0,0.5) !important;\n}\n\n.customHead{\n\n  background-color: #246BFD !important;\n  color:#fff;\n}\n\n.tabs_margin_calss{\n  margin-top: 5px !important;\n  margin-bottom: 5px !important;\n\n}\n\n</style>\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-autosuggest.scss';\n</style>\n"]}]}
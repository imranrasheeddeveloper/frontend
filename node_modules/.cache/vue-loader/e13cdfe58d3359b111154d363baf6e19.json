{"remainingRequest":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/views/apps/chat/Chat.vue?vue&type=template&id=56675fe8&scoped=true&","dependencies":[{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/views/apps/chat/Chat.vue","mtime":1658909892000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY1N0eWxlOiB7IGhlaWdodDogImluaGVyaXQiIH0gfSwKICAgIFsKICAgICAgX2MoImRpdiIsIHsKICAgICAgICBzdGF0aWNDbGFzczogImJvZHktY29udGVudC1vdmVybGF5IiwKICAgICAgICBjbGFzczogewogICAgICAgICAgc2hvdzoKICAgICAgICAgICAgX3ZtLnNoYWxsU2hvd1VzZXJQcm9maWxlU2lkZWJhciB8fAogICAgICAgICAgICBfdm0uc2hhbGxTaG93QWN0aXZlQ2hhdENvbnRhY3RTaWRlYmFyIHx8CiAgICAgICAgICAgIF92bS5tcVNoYWxsU2hvd0xlZnRTaWRlYmFyCiAgICAgICAgfSwKICAgICAgICBvbjogewogICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICBfdm0ubXFTaGFsbFNob3dMZWZ0U2lkZWJhciA9IF92bS5zaGFsbFNob3dBY3RpdmVDaGF0Q29udGFjdFNpZGViYXIgPSBfdm0uc2hhbGxTaG93VXNlclByb2ZpbGVTaWRlYmFyID0gZmFsc2UKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pLAogICAgICBfYygic2VjdGlvbiIsIHsgc3RhdGljQ2xhc3M6ICJjaGF0LWFwcC13aW5kb3ciIH0sIFsKICAgICAgICAhX3ZtLmFjdGl2ZUNoYXQuY29udGFjdAogICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInN0YXJ0LWNoYXQtYXJlYSIgfSwgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibWItMSBzdGFydC1jaGF0LWljb24iIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJmZWF0aGVyLWljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogIk1lc3NhZ2VTcXVhcmVJY29uIiwgc2l6ZTogIjU2IiB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiaDQiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInNpZGViYXItdG9nZ2xlIHN0YXJ0LWNoYXQtdGV4dCIsCiAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uc3RhcnRDb252ZXJzYXRpb24gfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBTdGFydCBDb252ZXJzYXRpb24gIildCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgOiBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiYWN0aXZlLWNoYXQiIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjaGF0LW5hdmJhciIgfSwgWwogICAgICAgICAgICAgICAgICBfYygiaGVhZGVyIiwgeyBzdGF0aWNDbGFzczogImNoYXQtaGVhZGVyIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIiB9LAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInNpZGViYXItdG9nZ2xlIGQtYmxvY2sgZC1sZy1ub25lIG1yLTEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiZmVhdGhlci1pY29uIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImN1cnNvci1wb2ludGVyIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogIk1lbnVJY29uIiwgc2l6ZTogIjIxIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5tcVNoYWxsU2hvd0xlZnRTaWRlYmFyID0gdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoImItYXZhdGFyIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMSBjdXJzb3ItcG9pbnRlciBiYWRnZS1taW5pbWFsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZTogIjM2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYzogX3ZtLmFjdGl2ZUNoYXQuY29udGFjdC5hdmF0YXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWRnZTogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYmFkZ2UtdmFyaWFudCI6IF92bS5yZXNvbHZlQXZhdGFyQmFkZ2VWYXJpYW50KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uYWN0aXZlQ2hhdC5jb250YWN0LnN0YXR1cwogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlT246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnNoYWxsU2hvd0FjdGl2ZUNoYXRDb250YWN0U2lkZWJhciA9IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBfYygiaDYiLCB7IHN0YXRpY0NsYXNzOiAibWItMCIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICIgIiArIF92bS5fcyhfdm0uYWN0aXZlQ2hhdC5jb250YWN0LmZ1bGxOYW1lKSArICIgIgogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiIH0sCiAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJmZWF0aGVyLWljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjdXJzb3ItcG9pbnRlciBkLXNtLWJsb2NrIGQtbm9uZSBtci0xIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpY29uOiAiUGhvbmVDYWxsSWNvbiIsIHNpemU6ICIxNyIgfQogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoImZlYXRoZXItaWNvbiIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImN1cnNvci1wb2ludGVyIGQtc20tYmxvY2sgZC1ub25lIG1yLTEiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGljb246ICJWaWRlb0ljb24iLCBzaXplOiAiMTciIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJmZWF0aGVyLWljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjdXJzb3ItcG9pbnRlciBkLXNtLWJsb2NrIGQtbm9uZSBtci01MCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogIlNlYXJjaEljb24iLCBzaXplOiAiMTciIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJkcm9wZG93biIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImItZHJvcGRvd24iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ6ICJsaW5rIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuby1jYXJldCI6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInRvZ2dsZS1jbGFzcyI6ICJwLTAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6ICIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY29wZWRTbG90czogX3ZtLl91KFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiAiYnV0dG9uLWNvbnRlbnQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbjogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJmZWF0aGVyLWljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYWxpZ24tbWlkZGxlIHRleHQtYm9keSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjogIk1vcmVWZXJ0aWNhbEljb24iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU6ICIxNyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3h5OiB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJiLWRyb3Bkb3duLWl0ZW0iLCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBWaWV3IENvbnRhY3QgIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYi1kcm9wZG93bi1pdGVtIiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgTXV0ZSBOb3RpZmljYXRpb25zICIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImItZHJvcGRvd24taXRlbSIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiIEJsb2NrIENvbnRhY3QgIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYi1kcm9wZG93bi1pdGVtIiwgW192bS5fdigiIENsZWFyIENoYXQgIildKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYi1kcm9wZG93bi1pdGVtIiwgW192bS5fdigiIFJlcG9ydCAiKV0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAidnVlLXBlcmZlY3Qtc2Nyb2xsYmFyIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHJlZjogInJlZkNoYXRMb2dQUyIsCiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ1c2VyLWNoYXRzIHNjcm9sbC1hcmVhIiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzZXR0aW5nczogX3ZtLnBlcmZlY3RTY3JvbGxiYXJTZXR0aW5ncyB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygiY2hhdC1sb2ciLCB7CiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAiY2hhdC1kYXRhIjogX3ZtLmFjdGl2ZUNoYXQsCiAgICAgICAgICAgICAgICAgICAgICAgICJwcm9maWxlLXVzZXItYXZhdGFyIjogX3ZtLnByb2ZpbGVVc2VyRGF0YU1pbmltYWwuYXZhdGFyCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiYi1mb3JtIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY2hhdC1hcHAtZm9ybSIsCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uc2VuZE1lc3NhZ2UuYXBwbHkobnVsbCwgYXJndW1lbnRzKQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgImItaW5wdXQtZ3JvdXAiLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImlucHV0LWdyb3VwLW1lcmdlIGZvcm0tc2VuZC1tZXNzYWdlIG1yLTEiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygiYi1mb3JtLWlucHV0IiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHBsYWNlaG9sZGVyOiAiRW50ZXIgeW91ciBtZXNzYWdlIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmNoYXRJbnB1dE1lc3NhZ2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5jaGF0SW5wdXRNZXNzYWdlID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImNoYXRJbnB1dE1lc3NhZ2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgImItYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdmFyaWFudDogInByaW1hcnkiLCB0eXBlOiAic3VibWl0IiB9IH0sCiAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgU2VuZCAiKV0KICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKQogICAgICBdKSwKICAgICAgX2MoImNoYXQtYWN0aXZlLWNoYXQtY29udGVudC1kZXRhaWxzLXNpZGVkYmFyIiwgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAic2hhbGwtc2hvdy1hY3RpdmUtY2hhdC1jb250YWN0LXNpZGViYXIiOgogICAgICAgICAgICBfdm0uc2hhbGxTaG93QWN0aXZlQ2hhdENvbnRhY3RTaWRlYmFyLAogICAgICAgICAgY29udGFjdDogX3ZtLmFjdGl2ZUNoYXQuY29udGFjdCB8fCB7fQogICAgICAgIH0sCiAgICAgICAgb246IHsKICAgICAgICAgICJ1cGRhdGU6c2hhbGxTaG93QWN0aXZlQ2hhdENvbnRhY3RTaWRlYmFyIjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgIF92bS5zaGFsbFNob3dBY3RpdmVDaGF0Q29udGFjdFNpZGViYXIgPSAkZXZlbnQKICAgICAgICAgIH0sCiAgICAgICAgICAidXBkYXRlOnNoYWxsLXNob3ctYWN0aXZlLWNoYXQtY29udGFjdC1zaWRlYmFyIjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgIF92bS5zaGFsbFNob3dBY3RpdmVDaGF0Q29udGFjdFNpZGViYXIgPSAkZXZlbnQKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pLAogICAgICBfYygKICAgICAgICAicG9ydGFsIiwKICAgICAgICB7IGF0dHJzOiB7IHRvOiAiY29udGVudC1yZW5kZXJlci1zaWRlYmFyLWxlZnQiIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygiY2hhdC1sZWZ0LXNpZGViYXIiLCB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgImNoYXRzLWNvbnRhY3RzIjogX3ZtLmNoYXRzQ29udGFjdHMsCiAgICAgICAgICAgICAgY29udGFjdHM6IF92bS5jb250YWN0cywKICAgICAgICAgICAgICAiYWN0aXZlLWNoYXQtY29udGFjdC1pZCI6IF92bS5hY3RpdmVDaGF0LmNvbnRhY3QKICAgICAgICAgICAgICAgID8gX3ZtLmFjdGl2ZUNoYXQuY29udGFjdC5pZAogICAgICAgICAgICAgICAgOiBudWxsLAogICAgICAgICAgICAgICJzaGFsbC1zaG93LXVzZXItcHJvZmlsZS1zaWRlYmFyIjoKICAgICAgICAgICAgICAgIF92bS5zaGFsbFNob3dVc2VyUHJvZmlsZVNpZGViYXIsCiAgICAgICAgICAgICAgInByb2ZpbGUtdXNlci1kYXRhIjogX3ZtLnByb2ZpbGVVc2VyRGF0YSwKICAgICAgICAgICAgICAicHJvZmlsZS11c2VyLW1pbmltYWwtZGF0YSI6IF92bS5wcm9maWxlVXNlckRhdGFNaW5pbWFsLAogICAgICAgICAgICAgICJtcS1zaGFsbC1zaG93LWxlZnQtc2lkZWJhciI6IF92bS5tcVNoYWxsU2hvd0xlZnRTaWRlYmFyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgInVwZGF0ZTpzaGFsbFNob3dVc2VyUHJvZmlsZVNpZGViYXIiOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgIF92bS5zaGFsbFNob3dVc2VyUHJvZmlsZVNpZGViYXIgPSAkZXZlbnQKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJ1cGRhdGU6c2hhbGwtc2hvdy11c2VyLXByb2ZpbGUtc2lkZWJhciI6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgX3ZtLnNoYWxsU2hvd1VzZXJQcm9maWxlU2lkZWJhciA9ICRldmVudAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInVwZGF0ZTptcVNoYWxsU2hvd0xlZnRTaWRlYmFyIjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICBfdm0ubXFTaGFsbFNob3dMZWZ0U2lkZWJhciA9ICRldmVudAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInVwZGF0ZTptcS1zaGFsbC1zaG93LWxlZnQtc2lkZWJhciI6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgX3ZtLm1xU2hhbGxTaG93TGVmdFNpZGViYXIgPSAkZXZlbnQKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJzaG93LXVzZXItcHJvZmlsZSI6IF92bS5zaG93VXNlclByb2ZpbGVTaWRlYmFyLAogICAgICAgICAgICAgICJvcGVuLWNoYXQiOiBfdm0ub3BlbkNoYXRPZkNvbnRhY3QKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}
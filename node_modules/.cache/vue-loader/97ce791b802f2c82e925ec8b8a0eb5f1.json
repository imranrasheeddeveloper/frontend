{"remainingRequest":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\bankAccount\\editBankTransactionView.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\bankAccount\\editBankTransactionView.vue","mtime":1658909893000},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1658911433225},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1658911433727},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1658911433648},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1658911445082},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1658911433727}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiQGNvcmUvc2Nzcy92dWUvbGlicy92dWUtYXV0b3N1Z2dlc3Quc2NzcyI7Cg=="},{"version":3,"sources":["editBankTransactionView.vue"],"names":[],"mappingss/BA","file":"editBankTransactionView.vue","sourceRoot":"src/views/table/bs-table/bankAccount","sourcesContent":["<template>\n  <b-form @submit.prevent>\n    <b-row>\n      <b-col md=\"6\">\n        <b-form-group label=\"Transaction Type\" label-for=\"transaction_type\">\n          <v-select\n            id=\"transaction_type\"\n            v-model=\"formValues.transaction_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"transactionType\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n            @input=\"Type_Change(formValues.transaction_type)\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <label for=\"date\">Date</label>\n        <b-input-group>\n          <cleave\n            id=\"date\"\n            v-model=\"formValues.date\"\n            class=\"form-control\"\n            :raw=\"false\"\n            :options=\"options.date\"\n            placeholder=\"YYYY-MM-DD\"\n          />\n\n          <b-input-group-append>\n            <b-form-datepicker\n              v-model=\"formValues.date\"\n              show-decade-nav\n              button-only\n              right\n              locale=\"en-US\"\n              aria-controls=\"date\"\n            />\n          </b-input-group-append>\n        </b-input-group>\n      </b-col>\n\n      <b-col md=\"6\" v-if=\"client_payment || vendor_payment\">\n        <b-form-group label=\"Period (sub type)\" label-for=\"period\">\n          <vue-monthly-picker\n            v-model=\"formValues.sub_type\"\n            :month-labels=\"monthLabelArray\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\" v-if=\"client_payment || vendor_payment || supplier_payment\">\n        <b-form-group label=\"To/From\" label-for=\"autosuggest__input\">\n          <vue-autosuggest\n            v-model=\"formValues.to_from_name\"\n            :suggestions=\"filteredOptions\"\n            :limit=\"10\"\n            :input-props=\"{\n              id: 'autosuggest__input',\n              class: 'form-control',\n              placeholder: 'Search with name or ID',\n            }\"\n            @input=\"onInputChange\"\n            @selected=\"assignOwnerField\"\n          >\n            <template slot-scope=\"{ suggestion }\">\n              <span class=\"my-suggestion-item\"\n                >{{ suggestion.item.name }}, {{ suggestion.item.id }}\n              </span>\n            </template>\n          </vue-autosuggest>\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\" v-if=\"employee_payment\">\n        <b-form-group label=\"Sub Type\" label-for=\"sub_type_emp\">\n          <v-select\n            id=\"sub_type_emp\"\n            v-model=\"formValues.sub_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"employeePaymentType\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\" v-if=\"hr_payments\">\n        <b-form-group label=\"Sub Type\" label-for=\"sub_type_hr\">\n          <v-select\n            id=\"sub_type_hr\"\n            v-model=\"formValues.sub_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"hrPaymentType\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\" v-if=\"withdrawal\">\n        <b-form-group label=\"Sub Type\" label-for=\"sub_type_emp\">\n          <v-select\n            id=\"sub_type_emp\"\n            v-model=\"formValues.sub_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"withdrawalTypes\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n            @input=\"Type_Change_withdrawalTypes(formValues.sub_type)\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\" v-if=\"petty_cash\">\n        <b-form-group label=\"Sub Type\" label-for=\"sub_type_emp\">\n          <v-select\n            id=\"sub_type_emp\"\n            v-model=\"formValues.sub_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"pettyCashTypes\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\" v-if=\"employee_payment || hr_payments\">\n        <b-form-group label=\"To/From\" label-for=\"To/From_emp1\">\n          <v-select\n            id=\"To/From_emp1\"\n            v-model=\"formValues.to_from\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"filteredOptions\"\n            label=\"text\"\n            :multiple=\"true\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\" v-if=\"travelEpense\">\n        <b-form-group label=\"Sub Type\" label-for=\"sub_type_hr\">\n          <v-select\n            id=\"sub_type_hr\"\n            v-model=\"formValues.sub_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"travelEpenseType\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\" v-if=\"purchase_type\">\n        <b-form-group label=\"Sub Type\" label-for=\"sub_type_hr\">\n          <v-select\n            id=\"sub_type_hr\"\n            v-model=\"formValues.sub_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"purchaseTypes\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\" v-if=\"return_transfer\">\n        <b-form-group label=\"Sub Type\" label-for=\"sub_type_hr\">\n          <v-select\n            id=\"sub_type_hr\"\n            v-model=\"formValues.sub_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"returnTransferTypes\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\" v-if=\"others\">\n        <b-form-group label=\"Sub Type\" label-for=\"sub_type_hr\">\n          <v-select\n            id=\"sub_type_hr\"\n            v-model=\"formValues.sub_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"othersTypes\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\" v-if=\"utility_payments\">\n        <b-form-group label=\"Sub Type\" label-for=\"sub_type_hr\">\n          <v-select\n            id=\"sub_type_hr\"\n            v-model=\"formValues.sub_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"utilityPaymentTypes\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n            @input=\"Type_Change_UtilityPaymentTypes(formValues.sub_type)\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col\n        md=\"6\"\n        v-if=\"utility_payments_except || withdrawal_pettyCashAccount || pettyCashAccount || transfer_to_owner\"\n      >\n        <b-form-group label=\"To/From\" label-for=\"autosuggest__input\">\n          <vue-autosuggest\n            v-model=\"formValues.to_from_name\"\n            :suggestions=\"filteredOptions\"\n            :limit=\"10\"\n            :input-props=\"{\n              id: 'autosuggest__input',\n              class: 'form-control',\n              placeholder: 'Search with name or ID',\n            }\"\n            @input=\"onInputChange\"\n            @selected=\"assignOwnerField\"\n          >\n            <template slot-scope=\"{ suggestion }\">\n              <span class=\"my-suggestion-item\"\n                >{{ suggestion.item.name }}, {{ suggestion.item.id }}\n              </span>\n            </template>\n          </vue-autosuggest>\n        </b-form-group>\n      </b-col>\n            <b-col\n        md=\"6\"\n        v-if=\"transfer_to_other\"\n      >\n        <b-form-group label=\"Sub Type\" label-for=\"autosuggest__input\">\n          <vue-autosuggest\n            v-model=\"formValues.sub_type\"\n            :suggestions=\"filteredOptions\"\n            :limit=\"10\"\n            :input-props=\"{\n              id: 'autosuggest__input',\n              class: 'form-control',\n              placeholder: 'Search with name or ID',\n            }\"\n            @input=\"onInputChange\"\n            @selected=\"assignOwnerField_type_transfer_to_other_bank\"\n          >\n            <template slot-scope=\"{ suggestion }\">\n              <span class=\"my-suggestion-item\"\n                >{{ suggestion.item.name }}, {{ suggestion.item.id }}\n              </span>\n            </template>\n          </vue-autosuggest>\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\" v-if=\"supplier_payment|| transfer_to_owner\">\n        <b-form-group label=\"Sub Type\" label-for=\"sub_type_hr\">\n          <v-select\n            id=\"sub_type_hr\"\n            v-model=\"formValues.sub_type\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"filteredOptions_supplier\"\n            label=\"text\"\n            :reduce=\"(text) => text.value\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group label=\"Amount\" label-for=\"v-amount_\">\n          <b-form-input\n            @scroll.prevent\n            id=\"v-amount_\"\n            v-model.number=\"formValues.amount\"\n            type=\"number\"\n            placeholder=\"0.00\"\n            min=\"0\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group label=\"Notes\" label-for=\"Notes\">\n          <b-form-textarea\n            id=\"Notes\"\n            v-model=\"formValues.notes\"\n            placeholder=\"Write Notes Here..\"\n            rows=\"2\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col md=\"6\" v-if=\"un_verified || others\">\n        <div class=\"d-flex mb-2\">\n          <b-form-checkbox\n            class=\"d-flex\"\n            value=\"Credit\"\n            v-model=\"formValues.credit_debit\"\n            name=\"Credit\"\n          >\n            Credit\n          </b-form-checkbox>\n          <b-form-checkbox\n            class=\"d-flex ml-2 pl-2\"\n            value=\"Debit\"\n            v-model=\"formValues.credit_debit\"\n            name=\"Debit\"\n          >\n            Debit\n          </b-form-checkbox>\n        </div>\n      </b-col>\n      <!-- submit and reset -->\n      <b-col md=\"12\">\n        <b-button\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          type=\"submit\"\n          variant=\"primary\"\n          class=\"mr-1\"\n          :disabled=\"isSubmitting\"\n          @click=\"submitDocument\"\n        >\n          <b-spinner v-if=\"isSubmitting\" small />\n          <span v-if=\"isSubmitting\">Please Wait</span>\n\n          <span v-if=\"!isSubmitting\">Submit</span>\n        </b-button>\n      </b-col>\n    </b-row>\n  </b-form>\n</template>\n\n<script>\nimport {\n  BRow,\n  BCol,\n  BFormGroup,\n  BFormInput,\n  BFormCheckbox,\n  BForm,\n  BButton,\n  BFormDatepicker,\n  BCard,\n  BFormFile,\n  BSpinner,\n  BInputGroup,\n  BInputGroupPrepend,\n  BFormRadio,\n  BFormCheckboxGroup,\n  BInputGroupAppend,\n  BFormTextarea,\n} from \"bootstrap-vue\";\nimport Ripple from \"vue-ripple-directive\";\nimport vSelect from \"vue-select\";\nimport { VueAutosuggest } from \"vue-autosuggest\";\nimport axios from \"@axios\";\nimport { heightTransition } from \"@core/mixins/ui/transition\";\nimport ToastificationContent from \"@core/components/toastification/ToastificationContent.vue\";\nimport VueMonthlyPicker from \"vue-monthly-picker\";\n\nimport Cleave from \"vue-cleave-component\";\nimport \"cleave.js/dist/addons/cleave-phone.us\";\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormInput,\n    BFormCheckbox,\n    BForm,\n    BButton,\n    BFormDatepicker,\n    vSelect,\n    VueAutosuggest,\n    BCard,\n    BFormFile,\n    BSpinner,\n    BInputGroup,\n    BInputGroupPrepend,\n    BFormRadio,\n    BFormCheckboxGroup,\n    BInputGroupAppend,\n    Cleave,\n    BFormTextarea,\n    VueMonthlyPicker,\n  },\n  directives: {\n    Ripple,\n  },\n\n  mixins: [heightTransition],\n\n  data() {\n    return {\n      client_payment: false,\n      employee_payment: false,\n      hr_payments: false,\n      travelEpense: false,\n      purchase_type: false,\n      return_transfer: false,\n      vendor_payment: false,\n      un_verified: false,\n      others: false,\n      utility_payments: false,\n      utility_payments_except: false,\n      supplier_payment: false,\n      withdrawal: false,\n      withdrawal_pettyCashAccount: false,\n      petty_cash: false,\n      pettyCashAccount: false,\n      transfer_to_owner: false,\n      transfer_to_other: false,\n\n\n      options: {\n        date: {\n          date: true,\n          delimiter: \"-\",\n          datePattern: [\"Y\", \"m\", \"d\"],\n        },\n      },\n      isSubmitting: false,\n\n      transactionType: [\n        { value: \"Client Payment\", text: \"Client Payment\" },\n        { value: \"Employee Payments\", text: \"Employee Payments\" },\n        { value: \"HR Payments\", text: \"HR Payments\" },\n        { value: \"Supplier Payment\", text: \"Supplier Payment\" },\n        { value: \"Transfer to Owner\", text: \"Transfer to Owner\" },\n        { value: \"Transfer to Other Bank\", text: \"Transfer to Other Bank\" },\n        { value: \"Travel Expense\", text: \"Travel Expense\" },\n        { value: \"Utility Payments\", text: \"Utility Payments\" },\n        { value: \"Vendor Payment\", text: \"Vendor Payment\" },\n        { value: \"Withdrawal\", text: \"Withdrawal\" },\n        { value: \"Petty Cash\", text: \"Petty Cash\" },\n        { value: \"Purchase\", text: \"Purchase\" },\n        { value: \"Un-Verified\", text: \"Un-Verified\" },\n        { value: \"Others\", text: \"Others\" },\n        // { value: 'Transfer from other bank', text: 'Transfer from other bank' },\n        { value: \"Return Transfer\", text: \"Return Transfer\" },\n      ],\n      employeePaymentType: [\n        { value: \"Salary\", text: \"Salary\" },\n        { value: \"Vacation Pay\", text: \"Vacation Pay\" },\n        { value: \"EOSB\", text: \"EOSB\" },\n        { value: \"Allowance\", text: \"Allowance\" },\n        { value: \"Others\", text: \"Others\" },\n      ],\n      hrPaymentType: [\n        { value: \"New ID\", text: \"New ID\" },\n        { value: \"ID Renewal\", text: \"ID Renewal\" },\n        { value: \"Work Permit\", text: \"Work Permit\" },\n        { value: \"Visa\", text: \"Visa\" },\n        { value: \"Re-entry Visa\", text: \"Re-entry Visa\" },\n        { value: \"Medical Insurance\", text: \"Medical Insurance\" },\n      ],\n      travelEpenseType: [\n        { value: \"Ticket Purchase\", text: \"Ticket Purchase\" },\n        { value: \"Hotel Expense\", text: \"Hotel Expense\" },\n        { value: \"Others\", text: \"Others\" },\n      ],\n      purchaseTypes: [\n        { value: \"Project Expense\", text: \"Project Expense\" },\n        { value: \"Office Expense\", text: \"Office Expense\" },\n        { value: \"Accommodation Expense\", text: \"Accommodation Expense\" },\n        { value: \"Transport Expense\", text: \"Transport Expense\" },\n        { value: \"Others\", text: \"Others\" },\n      ],\n      returnTransferTypes: [\n        { value: \"Client\", text: \"Client\" },\n        { value: \"Vendor\", text: \"Vendor\" },\n        { value: \"Employee\", text: \"Employee\" },\n        { value: \"HR\", text: \"HR\" },\n        { value: \"Supplier\", text: \"Supplier\" },\n        { value: \"Owner\", text: \"Owner\" },\n        { value: \"Other Bank\", text: \"Other Bank\" },\n        { value: \"Vendors\", text: \"Vendors\" },\n        { value: \"Others\", text: \"Others\" },\n      ],\n      othersTypes: [\n        { value: \"Adjustment\", text: \"Adjustment\" },\n        { value: \"Others\", text: \"Others\" },\n      ],\n      utilityPaymentTypes: [\n        { value: \"Rents\", text: \"Rents\" },\n        { value: \"Electricity\", text: \"Electricity\" },\n        { value: \"Water\", text: \"Water\" },\n        { value: \"Internet\", text: \"Internet\" },\n        { value: \"Phone\", text: \"Phone\" },\n        { value: \"Fuel\", text: \"Fuel\" },\n        { value: \"Others\", text: \"Others\" },\n      ],\n      withdrawalTypes: [\n        { value: \"Petty Cash\", text: \"Petty Cash\" },\n        { value: \"Expenses\", text: \"Expenses\" },\n        { value: \"Profit\", text: \"Profit\" },\n        { value: \"Others\", text: \"Others\" },\n      ],\n      pettyCashTypes: [\n        { value: \"Bank Transfer\", text: \"Bank Transfer\" },\n        { value: \"Cash Withdrawal\", text: \"Cash Withdrawal\" },\n      ],\n      filteredOptions: [],\n      filteredOptions_supplier: [],\n\n      monthLabelArray: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n      ],\n\n      recipient_type: \"\",\n      recipient_type_supplier_payment: false,\n\n      formValues: {\n        id: null,\n        bank_account_id: null,\n        transaction_type: \"\",\n        date: \"\",\n        sub_type: \"\",\n        amount: 0,\n        to_from: null,\n        to_from_name: \"\",\n        notes: \"\",\n        credit_debit: \"\",\n        created_by: \"\",\n        updated_by: \"\",\n      },\n    };\n  },\n  mounted() {\n    this.initTrHeight();\n    this.getDocument();\n  },\n  created() {\n    window.addEventListener(\"resize\", this.initTrHeight);\n  },\n  destroyed() {\n    window.removeEventListener(\"resize\", this.initTrHeight);\n  },\n  methods: {\n    Type_Change(type) {\n      this.formValues.sub_type = \"\";\n      // this.formValues.amount =  0,\n      this.formValues.to_from = null;\n      this.formValues.to_from_name = \"\";\n      this.formValues.credit_debit = \"\";\n\n      // Set variable true/false for show/hide dynamic fields on change transaction type\n\n      this.client_payment = false;\n      this.employee_payment = false;\n      this.hr_payments = false;\n      this.travelEpense = false;\n      this.purchase_type = false;\n      this.return_transfer = false;\n      this.vendor_payment = false;\n      this.un_verified = false;\n      this.others = false;\n      this.utility_payments = false;\n      this.utility_payments_except = false;\n      this.supplier_payment = false;\n      this.recipient_type_supplier_payment = false;\n      this.withdrawal = false;\n      this.withdrawal_pettyCashAccount = false;\n      this.petty_cash = false;\n      this.pettyCashAccount = false;\n      this.transfer_to_owner = false;\n      this.transfer_to_other = false;\n\n\n      this.clearResourceOwner();\n      if (type == \"Client Payment\") {\n        this.recipient_type = \"Client\";\n        this.formValues.credit_debit = \"Credit\";\n        this.client_payment = true;\n        return;\n      } else if (type == \"Employee Payments\") {\n        this.recipient_type = \"Employee\";\n        this.formValues.credit_debit = \"Debit\";\n        this.employee_payment = true;\n        this.onInputChange(\"\");\n        return;\n      } else if (type == \"HR Payments\") {\n        this.recipient_type = \"Employee\";\n        this.formValues.credit_debit = \"Debit\";\n        this.hr_payments = true;\n        this.onInputChange(\"\");\n        return;\n      } else if (type == \"Travel Expense\") {\n        this.formValues.credit_debit = \"Debit\";\n        this.travelEpense = true;\n        return;\n      } else if (type == \"Purchase\") {\n        this.formValues.credit_debit = \"Debit\";\n        this.purchase_type = true;\n        return;\n      } else if (type == \"Return Transfer\") {\n        this.formValues.credit_debit = \"Credit\";\n        this.return_transfer = true;\n        return;\n      } else if (type == \"Vendor Payment\") {\n        this.recipient_type = \"Vendor\";\n        this.formValues.credit_debit = \"Debit\";\n        this.vendor_payment = true;\n        this.onInputChange(\"\");\n\n        return;\n      } else if (type == \"Others\") {\n        this.formValues.credit_debit = \"Credit\";\n        this.others = true;\n\n        return;\n      } else if (type == \"Utility Payments\") {\n        this.formValues.credit_debit = \"Debit\";\n        this.utility_payments = true;\n        return;\n      } else if (type == \"Un-Verified\") {\n        this.formValues.credit_debit = \"Credit\";\n        this.un_verified = true;\n        return;\n      } else if (type == \"Supplier Payment\") {\n        this.formValues.credit_debit = \"Debit\";\n        this.supplier_payment = true;\n        this.recipient_type = \"Payment Request\";\n        this.recipient_type_supplier_payment = true;\n\n        this.onInputChange(\"\");\n\n        this.recipient_type = \"Supplier\";\n\n        return;\n      } else if (type == \"Withdrawal\") {\n        this.formValues.credit_debit = \"Debit\";\n        this.recipient_type = \"PettyCash\";\n        this.withdrawal = true;\n        return;\n      } else if (type == \"Petty Cash\") {\n        this.formValues.credit_debit = \"Debit\";\n        this.recipient_type = \"PettyCash\";\n        this.petty_cash = true;\n        this.pettyCashAccount = true;\n\n        \n        return;\n      } else if (type == \"Transfer to Owner\") {\n        this.formValues.credit_debit = \"Debit\";\n        this.transfer_to_owner = true;\n        this.recipient_type_supplier_payment = true;\n        this.recipient_type = \"Payment Request\";\n        this.onInputChange(\"\");\n        this.recipient_type = \"owner_bank\";\n\n        return;\n      } else if (type == \"Transfer to Other Bank\") {\n        this.formValues.credit_debit = \"Debit\";\n        this.transfer_to_other = true;\n        this.recipient_type = \"Bank\";\n\n        return;\n      }\n    },\n    Type_Change_fields(type, data) {\n      if (data != null) {\n        this.formValues = data;\n        console.log(\"new form values\", this.formValues);\n      }\n      if (type == \"Client Payment\") {\n        this.recipient_type = \"Client\";\n        this.client_payment = true;\n      } else if (type == \"Employee Payments\") {\n        this.recipient_type = \"Employee\";\n        this.onInputChange(\"\");\n        this.employee_payment = true;\n      } else if (type == \"HR Payments\") {\n        this.recipient_type = \"Employee\";\n        this.hr_payments = true;\n        this.onInputChange(\"\");\n      } else if (type == \"Travel Expense\") {\n        this.travelEpense = true;\n      } else if (type == \"Purchase\") {\n        this.purchase_type = true;\n      } else if (type == \"Return Transfer\") {\n        this.return_transfer = true;\n      } else if (type == \"Vendor Payment\") {\n        this.recipient_type = \"Vendor\";\n        this.vendor_payment = true;\n        this.onInputChange(\"\");\n      } else if (type == \"Un-Verified\") {\n        this.un_verified = true;\n      } else if (type == \"Others\") {\n        this.others = true;\n      } else if (type == \"Utility Payments\") {\n        this.utility_payments = true;\n        this.UtilityPayment_sub_type(this.formValues.sub_type);\n        return;\n      } else if (type == \"Supplier Payment\") {\n        this.supplier_payment = true;\n        this.recipient_type = \"Payment Request\";\n        this.recipient_type_supplier_payment = true;\n\n        this.onInputChange(\"\");\n\n        this.recipient_type = \"Supplier\";\n\n        return;\n      } else if (type == \"Withdrawal\") {\n        this.recipient_type = \"PettyCash\";\n        this.withdrawal = true;\n        // this.onInputChange(\"\");\n        this.withdrawal_sub_type(this.formValues.sub_type);\n\n        return;\n      } else if (type == \"Petty Cash\") {\n        this.recipient_type = \"PettyCash\";\n        this.petty_cash = true;\n        this.pettyCashAccount = true;\n        this.onInputChange(\"\");\n        return;\n      } else if (type == \"Transfer to Owner\") {\n        this.transfer_to_owner = true;\n        this.recipient_type_supplier_payment = true;\n        this.recipient_type = \"Payment Request\";\n        this.onInputChange(\"\");\n        this.recipient_type = \"owner_bank\";\n        this.onInputChange(\"\");\n\n        return;\n      } else if (type == \"Transfer to Other Bank\") {\n        this.transfer_to_other = true;\n        this.recipient_type = \"Bank\";\n        this.onInputChange(\"\");\n\n        return;\n      }\n    },\n    Type_Change_UtilityPaymentTypes(type) {\n      this.utility_payments_except = false;\n\n      // this.clearResourceOwner();\n      if (type != \"Fuel\" && type != \"Others\") {\n        this.recipient_type = \"Accommodation\";\n        this.utility_payments_except = true;\n        this.onInputChange(\"\");\n        return;\n      } else {\n        this.clearResourceOwner();\n      }\n    },\n    UtilityPayment_sub_type(type) {\n      this.utility_payments_except = false;\n\n      if (type != \"Fuel\" && type != \"Others\" && type != \"\") {\n        this.recipient_type = \"Accommodation\";\n        this.utility_payments_except = true;\n        this.onInputChange(\"\");\n        return;\n      }\n    },\n    withdrawal_sub_type(type) {\n      this.withdrawal_pettyCashAccount = false;\n\n      if (type == \"Petty Cash\") {\n        this.recipient_type = \"PettyCash\";\n        this.withdrawal_pettyCashAccount = true;\n        this.onInputChange(\"\");\n        return;\n      }\n    },\n    Type_Change_withdrawalTypes(type) {\n      this.withdrawal_pettyCashAccount = false;\n      if (type == \"Petty Cash\") {\n        this.recipient_type = \"PettyCash\";\n        this.withdrawal_pettyCashAccount = true;\n        // this.onInputChange(\"\");\n        return;\n      } else {\n        this.clearResourceOwner();\n      }\n    },\n    clearResourceOwner() {\n      console.log(\"clear\");\n\n      this.formValues.to_from = \"\";\n      this.formValues.to_from_name = \"\";\n      this.filteredOptions = [];\n    },\n    getDocument() {\n      console.log(this.$route.params.id);\n\n      axios\n        .get(\"/getBankTransaction\", {\n          params: {\n            id: this.$route.params.id,\n          },\n        })\n        .then((response) => {\n          if (response.data.hasOwnProperty(\"success\")) {\n            if (response.data.success === true) {\n              console.log(response.data.data);\n\n              this.formValues = response.data.data;\n              // this.base_url = response.data.base_url;\n\n              this.Type_Change_fields(\n                this.formValues.transaction_type,\n                response.data.data\n              );\n              // this.formValues = response.data.data;\n\n              // this.formValues.recipient = recipient;\n              // this.formValues.resource_owner_name = resource_owner_name;\n              // this.formValues.resource_owner_id = resource_owner_id;\n\n              this.initTrHeight();\n\n              console.log(\"form\", this.formValues);\n\n              console.log(\"Document Fetched\");\n            } else {\n              this.$toast({\n                component: ToastificationContent,\n                position: \"top-right\",\n                props: {\n                  title: \"Error\",\n                  icon: \"AlertCircleIcon\",\n                  variant: \"danger\",\n                  text: \"Something went wrong, try again later\",\n                },\n              });\n            }\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: \"top-right\",\n              props: {\n                title: \"Error\",\n                icon: \"AlertCircleIcon\",\n                variant: \"danger\",\n                text: \"Something went wrong, try again later\",\n              },\n            });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    submitDocument() {\n      this.isSubmitting = true;\n\n      console.log(\"submit\", this.formValues);\n      if (\n        this.formValues.transaction_type == \"Employee Payments\" ||\n        this.formValues.transaction_type == \"HR Payments\"\n      ) {\n        if (this.formValues.to_from.length > 0) {\n          this.formValues.to_from = this.formValues.to_from;\n        }\n      }\n\n      const formData = this.formValues;\n\n      axios\n        .post(\"/updateBankAccountTransaction\", formData)\n        .then((response) => {\n          if (response.data.hasOwnProperty(\"success\")) {\n            if (response.data.success === true) {\n              console.log(response.data.data);\n\n              this.$router\n                .replace(\n                  \"/bank_accounts_transactions/\" +\n                    this.formValues.bank_account_id\n                )\n                .then(() => {\n                  this.$toast({\n                    component: ToastificationContent,\n                    position: \"top-right\",\n                    props: {\n                      title: response.data.message,\n                      icon: \"EditIcon\",\n                      variant: \"success\",\n                    },\n                  });\n                });\n            } else {\n              this.isSubmitting = false;\n\n              this.$toast({\n                component: ToastificationContent,\n                position: \"top-right\",\n                props: {\n                  title: response.data.message,\n                  icon: \"AlertCircleIcon\",\n                  variant: \"danger\",\n                },\n              });\n            }\n          } else {\n            this.isSubmitting = false;\n\n            this.$toast({\n              component: ToastificationContent,\n              position: \"top-right\",\n              props: {\n                title: \"Error\",\n                icon: \"AlertCircleIcon\",\n                variant: \"danger\",\n                text: \"Something went wrong, try again later\",\n              },\n            });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n\n    onInputChange(text) {\n      // if (text === \"\" || text === undefined) {\n      //   return;\n      // }\n      console.log(\"text\", text);\n      // return;\n\n      // https://app.gulflamar.com/api/getEmployeeDropdown\n\n      axios\n        .get(\"/bankAccountResourceOwner\", {\n          params: {\n            id: text,\n            type: this.recipient_type,\n          },\n        })\n        .then((response) => {\n          if (response.data.hasOwnProperty(\"success\")) {\n            if (response.data.success === true) {\n              console.log(response.data.data);\n              if (this.recipient_type == \"Employee\") {\n                this.filteredOptions = response.data.data.map((item) => {\n                  return {\n                    value: item.id,\n                    text: item.name,\n                  };\n                });\n              } else if (this.recipient_type_supplier_payment == true) {\n                this.filteredOptions_supplier = response.data.data.map(\n                  (item) => {\n                    return {\n                      value: item.id,\n                      text: item.name,\n                    };\n                  }\n                );\n                this.recipient_type_supplier_payment = false;\n              } else {\n                this.filteredOptions = [{ data: response.data.data }];\n              }\n              // this.filteredOptions = [{ data: response.data.data }];\n\n              console.log(\"Fetched\");\n            } else {\n              this.$toast({\n                component: ToastificationContent,\n                position: \"top-right\",\n                props: {\n                  title: \"Error\",\n                  icon: \"AlertCircleIcon\",\n                  variant: \"danger\",\n                  text: response.data.message,\n                },\n              });\n            }\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: \"top-right\",\n              props: {\n                title: \"Error\",\n                icon: \"AlertCircleIcon\",\n                variant: \"danger\",\n                text: \"Something went wrong, try again later\",\n              },\n            });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    assignOwnerField(item) {\n      if (item) {\n        this.formValues.to_from = item.item.id;\n        this.formValues.to_from_name = item.item.name;\n      }\n    },\n    assignOwnerField_type_transfer_to_other_bank(item) {\n      if (item) {\n        this.formValues.sub_type = item.item.id;\n      }\n    },\n\n    initTrHeight() {\n      this.trSetHeight(null);\n      this.$nextTick(() => {\n        // this.trSetHeight(this.$refs.form.scrollHeight)\n      });\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n@import \"@core/scss/vue/libs/vue-autosuggest.scss\";\n</style>\n"]}]}
{"remainingRequest":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\paymentRequest\\editPaymentRequestView.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\paymentRequest\\editPaymentRequestView.vue","mtime":1658909893000},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1658911433225},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1658911433727},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1658911433648},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1658911445082},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1658911433727}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnQGNvcmUvc2Nzcy92dWUvbGlicy92dWUtYXV0b3N1Z2dlc3Quc2Nzcyc7Cg=="},{"version":3,"sources":["editPaymentRequestView.vue"],"names":[],"mappingsg8BA","file":"editPaymentRequestView.vue","sourceRoot":"src/views/table/bs-table/paymentRequest","sourcesContent":["<template>\n  <b-form @submit.prevent>\n    <b-row>\n        <b-col md=\"6\">\n            <b-form-group\n              label=\"Initiated By\"\n              label-for=\"v-Initiated_By\"\n            >\n              <b-form-input\n                id=\"v-Initiated_By\"\n                v-model=\"formValues.initiated_by\"\n                :readonly=\"Readonly_Initiated_By\"\n              />\n            </b-form-group>\n          </b-col>\n            <b-col md=\"6\">\n            <b-form-group\n              label=\"Total Amount\"\n              label-for=\"v-total_amount\"\n            >\n              <b-form-input\n                id=\"v-total_amount\"\n                v-model.number=\"formValues.total_amount\"\n                :readonly=\"Readonly_Total_Amount\"\n                type=\"number\"\n              />\n            </b-form-group>\n          </b-col>\n      <!-- <b-col md=\"6\">\n        <b-form-group\n          label=\"Status\"\n          label-for=\"v-status\"\n        >\n          <v-select\n            id=\"v-status\"\n            v-model=\"formValues.status\"\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n            :options=\"statusType\"\n\n            label=\"text\"\n            :reduce=\"text => text.value\"\n          />\n        </b-form-group>\n      </b-col> -->\n\n            <b-col md=\"6\">\n                    <b-form-group\n              label=\"Statust\"\n              label-for=\"v-status\"\n            >\n              <b-form-input\n                id=\"v-status\"\n                v-model=\"formValues.status\"\n                :readonly=\"Readonly_Status\"\n                type=\"text\"\n              />\n            </b-form-group>\n      </b-col>\n\n\n      <b-col md=\"6\">\n\n        <label for=\"v-dob\">Date</label>\n        <b-input-group>\n\n          <cleave\n            id=\"date\"\n            v-model=\"formValues.date\"\n            class=\"form-control\"\n            :raw=\"false\"\n            :options=\"options.date\"\n            placeholder=\"YYYY-MM-DD\"\n          />\n\n          <b-input-group-append>\n            <b-form-datepicker\n              v-model=\"formValues.date\"\n              show-decade-nav\n              button-only\n              right\n              locale=\"en-US\"\n              aria-controls=\"v-dob\"\n            />\n          </b-input-group-append>\n\n        </b-input-group>\n      </b-col>\n\n\n\n      <!-- form repeate -->\n      <b-col md=\"12\">\n\n        <b-card title=\"Add Payment\">\n          <div>\n            <b-form\n              ref=\"form\"\n              :style=\"{height: trHeight}\"\n              class=\"repeater-form\"\n              @submit.prevent=\"repeateAgain\"\n            >\n\n              <!-- Row Loop -->\n              <b-row\n                v-for=\"(item, index) in formValues.items\"\n                :id=\"item.id\"\n                :key=\"item.id\"\n                ref=\"row\"\n              >\n\n                <b-col md=\"6\">\n                  <b-form-group\n                    label=\"Request Type\"\n                    :v-label-for=\"'request_type'+index\"\n\n                  >\n\n                    <v-select\n                      :v-id=\"'request_type'+index\"\n\n                      v-model=\"item.request_type\"\n                      :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                      :options=\"RequestType\"\n\n                      label=\"text\"\n                      :reduce=\"text => text.value\"\n                       @input=\"Type_Change(item)\"\n                    />\n\n                  </b-form-group>\n                </b-col>\n\n                <!-- <b-col md=\"6\">\n                  <b-form-group\n                    label=\"Request Owner\"\n                    label-for=\"request_owner\"\n                  >\n                    <b-form-input\n                      id=\"request_owner\"\n                      v-model=\"item.request_owner\"\n                      type=\"text\"\n                    />\n                  </b-form-group>\n                </b-col> -->\n                            <b-col md=\"6\">\n\n        <b-form-group\n          label=\"Resource Owner\"\n                    :v-label-for=\"'autosuggest__input'+index\"\n\n        >\n          <vue-autosuggest\n            v-model=\"item.request_owner\"\n\n            :suggestions=\"item.filteredOptions\"\n\n            :limit=\"10\"\n            :input-props=\"{id:'autosuggest__input'+index,class:'form-control', placeholder:'Search with name or ID',}\"\n            @input=\"onInputChange(item)\"\n            @selected=\"assignOwnerField(item,$event)\"\n          >\n            <template slot-scope=\"{suggestion}\">\n              <span class=\"my-suggestion-item\">{{ suggestion.item.name }}, {{ suggestion.item.id }} </span>\n            </template>\n          </vue-autosuggest>\n        </b-form-group>\n      </b-col>\n\n                <b-col md=\"6\">\n                  <b-form-group\n                    label=\"Payemnt Type\"\n                    :v-label-for=\"'payment_type'+index\"\n\n                  >\n\n                    <v-select\n                      :v-id=\"'payment_type'+index\"\n                      v-model=\"item.payment_type\"\n                      :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                      :options=\"paymentType\"\n\n                      label=\"text\"\n                      :reduce=\"text => text.value\"\n                    />\n\n                  </b-form-group>\n                </b-col>\n                <b-col md=\"6\">\n                  <b-form-group\n                    label=\"Amount\"\n                    :v-label-for=\"'amount'+index\"\n\n                  >\n                    <b-form-input\n                       :v-id=\"'amount'+index\"\n\n                      @input=\"totalAmount\"\n                      v-model.number=\"item.amount\"\n                      type=\"number\"\n                      placeholder=\"0.00\"\n                    @scroll.prevent\n                    />\n                  </b-form-group>\n                </b-col>\n                      <b-col md=\"6\">\n                        <b-form-group\n                        label=\"Status\"\n                        :v-label-for=\"'status'+index\"\n\n                        >                      \n                        <v-select\n\n                            :v-id=\"'status'+index\"\n\n                            v-model=\"item.status\"\n                            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                            :options=\"statusType\"\n                            @input=\"ChangePaymentStatus()\"\n\n                            label=\"text\"\n                            :reduce=\"text => text.value\"\n                        />\n                        </b-form-group>\n                    </b-col>\n                    <b-col md=\"6\">\n                        <b-form-group\n                        label=\"Attachment (*).\"\n                        :v-label-for=\"'attach'+index\"\n                        >\n\n                        <b-form-file\n                            :v-id=\"'attach'+index\"\n                            multiple\n                            v-model=\"item.new_attachment\"\n                            accept=\"image/* , .pdf\"\n\n                            placeholder=\"Upload attachment...\"\n                            drop-placeholder=\"Drop file here...\"\n                            @change=\"imageUpload($event,item)\"\n                        />\n                        </b-form-group>\n                    </b-col>\n                            <b-col md=\"6 my-2 border rounded m-0 p-0 text-center\" v-for=\"file in item.attachment\" :key=\"file\">\n                        <b-form-group\n                            class=\"m-0 p-0\"\n                        >\n\n                        <a\n                                class=\"btn btn-primary mx-2 my-0\"\n                                :href=\"base_url+'/'+file\"\n                                target=\"_blank\"\n                                :title=\"file\"\n                            >View file</a>\n                            <button\n                            :title=\"file\"\n                                class=\"btn btn-danger mx-2 my-0\"\n                                @click=\"reomveFile(item,file)\"\n                            >Delete file</button>\n                        </b-form-group>\n                    </b-col>\n                    <b-col md=\"8\">\n                    <b-form-group\n                        label=\"Notes\"\n                        :v-label-for=\"'notes'+index\"\n\n                    >\n\n                    <b-form-textarea\n                        :v-id=\"'notes'+index\"\n\n                        v-model=\"item.notes\"\n                        placeholder=\"Write Note's Here..\"\n                        rows=\"2\"\n                    />\n                    </b-form-group>\n                </b-col>\n\n                <!-- Remove Button -->\n                <b-col\n                  md=\"2\"\n                  class=\"mb-50\"\n                >\n                  <b-button\n                    v-ripple.400=\"'rgba(234, 84, 85, 0.15)'\"\n                    variant=\"outline-danger\"\n                    class=\"mt-0 mt-md-2\"\n                    @click=\"removeItem(index)\"\n                  >\n                    <feather-icon\n                      icon=\"XIcon\"\n                      class=\"mr-25\"\n                    />\n                    <span>Delete</span>\n                  </b-button>\n                </b-col>\n                <b-col cols=\"12\">\n                  <hr class=\"hr_divider\">\n                </b-col>\n              </b-row>\n\n            </b-form>\n          </div>\n          <b-button\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            variant=\"primary\"\n            @click=\"repeateAgain\"\n          >\n            <feather-icon\n              icon=\"PlusIcon\"\n              class=\"mr-25\"\n            />\n            <span>Add more</span>\n          </b-button>\n\n        </b-card>\n      </b-col>\n\n\n      <!-- submit and reset -->\n      <b-col md=\"12\">\n        <b-button\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          type=\"submit\"\n          variant=\"primary\"\n          class=\"mr-1\"\n          :disabled=\"isSubmitting\"\n          @click=\"Submit\"\n        >\n          <b-spinner\n            v-if=\"isSubmitting\"\n            small\n          />\n          <span v-if=\"isSubmitting\">Please Wait</span>\n\n          <span v-if=\"!isSubmitting\">Submit</span>\n\n        </b-button>\n\n      </b-col>\n    </b-row>\n  </b-form>\n</template>\n\n<script>\nimport {\n  BRow, BCol, BFormGroup, BFormInput, BFormCheckbox, BForm, BButton, BFormDatepicker, BCard, BSpinner, BFormFile, BFormTextarea, BInputGroupAppend, BInputGroup,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport vSelect from 'vue-select'\nimport axios from '@axios'\nimport { heightTransition } from '@core/mixins/ui/transition'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\nimport { VueAutosuggest } from 'vue-autosuggest'\n\nimport Cleave from 'vue-cleave-component'\nimport 'cleave.js/dist/addons/cleave-phone.us'\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormInput,\n    BFormCheckbox,\n    BForm,\n    BButton,\n    BFormDatepicker,\n    vSelect,\n    VueAutosuggest,\n    BCard,\n    BSpinner,\n    BFormFile,\n    BFormTextarea,\n    BInputGroupAppend,\n    Cleave,\n    BInputGroup,\n\n  },\n  directives: {\n    Ripple,\n  },\n\n  mixins: [heightTransition],\n\n  data() {\n    return {\n      options: {\n        date: {\n          date: true,\n          delimiter: '-',\n          datePattern: ['Y', 'm', 'd'],\n        },\n      },\n    //   filteredOptions: [],\n\n      isSubmitting: false,\n      base_url:'',\n      statusType: [\n        { value: 'Unpaid', text: 'Unpaid' },\n        // { value: 'Partially Paid', text: 'Partially Paid' },\n        { value: 'Paid', text: 'Paid' },\n      ],\n        paymentType: [\n        { value: 'Cash', text: 'Cash' },\n        { value: 'Bank Transfer', text: 'Bank Transfer' },\n      ],\n\n\n\n\n    //   items: [{\n    //     request_type:'',\n    //     request_owner:'',\n    //     request_owner_id:'',\n\n    //     payment_type:'',\n    //     amount:'',\n    //     status:'',\n    //     attachment:[],\n    //     notes:'',\n    //   filteredOptions: [],\n    //   }],\n      nextTodoId: 2,\n\n\n// new code\n\n      Readonly_Initiated_By:true,\n      Readonly_Total_Amount:true,\n      Readonly_Status: true,\n\n    //   initiated_by : 'User Name',\n        formValues: {\n            total_amount:0,\n            status:'Unpaid',\n            date:'',\n            initiated_by : '',\n\n        items: [{\n        request_type:'',\n        request_owner:'',\n        request_owner_id:'',\n\n        payment_type:'',\n        amount:'',\n        status:'',\n        attachment:[],\n        new_attachment:[],\n\n        attachment_length:0,\n        attachment_file_name:'',\n\n        notes:'',\n      filteredOptions: [],\n      }\n      ],\n\n\n      },\n    RequestType: [\n        { value: 'Accommodation', text: 'Accommodation' },\n        { value: 'Client', text: 'Client' },\n        { value: 'Employee', text: 'Employee' },\n        { value: 'Supplier', text: 'Supplier' },\n        { value: 'Vendor', text: 'Vendor' },\n\n      ],\n\n    }\n  },\n  mounted() {\n    this.initTrHeight()\n    // this.getUserLogin()\n    this.getDocument()\n\n  },\n  created() {\n    window.addEventListener('resize', this.initTrHeight)\n  },\n  destroyed() {\n    window.removeEventListener('resize', this.initTrHeight)\n  },\n  methods: {\n\n\n    totalAmount(){\n        var TotalAmount = 0;\n\n        for (let i = 0; i < this.formValues.items.length;i++){\n            let amount = this.formValues.items[i]['amount'];\n                TotalAmount = Number(TotalAmount) + Number(amount);            \n        }\n            this.formValues.total_amount = Number(TotalAmount);\n\n\n    },\n        getDocument() {\n        console.log(this.$route.params.id)\n    \n      axios.get('/getPaymentRequest', {\n          params: {\n          id: this.$route.params.id,\n        },\n      }).then(response => {\n        if (response.data.hasOwnProperty('success')) {\n          if (response.data.success === true) {\n             console.log(response.data.data); \n            // var recipient = response.data.data.recipient;\n            // var resource_owner_name = response.data.data.resource_owner_name;\n            // var resource_owner_id = response.data.data.resource_owner_id;\n\n\n            // console.log('recipient',recipient);\n\n            this.formValues = response.data.data;\n            this.formValues.items = response.data.data.payments;\n\n          this.base_url = response.data.base_url;\n\n            // this.Type_Change(this.formValues.recipient_type);\n            // this.formValues.recipient = recipient;\n            // this.formValues.resource_owner_name = resource_owner_name;\n            // this.formValues.resource_owner_id = resource_owner_id;\n\n\n\n\n            \n                this.initTrHeight();\n                this.ChangePaymentStatus();\n\n            console.log('form final' , this.formValues);\n            \n\n\n            console.log('Document Fetched')\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        } else {\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: 'Something went wrong, try again later',\n            },\n          })\n        }\n      }).catch(error => {\n        console.error(error)\n      })\n    },\n    ChangePaymentStatus(){\n        let type = '';\n        if (this.formValues.items.length > 0){\n                type = this.formValues.items[0]['status'];\n            \n                if(type == '' || type == null){ type = \"Unpaid\"; }\n\n                    const allEqual = arr => arr.every(v => v['status'] === type);\n                    if(allEqual(this.formValues.items)){\n                        this.formValues.status = type;\n                    }else{\n                        this.formValues.status = \"Partially Paid\";\n                    }\n        }else{\n            type = \"Unpaid\";\n            this.formValues.status = type;\n            return ;\n        }\n\n        \n\n    },\n\n    Submit(){\n        this.isSubmitting = true;\n        this.totalAmount();\n        console.log('submt',this.formValues);\n        console.log('form items',this.formValues.items);\n        \n        delete this.formValues.payments;\n        console.log('after remove payments',this.formValues);\n              // Remove all filteredOptions from formValues.items\n        for(let i=0;i<this.formValues.items.length;i++){\n            this.formValues.items[i]['filteredOptions'] = [];\n        //    delete this.formValues.items[i].filteredOptions;\n\n            this.formValues.items[i]['attachment_file_name'] = 'file'+i;\n\n\n        }\n        console.log('new form values',this.formValues);\n\n        \n// return ;\n\n        console.log('new form values',this.formValues);\n\n        // create new formData for post request to send files\n\n              const formData = new FormData()\n\n      Object.entries(this.formValues).forEach(([key, value]) => {\n        if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n          if (value instanceof File) {\n            formData.append(key, value)\n          } else {\n            console.log(key, value)\n            formData.append(key, JSON.stringify(value))\n          }\n        } else if (typeof value === 'object' && value !== null && Array.isArray(value)) {\n          formData.append(key, JSON.stringify(value))\n        } else if (value !== null) {\n          formData.append(key, value)\n        }\n      })\n\n\n                // append selected files into formData with unique array name\n              for(let i=0;i<this.formValues.items.length;i++){\n\n                  for(let j=0;j<this.formValues.items[i]['attachment_length'];j++){\n\n                      formData.append(\"file\"+i+\"[]\", this.formValues.items[i]['new_attachment'][j]);\n\n                  }\n\n\n              }\n\n     //   this.isSubmitting = false;\n//       for (var pair of formData.entries()) {\n//     console.log(pair[0]+ ', ' + pair[1]); \n// }\n// console.log('values');\n// for (var value of formData.values()) {\n//    console.log(value);\n// }\n\n\n\n\n\n      axios.post('/updatePaymentRequest',\n        formData).then(response => {\n        if (response.data.hasOwnProperty('success')) {\n          if (response.data.success === true) {\n            console.log(response.data.data)\n\n            this.$router.replace('/List_Payment_Request')\n              .then(() => {\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: response.data.message,\n                    icon: 'EditIcon',\n                    variant: 'success',\n                  },\n                })\n              })\n          } else {\n            this.isSubmitting = false\n\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: response.data.message,\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n              },\n            })\n          }\n        } else {\n          this.isSubmitting = false\n\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: 'Something went wrong, try again later',\n            },\n          })\n        }\n      }).catch(error => {\n        console.error(error)\n      })\n\n\n\n\n\n      \n        \n    },\n    \n\n    onInputChange(item) {\n        let text = item.request_owner;\n        let type = item.request_type;\n      if (text === '' || text === undefined) {\n        return\n      }\n        if (type === '' || type === undefined) {\n        return\n      }\n      console.log('text',text);\n    //   return;\n      \n      // https://app.gulflamar.com/api/getEmployeeDropdown\n\n      axios.get('/documentResourceOwner', {\n        params: {\n          id: text,\n          type: item.request_type,\n        },\n      }).then(response => {\n        if (response.data.hasOwnProperty('success')) {\n          if (response.data.success === true) {\n            console.log(response.data.data)\n            item.filteredOptions = [{ data: response.data.data }];\n\n            console.log('item text change',item);\n            \n\n            console.log('Document Resource Owners Fetched')\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: response.data.message,\n              },\n            })\n          }\n        } else {\n          this.$toast({\n            component: ToastificationContent,\n            position: 'top-right',\n            props: {\n              title: 'Error',\n              icon: 'AlertCircleIcon',\n              variant: 'danger',\n              text: 'Something went wrong, try again later',\n            },\n          })\n        }\n      }).catch(error => {\n        console.error(error)\n      })\n    },\n    assignOwnerField(item,event) {\n          console.log('item',item);\n          console.log('name',event.item);\n          item.request_owner = event.item.name;\n          item.request_owner_id = event.item.id;\n          console.log('item new',item);\n\n\n          return;\n    },\n\n    Type_Change(item) {\n        // console.log('recipient_type',this.formValues.recipient_type);\n        // this.formValues.recipient = null;\n        // console.log('recipient',this.formValues.recipient);\n\n        // this.recipients = null;\n        this.clearResourceOwner(item);\n        // if(type == \"Accommodation\"){\n        //     this.recipients = this.recipients_accommodation;\n        //     return ;\n\n        // }\n        // if(type == \"Client\"){\n        //     this.recipients = this.recipients_client;\n        //     return ;\n\n        // }\n        // if(type == \"Employee\"){\n        //     this.recipients = this.recipients_employee;\n        //     return ;\n\n        // }\n        // if(type == \"Supplier\"){\n        //     this.recipients = this.recipients_supplier;\n        //     return ;\n\n        // }\n        // if(type == \"Vendor\"){\n        //     this.recipients = this.recipients_vendor;\n        //     return ;\n\n        // }\n        // console.log('type',type);\n        // this.recipients = this.recipients_accommodation;\n        // return ;\n\n    },\n\n    clearResourceOwner(item){\n      console.log('clear item ',item);\n      item.request_owner = '';\n      item.request_owner_id = '';\n\n      item.filteredOptions = [];   \n      console.log('clear item new',item);\n\n    //     this.formValues.resource_owner_id = '';\n    //     this.formValues.resource_owner_name = '';\n    //   this.filteredOptions = [];\n\n      // console.log('filteredOptions',this.filteredOptions);\n      // console.log('this.formValues.resource_owner_id',this.formValues.resource_owner_id);\n      // console.log('this.formValues.resource_owner_name',this.formValues.resource_owner_name);\n\n\n      \n    },\n    // getUserLogin() {\n\n    //   axios.get('/user', {\n    //     params: {\n    //     },\n    //   }).then(response => {\n    //       console.log('response User', response.data.data)\n    //       console.log('user',response.data);\n    //       this.formValues.initiated_by = response.data.name;\n\n    //     }).catch(error => {\n    //       console.error(error)\n    //     })\n    // },\n\n    imageUpload(e,item) {\n      console.log('attachment files',e.target.files);\n      if(e.target.files.length > 0){\n        for(let i=0;i<e.target.files.length;i++){\n          item.new_attachment.push(e.target.files[i]);\n        }\n        item.attachment_length = e.target.files.length;\n      }\n      else{\n        item.new_attachment = null;\n        item.attachment_length = 0;\n\n      }\n      console.log('attachment',item)\n      console.log('attachment_length',item.attachment_length)\n\n    },\n\n\n        reomveFile(item,file) {\n        console.log('this.formValues.attachment',item.attachment);\n\n        const index = item.attachment.indexOf(file);\n        if (index > -1) {\n        item.attachment.splice(index, 1); // 2nd parameter means remove one item only\n        }\n                console.log('this.formValues.attachment',item.attachment);\n\n                this.initTrHeight();\n\n    },\n\n    repeateAgain() {\n        this.totalAmount();\n\n\n      this.formValues.items.push({\n        // request_type:'',\n        // request_owner:'',\n        // payment_type:'',\n        // amount:'',\n        // status:'',\n        // attachment:null,\n        // notes:'',\n\n\n        request_type:'',\n        request_owner:'',\n        payment_type:'',\n        amount:'',\n        status:'',\n        new_attachment:[],\n        notes:'',\n        attachment_length:0,\n        attachment_file_name:'',\n        request_owner_id:'',\n        filteredOptions: [],\n        attachment:[],\n\n\n\n      })\n      console.log(this.formValues.items);\n        this.totalAmount();\n      this.ChangePaymentStatus();\n      this.$nextTick(() => {\n        this.trAddHeight(this.$refs.row[0].offsetHeight)\n      })\n      console.log('new form push',this.formValues);\n                this.initTrHeight();\n\n    },\n    removeItem(index) {\n      this.formValues.items.splice(index, 1)\n      this.trTrimHeight(this.$refs.row[0].offsetHeight)\n        this.totalAmount();\n        this.ChangePaymentStatus();\n                this.initTrHeight();\n\n    },\n    initTrHeight() {\n      this.trSetHeight(null)\n      this.$nextTick(() => {\n        this.trSetHeight(this.$refs.form.scrollHeight)\n      })\n    },\n  },\n}\n</script>\n\n<style>\n\ntextarea {\n    resize:none;\n}\ninput[type=number]::-webkit-inner-spin-button, \ninput[type=number]::-webkit-outer-spin-button { \n  -webkit-appearance: none; \n  margin: 0; \n}\n.hr_divider{\n  border-bottom: 2px solid #82868b;\n}\n\n</style>\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-autosuggest.scss';\n</style>\n\n"]}]}
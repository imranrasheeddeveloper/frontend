{"remainingRequest":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\dashboard\\ecommerce\\ChartjsBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\dashboard\\ecommerce\\ChartjsBarChart.vue","mtime":1658909893000},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1658911406756},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1658911433727}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgQkNhcmQsIEJDYXJkSGVhZGVyLCBCQ2FyZEJvZHksIEJDYXJkVGl0bGUsCn0gZnJvbSAnYm9vdHN0cmFwLXZ1ZScKaW1wb3J0IGZsYXRQaWNrciBmcm9tICd2dWUtZmxhdHBpY2tyLWNvbXBvbmVudCcKCmltcG9ydCBheGlvcyBmcm9tICdAYXhpb3MnCmltcG9ydCBEYXRlcGlja2VyIGZyb20gJ3Z1ZWpzLWRhdGVwaWNrZXInCmltcG9ydCB7ICR0aGVtZUNvbG9ycyB9IGZyb20gJ0B0aGVtZUNvbmZpZycKaW1wb3J0IGNoYXJ0anNEYXRhIGZyb20gJy4vY2hhcnRqc0RhdGEnCmltcG9ydCBDaGFydGpzQ29tcG9uZW50QmFyQ2hhcnQgZnJvbSAnLi9jaGFydHMtY29tcG9uZW50cy9DaGFydGpzQ29tcG9uZW50QmFyQ2hhcnQudnVlJwoKLy8gY29sb3JzCmNvbnN0IGNoYXJ0Q29sb3JzID0gewogIHByaW1hcnlDb2xvclNoYWRlOiAnIzgzNkFGOScsCiAgeWVsbG93Q29sb3I6ICcjZmZlODAwJywKICBzdWNjZXNzQ29sb3JTaGFkZTogJyMyOGRhYzYnLAogIHdhcm5pbmdDb2xvclNoYWRlOiAnI2ZmZTgwMicsCiAgd2FybmluZ0xpZ2h0Q29sb3I6ICcjRkRBQzM0JywKICBpbmZvQ29sb3JTaGFkZTogJyMyOTlBRkYnLAogIGdyZXlDb2xvcjogJyM0RjVENzAnLAogIGJsdWVDb2xvcjogJyMyYzlhZmYnLAogIGJsdWVMaWdodENvbG9yOiAnIzg0RDBGRicsCiAgZ3JleUxpZ2h0Q29sb3I6ICcjRURGMUY0JywKICB0b29sdGlwU2hhZG93OiAncmdiYSgwLCAwLCAwLCAwLjI1KScsCiAgbGluZUNoYXJ0UHJpbWFyeTogJyM2NjZlZTgnLAogIGxpbmVDaGFydERhbmdlcjogJyNmZjQ5NjEnLAogIGxhYmVsQ29sb3I6ICcjNmU2YjdiJywKICBncmlkX2xpbmVfY29sb3I6ICdyZ2JhKDIwMCwgMjAwLCAyMDAsIDAuMiknLAp9CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkNhcmQsCiAgICBCQ2FyZEhlYWRlciwKICAgIEJDYXJkQm9keSwKICAgIEJDYXJkVGl0bGUsCiAgICBmbGF0UGlja3IsCiAgICBDaGFydGpzQ29tcG9uZW50QmFyQ2hhcnQsCiAgICBEYXRlcGlja2VyLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1heEdyYXBoOiA1MDAwLAogICAgICByZWZyZXNoS2V5OiAwLAogICAgICBjaGFydGpzRGF0YSwKICAgICAgc2VsZWN0ZWRZZWFyOiAnMjAyMS0wMS0wMScsCiAgICAgIHJhbmdlUGlja2VyOiBbJzIwMTktMDUtMDEnLCAnMjAxOS0wNS0xMCddLAogICAgICBkZWZhdWx0RGF0ZTogJzIwMjEtMDEtMDEnLAogICAgICBEYXRlUGlja2VyRm9ybWF0OiAneXl5eScsCiAgICAgIGxhdGVzdEJhckNoYXJ0OiB7CiAgICAgICAgZGF0YTogewogICAgICAgICAgbGFiZWxzOiBbJ0phbicsICdGZWInLCAnTWFyJywgJ0FwcicsICdNYXknLCAnSnVuJywgJ0p1bCcsICdBdWcnLCAnU2VwJywgJ09jdCcsICdOb3YnLCAnRGVjJ10sCiAgICAgICAgICBkYXRhc2V0czogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgZGF0YTogWzI3NSwgOTAsIDE5MCwgMjA1LCAxMjUsIDg1LCA1NSwgODcsIDEyNywgMTUwLCAyMzAsIDI4MCwgMTkwXSwKICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGNoYXJ0Q29sb3JzLnN1Y2Nlc3NDb2xvclNoYWRlLAogICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAndHJhbnNwYXJlbnQnLAogICAgICAgICAgICB9LAogICAgICAgICAgXSwKICAgICAgICB9LAogICAgICAgIG9wdGlvbnM6IHsKICAgICAgICAgIGVsZW1lbnRzOiB7CiAgICAgICAgICAgIHJlY3RhbmdsZTogewogICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyLAogICAgICAgICAgICAgIGJvcmRlclNraXBwZWQ6ICdib3R0b20nLAogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsCiAgICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSwKICAgICAgICAgIHJlc3BvbnNpdmVBbmltYXRpb25EdXJhdGlvbjogNTAwLAogICAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLAogICAgICAgICAgfSwKICAgICAgICAgIHRvb2x0aXBzOiB7CiAgICAgICAgICAgIC8vIFVwZGF0ZWQgZGVmYXVsdCB0b29sdGlwIFVJCiAgICAgICAgICAgIHNoYWRvd09mZnNldFg6IDEsCiAgICAgICAgICAgIHNoYWRvd09mZnNldFk6IDEsCiAgICAgICAgICAgIHNoYWRvd0JsdXI6IDgsCiAgICAgICAgICAgIHNoYWRvd0NvbG9yOiBjaGFydENvbG9ycy50b29sdGlwU2hhZG93LAogICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICR0aGVtZUNvbG9ycy5saWdodCwKICAgICAgICAgICAgdGl0bGVGb250Q29sb3I6ICR0aGVtZUNvbG9ycy5kYXJrLAogICAgICAgICAgICBib2R5Rm9udENvbG9yOiAkdGhlbWVDb2xvcnMuZGFyaywKICAgICAgICAgIH0sCiAgICAgICAgICBzY2FsZXM6IHsKICAgICAgICAgICAgeEF4ZXM6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLAogICAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7CiAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRydWUsCiAgICAgICAgICAgICAgICAgIGNvbG9yOiBjaGFydENvbG9ycy5ncmlkX2xpbmVfY29sb3IsCiAgICAgICAgICAgICAgICAgIHplcm9MaW5lQ29sb3I6IGNoYXJ0Q29sb3JzLmdyaWRfbGluZV9jb2xvciwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBzY2FsZUxhYmVsOiB7CiAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgICAgICAgIGZvbnRDb2xvcjogY2hhcnRDb2xvcnMubGFiZWxDb2xvciwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgeUF4ZXM6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLAogICAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBjaGFydENvbG9ycy5ncmlkX2xpbmVfY29sb3IsCiAgICAgICAgICAgICAgICAgIHplcm9MaW5lQ29sb3I6IGNoYXJ0Q29sb3JzLmdyaWRfbGluZV9jb2xvciwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB0aWNrczogewogICAgICAgICAgICAgICAgICBzdGVwU2l6ZTogMTAwLAogICAgICAgICAgICAgICAgICBtaW46IDAsCiAgICAgICAgICAgICAgICAgIG1heDogdGhpcy5tYXhHcmFwaCwKICAgICAgICAgICAgICAgICAgZm9udENvbG9yOiBjaGFydENvbG9ycy5sYWJlbENvbG9yLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICBdLAogICAgICAgICAgfSwKICAgICAgICB9LAogICAgICB9LAogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldFJldmVudWUoKQogIH0sCgogIG1ldGhvZHM6IHsKCiAgICBnZXRSZXZlbnVlKCkgewogICAgICBjb25zdCBkID0gbmV3IERhdGUoKQogICAgICBjb25zdCB5ZWFyID0gZC5nZXRGdWxsWWVhcigpCgogICAgICBheGlvcy5nZXQoJy9nZXRNb250aGx5UmV2ZW51ZXMnLCB7CiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICB5ZWFyLAoKICAgICAgICB9LAogICAgICB9KQoKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLmxhdGVzdEJhckNoYXJ0LmRhdGEgPSB7CiAgICAgICAgICAgIGxhYmVsczogWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWF5JywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsICdPY3QnLCAnTm92JywgJ0RlYyddLAogICAgICAgICAgICBkYXRhc2V0czogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRhdGE6IHJlc3BvbnNlLmRhdGEuZGF0YSwKICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogY2hhcnRDb2xvcnMuc3VjY2Vzc0NvbG9yU2hhZGUsCiAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJ3RyYW5zcGFyZW50JywKICAgICAgICAgICAgICB9LAogICAgICAgICAgICBdLAogICAgICAgICAgfQogICAgICAgICAgdGhpcy5tYXhHcmFwaCA9IHJlc3BvbnNlLmRhdGEubWF4VmFsdWUgKyAxMDAwCiAgICAgICAgICB0aGlzLnJlZnJlc2hLZXkgKz0gMQoKICAgICAgICAgIC8vIFRPRE8KICAgICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKQogICAgICAgIH0pCiAgICB9LAoKICAgIHJlZnJlc2hSZXZlbnVlKHZhbGUpIHsKICAgICAgY29uc29sZS5sb2codmFsZS5nZXRGdWxsWWVhcigpKQogICAgICBheGlvcy5nZXQoJy9nZXRNb250aGx5UmV2ZW51ZXMnLCB7CiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICB5ZWFyOiB2YWxlLmdldEZ1bGxZZWFyKCksCgogICAgICAgIH0sCiAgICAgIH0pCgogICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgIHRoaXMubGF0ZXN0QmFyQ2hhcnQuZGF0YSA9IHsKICAgICAgICAgICAgbGFiZWxzOiBbJ0phbicsICdGZWInLCAnTWFyJywgJ0FwcicsICdNYXknLCAnSnVuJywgJ0p1bCcsICdBdWcnLCAnU2VwJywgJ09jdCcsICdOb3YnLCAnRGVjJ10sCiAgICAgICAgICAgIGRhdGFzZXRzOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGF0YTogcmVzcG9uc2UuZGF0YS5kYXRhLAogICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBjaGFydENvbG9ycy5zdWNjZXNzQ29sb3JTaGFkZSwKICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAndHJhbnNwYXJlbnQnLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIF0sCiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLm1heEdyYXBoID0gcmVzcG9uc2UuZGF0YS5tYXhWYWx1ZSArIDEwMDAKICAgICAgICAgIHRoaXMucmVmcmVzaEtleSArPSAxCgogICAgICAgICAgLy8gVE9ETwogICAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpCiAgICAgICAgfSkKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["ChartjsBarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChartjsBarChart.vue","sourceRoot":"src/views/dashboard/ecommerce","sourcesContent":["<template>\n  <b-card no-body>\n    <b-card-header>\n      <b-card-title>Revenue Report</b-card-title>\n      <!-- datepicker -->\n      <div class=\"d-flex align-items-center\">\n        <feather-icon\n          icon=\"CalendarIcon\"\n          size=\"16\"\n        />\n        <!-- <flat-pickr\n          v-model=\"rangePicker\"\n          :config=\"{ dateFormat: 'Y',}\"\n          class=\"form-control flat-picker bg-transparent border-0 shadow-none\"\n          placeholder=\"YYYY-MM-DD\"\n        /> -->\n\n        <datepicker\n          id=\"input-id\"\n          v-model=\"selectedYear\"\n          :format=\"DatePickerFormat\"\n          minimum-view=\"year\"\n          name=\"datepicker\"\n          input-class=\"form-control flat-picker bg-transparent border-0 shadow-none\"\n          @selected=\"refreshRevenue\"\n        />\n\n      </div>\n      <!-- datepicker -->\n    </b-card-header>\n\n    <!-- chart -->\n    <b-card-body>\n      <chartjs-component-bar-chart\n        :key=\"refreshKey\"\n        :height=\"230\"\n        :data=\"latestBarChart.data\"\n\n        :options=\"latestBarChart.options\"\n      />\n    </b-card-body>\n  </b-card>\n</template>\n\n<script>\nimport {\n  BCard, BCardHeader, BCardBody, BCardTitle,\n} from 'bootstrap-vue'\nimport flatPickr from 'vue-flatpickr-component'\n\nimport axios from '@axios'\nimport Datepicker from 'vuejs-datepicker'\nimport { $themeColors } from '@themeConfig'\nimport chartjsData from './chartjsData'\nimport ChartjsComponentBarChart from './charts-components/ChartjsComponentBarChart.vue'\n\n// colors\nconst chartColors = {\n  primaryColorShade: '#836AF9',\n  yellowColor: '#ffe800',\n  successColorShade: '#28dac6',\n  warningColorShade: '#ffe802',\n  warningLightColor: '#FDAC34',\n  infoColorShade: '#299AFF',\n  greyColor: '#4F5D70',\n  blueColor: '#2c9aff',\n  blueLightColor: '#84D0FF',\n  greyLightColor: '#EDF1F4',\n  tooltipShadow: 'rgba(0, 0, 0, 0.25)',\n  lineChartPrimary: '#666ee8',\n  lineChartDanger: '#ff4961',\n  labelColor: '#6e6b7b',\n  grid_line_color: 'rgba(200, 200, 200, 0.2)',\n}\n\nexport default {\n  components: {\n    BCard,\n    BCardHeader,\n    BCardBody,\n    BCardTitle,\n    flatPickr,\n    ChartjsComponentBarChart,\n    Datepicker,\n  },\n  data() {\n    return {\n      maxGraph: 5000,\n      refreshKey: 0,\n      chartjsData,\n      selectedYear: '2021-01-01',\n      rangePicker: ['2019-05-01', '2019-05-10'],\n      defaultDate: '2021-01-01',\n      DatePickerFormat: 'yyyy',\n      latestBarChart: {\n        data: {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n          datasets: [\n            {\n              data: [275, 90, 190, 205, 125, 85, 55, 87, 127, 150, 230, 280, 190],\n              backgroundColor: chartColors.successColorShade,\n              borderColor: 'transparent',\n            },\n          ],\n        },\n        options: {\n          elements: {\n            rectangle: {\n              borderWidth: 2,\n              borderSkipped: 'bottom',\n            },\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n          responsiveAnimationDuration: 500,\n          legend: {\n            display: false,\n          },\n          tooltips: {\n            // Updated default tooltip UI\n            shadowOffsetX: 1,\n            shadowOffsetY: 1,\n            shadowBlur: 8,\n            shadowColor: chartColors.tooltipShadow,\n            backgroundColor: $themeColors.light,\n            titleFontColor: $themeColors.dark,\n            bodyFontColor: $themeColors.dark,\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                gridLines: {\n                  display: true,\n                  color: chartColors.grid_line_color,\n                  zeroLineColor: chartColors.grid_line_color,\n                },\n                scaleLabel: {\n                  display: false,\n                },\n                ticks: {\n                  fontColor: chartColors.labelColor,\n                },\n              },\n            ],\n            yAxes: [\n              {\n                display: true,\n                gridLines: {\n                  color: chartColors.grid_line_color,\n                  zeroLineColor: chartColors.grid_line_color,\n                },\n                ticks: {\n                  stepSize: 100,\n                  min: 0,\n                  max: this.maxGraph,\n                  fontColor: chartColors.labelColor,\n                },\n              },\n            ],\n          },\n        },\n      },\n    }\n  },\n\n  mounted() {\n    this.getRevenue()\n  },\n\n  methods: {\n\n    getRevenue() {\n      const d = new Date()\n      const year = d.getFullYear()\n\n      axios.get('/getMonthlyRevenues', {\n        params: {\n          year,\n\n        },\n      })\n\n        .then(response => {\n          this.latestBarChart.data = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n              {\n                data: response.data.data,\n                backgroundColor: chartColors.successColorShade,\n                borderColor: 'transparent',\n              },\n            ],\n          }\n          this.maxGraph = response.data.maxValue + 1000\n          this.refreshKey += 1\n\n          // TODO\n        }).catch(error => {\n          console.error(error)\n        })\n    },\n\n    refreshRevenue(vale) {\n      console.log(vale.getFullYear())\n      axios.get('/getMonthlyRevenues', {\n        params: {\n          year: vale.getFullYear(),\n\n        },\n      })\n\n        .then(response => {\n          this.latestBarChart.data = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n              {\n                data: response.data.data,\n                backgroundColor: chartColors.successColorShade,\n                borderColor: 'transparent',\n              },\n            ],\n          }\n          this.maxGraph = response.data.maxValue + 1000\n          this.refreshKey += 1\n\n          // TODO\n        }).catch(error => {\n          console.error(error)\n        })\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-flatpicker.scss';\n</style>\n\n<style lang=\"css\" >\n\n.vdp-datepicker__calendar { right: 0; }\n\n</style>\n"]}]}
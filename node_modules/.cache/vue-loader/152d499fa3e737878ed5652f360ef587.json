{"remainingRequest":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\userLevelTable.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\table\\bs-table\\userLevelTable.vue","mtime":1658918935425},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1658911433225},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1658911433727},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1658911433648},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1658911433727}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVubGFyZ2VhYmxlLWltYWdlIC5mdWxsIHsKICAgIHotaW5kZXg6IDk5OTkgIWltcG9ydGFudDsKCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSkgIWltcG9ydGFudDsKfQoKLmN1c3RvbUhlYWQgewoKICAgIGJhY2tncm91bmQtY29sb3I6ICMwNjYwOGYgIWltcG9ydGFudDsKICAgIGNvbG9yOiAjZmZmOwp9Cg=="},{"version":3,"sources":["userLevelTable.vue"],"names":[],"mappingskgCA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA","file":"userLevelTable.vue","sourceRoot":"src/views/table/bs-table","sourcesContent":["<template>\n<div>\n\n    <!-- search input -->\n    <div class=\"custom-search d-flex justify-content-between\">\n        <b-form-group>\n            <div class=\"d-flex align-items-center\">\n                <!-- <label class=\"mr-1\">Search</label> -->\n\n                <b-input-group>\n                    <b-input-group-prepend>\n                        <b-button variant=\"outline-primary\" @click=\"page=1, getEmployees()\">\n                            <feather-icon icon=\"SearchIcon\" />\n                        </b-button>\n                    </b-input-group-prepend>\n                    <b-form-input v-model=\"searchTerm\" placeholder=\"Search\" type=\"text\" class=\" d-inline-block\" @keyup=\"searchTimeOut()\" />\n                    <!-- <b-input-group-append>\n                <b-button\n                :to=\"{ name: 'create-userLevel'}\"\n                v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                variant=\"outline-primary\">\n                  ADD +\n                </b-button>\n              </b-input-group-append> -->\n                    <!--  -->\n                </b-input-group>\n\n            </div>\n        </b-form-group>\n\n        <b-form-group v-if=\"$ability.can('add/copy', 'user_level')\">\n            <div class=\"d-flex align-items-center\">\n\n                <b-input-group>\n                    <b-input-group-prepend>\n\n                        <b-button v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\" variant=\"primary\" :to=\"{ name: 'create-userLevel'}\" title=\"Add User Level\">\n                            ADD+\n                        </b-button>\n                    </b-input-group-prepend>\n\n                </b-input-group>\n\n            </div>\n        </b-form-group>\n    </div>\n\n    <b-table :items=\"items\" :fields=\"fields\" responsive class=\"mb-0 bg-white\" :busy=\"isBusy\">\n        <template #cell(Options)=\"row\">\n            <div>\n          <div class=\"d-flex align-items-center w-fit-content\">\n            <b-input-group>\n              <b-input-group-prepend>\n                <b-button\n                  size=\"sm\"\n                  v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                  variant=\"outline-primary\"\n                  v-bind:class=\"row.detailsShowing ? 'active' : ''\"\n                  @click=\"row.toggleDetails\"\n                >\n                  <feather-icon\n                    icon=\"ChevronUpIcon\"\n                    v-if=\"row.detailsShowing\"\n                  />\n\n                  <feather-icon icon=\"ChevronDownIcon\" v-else />\n                </b-button>\n              </b-input-group-prepend>\n\n              <b-input-group-append v-if=\"$ability.can('edit', 'user_level')\">\n                <b-button\n                  size=\"sm\"\n                  :to=\"{  name: 'edit-userLevel', params: { id: row.item.id} }\"\n                  v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n                  variant=\"outline-primary text-success\"\n                >\n                  <feather-icon icon=\"EditIcon\" />\n                </b-button>\n              </b-input-group-append>\n              <b-input-group-append\n                v-if=\"$ability.can('delete', 'user_level')\"\n              >\n                <b-button\n                  size=\"sm\"\n                  v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n                  variant=\"outline-primary text-danger\"\n                  @click=\"deleteEmployee(row.item.id)\"\n                >\n                  <feather-icon icon=\"Trash2Icon\" />\n                </b-button>\n              </b-input-group-append>\n            </b-input-group>\n          </div>\n        </div>\n        </template>\n\n        <!-- full detail on click -->\n        <template #row-details=\"row\">\n            <b-card no-body class=\"px-1 py-1\">\n                <b-row>\n                    <b-col cols=\"12\">\n\n                        <b-card-text>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Employees</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.employees\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Resources</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.resource\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Resource Items</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.resource_item\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Accommodation</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.accommodation\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Rent Payments</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.rent_payment\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Bill Payments</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.bill_payment\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Clients</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.client\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Invoice</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.invoice\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Purchases</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.purchase_order\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Vendor</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.vendor\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Document</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.document\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Payment</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.payment\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Supplier</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.supplier\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Supplier Type</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.supplier_type\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Wallets</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.wallets\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>My Wallets</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.my_wallets\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Petty Cash</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.petty_cash\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Petty Cash Approve</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.petty_cash_approve\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Bank Account</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.bank_account\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Owner Bank Accounts</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.my_bank_account\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Expense Accounts</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.expense_accounts\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n                                <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Call Center</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.call_center\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>User Level</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.user_level\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Users</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        <b-list-group-item v-for=\"oneSkill in row.item.user\" :key=\"oneSkill\">\n                                            {{ oneSkill }}\n                                        </b-list-group-item>\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                            <b-row class=\"border-bottom \">\n                                <b-col cols=\"2\">\n                                    <strong>Dashboard</strong>\n                                </b-col>\n                                <b-col cols=\"10\">\n                                    <b-list-group horizontal>\n                                        {{ row.item.dashboard }}\n\n                                    </b-list-group>\n                                </b-col>\n                            </b-row>\n\n                        </b-card-text>\n\n                    </b-col>\n                </b-row>\n\n                <!-- <b-button\n              size=\"sm\"\n              variant=\"outline-secondary\"\n              @click=\"row.toggleDetails\"\n            >\n              Hide Details\n            </b-button> -->\n            </b-card>\n        </template>\n\n        <!-- <template #cell(iqama)=\"data\">\n          <b-avatar :src=\"data.value\" />\n        </template> -->\n\n        <template #cell(client_name)=\"data\">\n\n            {{ data.item.client_name }}\n            </br>\n            {{ data.item.client_name_ar }}\n\n        </template>\n\n        <template #table-busy>\n            <div class=\"text-center text-primary my-2\">\n                <b-spinner class=\"align-middle\" />\n                <strong>Loading...</strong>\n            </div>\n        </template>\n\n        <!-- <template #cell(status)=\"data\">\n          <b-badge :variant=\"status[1][data.value]\">\n            {{ status[0][data.value] }}\n          </b-badge>\n        </template> -->\n    </b-table>\n\n    <div class=\"d-flex justify-content-end\">\n        <b-pagination v-model=\"page\" :total-rows=\"count\" :per-page=\"pageSize\" pills @change=\"handlePageChange\" />\n    </div>\n</div>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport axios from '@axios'\nimport vSelect from 'vue-select'\nimport {\n    BTable,\n    BFormCheckbox,\n    BButton,\n    BCard,\n    BRow,\n    BCol,\n    BAvatar,\n    BBadge,\n    BImg,\n    BTabs,\n    BTab,\n    BCardText,\n    BPagination,\n    BFormGroup,\n    BFormInput,\n    BFormSelect,\n    BDropdown,\n    BDropdownItem,\n    BInputGroup,\n    BInputGroupAppend,\n    BInputGroupPrepend,\n    BFormDatepicker,\n    BFormFile,\n    BFormTextarea,\n    BFormRadio,\n    BForm,\n    BFormCheckboxGroup,\n    BFormRating,\n    BListGroupItem,\n    BListGroup,\n    BSpinner,\n} from 'bootstrap-vue'\n\nimport Ripple from 'vue-ripple-directive'\nimport EnlargeableImage from '@diracleo/vue-enlargeable-image'\n\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\n\nexport default {\n    components: {\n        BCardCode,\n        BTable,\n        BButton,\n        BFormCheckbox,\n        BCard,\n        BRow,\n        BCol,\n        BBadge,\n        BAvatar,\n        BImg,\n        EnlargeableImage,\n        BTabs,\n        BTab,\n        BCardText,\n        BPagination,\n        BFormGroup,\n        BFormInput,\n        BFormSelect,\n        BDropdown,\n        BDropdownItem,\n        BInputGroup,\n        BInputGroupAppend,\n        BInputGroupPrepend,\n        BFormDatepicker,\n        BFormFile,\n        BFormTextarea,\n        BFormRadio,\n        BForm,\n        vSelect,\n        BFormCheckboxGroup,\n        BFormRating,\n        BListGroup,\n        BListGroupItem,\n        BSpinner,\n    },\n    directives: {\n        Ripple,\n    },\n    data() {\n        return {\n            isBusy: true,\n            fields: [{\n                key: 'Options',\n                thClass: 'customHead'\n            }, {\n                key: 'id',\n                label: 'ID',\n                sortable: true,\n                thClass: 'customHead',\n            }, {\n                key: 'name',\n                sortable: true,\n                thClass: 'customHead'\n            }, {\n                key: 'userCount',\n                label: 'User Count',\n                sortable: true,\n                thClass: 'customHead',\n            }],\n            items: [],\n            serviceFields: ['name', 'period', 'rate'],\n            emp_detail: [{\n                age: 40,\n                first_name: 'Dickerson',\n                last_name: 'Macdonald'\n            }, ],\n            /* eslint-disable global-require */\n            status: [{\n                    1: 'Current',\n                    2: 'Professional',\n                    3: 'Rejected',\n                    4: 'Resigned',\n                    5: 'Applied',\n                },\n                {\n                    1: 'light-primary',\n                    2: 'light-success',\n                    3: 'light-danger',\n                    4: 'light-warning',\n                    5: 'light-info',\n                }\n            ],\n\n            empName: '',\n            empId: '',\n            empNationality: '',\n            empReligion: '',\n            empDob: '',\n            empAge: '',\n            empJoiningDate: '',\n            empMobileNumber: '',\n            empProfilePhoto: '',\n            searchTerm: '',\n            pageSize: 10,\n            page: 1,\n            count: 0,\n\n            nationalities: [{\n                    value: 'select_value',\n                    text: 'Select Value'\n                },\n                {\n                    value: 'Bangladesh',\n                    text: 'Bangladesh'\n                },\n                {\n                    value: 'India',\n                    text: 'India'\n                },\n                {\n                    value: 'Pakistan',\n                    text: 'Pakistan'\n                },\n                {\n                    value: 'Nepal',\n                    text: 'Nepal'\n                },\n                {\n                    value: 'Sirilanka',\n                    text: 'Sirilanka'\n                },\n                {\n                    value: 'Philippine',\n                    text: 'Philippine'\n                },\n                {\n                    value: 'Sudan',\n                    text: 'Sudan'\n                },\n            ],\n            religions: [{\n                    value: 'select_value',\n                    text: 'Select Value'\n                },\n                {\n                    value: 'Islam',\n                    text: 'Islam'\n                },\n                {\n                    value: 'Hindu',\n                    text: 'Hindu'\n                },\n                {\n                    value: 'Buddhist',\n                    text: 'Buddhist'\n                },\n                {\n                    value: 'Christian',\n                    text: 'Christian'\n                },\n                {\n                    value: 'Other',\n                    text: 'Other'\n                },\n            ],\n            professions: [],\n            vendors: [],\n            clients: [],\n            statuses: [{\n                    value: 'select_value',\n                    text: 'Select Value'\n                },\n                {\n                    value: 'Deployed',\n                    text: 'Deployed'\n                },\n                {\n                    value: 'Terminated',\n                    text: 'Terminated'\n                },\n            ],\n\n        }\n    },\n\n    mounted() {\n        this.getEmployees()\n        this.getVendors()\n        this.getClients()\n        this.getProfessions()\n        this.getAccommodations()\n    },\n    methods: {\n\n        deleteEmployee(client_code) {\n            this.$swal({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonText: 'Yes, delete it!',\n                customClass: {\n                    confirmButton: 'btn btn-danger',\n                    cancelButton: 'btn btn-outline-danger ml-1',\n                },\n                buttonsStyling: false,\n            }).then(result => {\n                if (result.value) {\n                    axios.get('/deleteClient', {\n                        params: {\n                            client_code,\n                        },\n                    }).then(response => {\n                        if (response.data.hasOwnProperty('success')) {\n                            if (response.data.success === true) {\n                                this.getEmployees()\n                                this.$toast({\n                                    component: ToastificationContent,\n                                    position: 'top-right',\n                                    props: {\n                                        title: 'Client Deleted',\n                                        icon: 'EditIcon',\n                                        variant: 'success',\n                                    },\n                                })\n                                console.log('Client deleted')\n                            } else {\n                                this.$toast({\n                                    component: ToastificationContent,\n                                    position: 'top-right',\n                                    props: {\n                                        title: 'Error',\n                                        icon: 'AlertCircleIcon',\n                                        variant: 'danger',\n                                        text: 'Something went wrong, try again later',\n                                    },\n                                })\n                            }\n                        } else {\n                            this.$toast({\n                                component: ToastificationContent,\n                                position: 'top-right',\n                                props: {\n                                    title: 'Error',\n                                    icon: 'AlertCircleIcon',\n                                    variant: 'danger',\n                                    text: 'Something went wrong, try again later',\n                                },\n                            })\n                        }\n                    }).catch(error => {\n                        console.error(error)\n                    })\n                }\n            })\n        },\n\n        isPdf(url) {\n            if (url.substr(url.lastIndexOf('.') + 1) == 'pdf') {\n                return true\n            }\n\n            return false\n        },\n\n        getEmployees() {\n            this.isBusy = true\n            axios.get('/getRoles', {\n                    params: {\n                        searchTerm: this.searchTerm,\n                        page_no: this.page,\n                    },\n                })\n\n                .then(response => {\n                    console.log('response', response.data.data)\n                    this.items = response.data.data\n                    this.count = response.data.totalRows\n                    this.isBusy = false\n\n                    // TODO\n                }).catch(error => {\n                    console.error(error)\n                })\n        },\n\n        handlePageChange(value) {\n            this.page = value\n            this.isBusy = true\n            this.getEmployees()\n        },\n\n        searchTimeOut() {\n            let timeout = null\n            clearTimeout(timeout)\n            // Make a new timeout set to go off in 800ms\n            timeout = setTimeout(() => {\n                this.page = 1\n                this.getEmployees()\n            }, 800)\n        },\n\n        getVendors() {\n            axios.get('/vendorsDropdown').then(response => {\n                if (response.data.hasOwnProperty('success')) {\n                    if (response.data.success === true) {\n                        console.log(response.data.data)\n                        this.vendors = response.data.data\n\n                        console.log('Vendors Fetched')\n                    } else {\n                        this.$toast({\n                            component: ToastificationContent,\n                            position: 'top-right',\n                            props: {\n                                title: 'Error',\n                                icon: 'AlertCircleIcon',\n                                variant: 'danger',\n                                text: 'Something went wrong, try again later',\n                            },\n                        })\n                    }\n                } else {\n                    this.$toast({\n                        component: ToastificationContent,\n                        position: 'top-right',\n                        props: {\n                            title: 'Error',\n                            icon: 'AlertCircleIcon',\n                            variant: 'danger',\n                            text: 'Something went wrong, try again later',\n                        },\n                    })\n                }\n            }).catch(error => {\n                console.error(error)\n            })\n        },\n        getClients() {\n            axios.get('/clientsDropdown').then(response => {\n                if (response.data.hasOwnProperty('success')) {\n                    if (response.data.success === true) {\n                        console.log(response.data.data)\n                        this.clients = response.data.data\n\n                        console.log('Clients Fetched')\n                    } else {\n                        this.$toast({\n                            component: ToastificationContent,\n                            position: 'top-right',\n                            props: {\n                                title: 'Error',\n                                icon: 'AlertCircleIcon',\n                                variant: 'danger',\n                                text: 'Something went wrong, try again later',\n                            },\n                        })\n                    }\n                } else {\n                    this.$toast({\n                        component: ToastificationContent,\n                        position: 'top-right',\n                        props: {\n                            title: 'Error',\n                            icon: 'AlertCircleIcon',\n                            variant: 'danger',\n                            text: 'Something went wrong, try again later',\n                        },\n                    })\n                }\n            }).catch(error => {\n                console.error(error)\n            })\n        },\n        getAccommodations() {\n            axios.get('/accommodationsDropdown').then(response => {\n                if (response.data.hasOwnProperty('success')) {\n                    if (response.data.success === true) {\n                        console.log(response.data.data)\n                        this.accommodations = response.data.data\n\n                        console.log('accommodations Fetched')\n                    } else {\n                        this.$toast({\n                            component: ToastificationContent,\n                            position: 'top-right',\n                            props: {\n                                title: 'Error',\n                                icon: 'AlertCircleIcon',\n                                variant: 'danger',\n                                text: 'Something went wrong, try again later',\n                            },\n                        })\n                    }\n                } else {\n                    this.$toast({\n                        component: ToastificationContent,\n                        position: 'top-right',\n                        props: {\n                            title: 'Error',\n                            icon: 'AlertCircleIcon',\n                            variant: 'danger',\n                            text: 'Something went wrong, try again later',\n                        },\n                    })\n                }\n            }).catch(error => {\n                console.error(error)\n            })\n        },\n\n        getProfessions() {\n            axios.get('/professionsDropdown').then(response => {\n                if (response.data.hasOwnProperty('success')) {\n                    if (response.data.success === true) {\n                        console.log(response.data.data)\n                        this.professions = response.data.data\n\n                        console.log('professions Fetched')\n                    } else {\n                        this.$toast({\n                            component: ToastificationContent,\n                            position: 'top-right',\n                            props: {\n                                title: 'Error',\n                                icon: 'AlertCircleIcon',\n                                variant: 'danger',\n                                text: 'Something went wrong, try again later',\n                            },\n                        })\n                    }\n                } else {\n                    this.$toast({\n                        component: ToastificationContent,\n                        position: 'top-right',\n                        props: {\n                            title: 'Error',\n                            icon: 'AlertCircleIcon',\n                            variant: 'danger',\n                            text: 'Something went wrong, try again later',\n                        },\n                    })\n                }\n            }).catch(error => {\n                console.error(error)\n            })\n        },\n\n        /* getEmployeeDetail(item){\n            console.log(item.item);\n              axios.get('/getEmployeeDetail', {\n                params: {\n                  emp_id: item.emp_id,\n                },\n              }).then((response) => {\n\n                if(response.data.hasOwnProperty('success'))\n                {\n                  if(response.data.success === true)\n                  {\n\n                  }\n                  else\n                  {\n                    this.$toast({\n                        component: ToastificationContent,\n                        position: 'top-right',\n                        props: {\n                          title: `Error`,\n                          icon: 'AlertCircleIcon',\n                          variant: 'danger',\n                          text: `Something went wrong, try again later`,\n                        },\n                      })\n                  }\n\n                }\n                else\n                {\n                  this.$toast({\n                        component: ToastificationContent,\n                        position: 'top-right',\n                        props: {\n                          title: `Error`,\n                          icon: 'AlertCircleIcon',\n                          variant: 'danger',\n                          text: `Something went wrong, try again later`,\n                        },\n                      })\n                }\n\n              }).catch((error) => {\n                console.error(error);\n              });\n          } */\n\n    },\n}\n</script>\n\n<style lang=\"css\">\n.enlargeable-image .full {\n    z-index: 9999 !important;\n\n    background-color: rgba(0, 0, 0, 0.5) !important;\n}\n\n.customHead {\n\n    background-color: #06608f !important;\n    color: #fff;\n}\n</style>\n"]}]}
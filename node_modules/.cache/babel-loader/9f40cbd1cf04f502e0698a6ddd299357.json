{"remainingRequest":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/babel-loader/lib/index.js!/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/@fake-db/data/apps/todo.js","dependencies":[{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/@fake-db/data/apps/todo.js","mtime":1658909892000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/node_modules/babel-loader/lib/index.js","mtime":1658911406000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/imranrasheed/Desktop/GulflamarERPSystem/frontend/src/@fake-db/data/apps/todo.js"],"names":["mock","data","tasks","id","title","dueDate","description","assignee","fullName","avatar","require","tags","isCompleted","isDeleted","isImportant","onGet","reply","config","params","q","filter","tag","sortBy","sortByParam","sortDesc","queryLowered","toLowerCase","hasFilter","task","filteredData","includes","sortTasks","key","a","b","fieldA","fieldB","Date","comparison","sortedData","sort","reverse","onPost","JSON","parse","length","lastIndex","push","taskData","Number","find","e","Object","assign","onDelete","taskId","url","substring","lastIndexOf","t"],"mappings":"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","sourcesContent":["import mock from '@/@fake-db/mock'\n// import { paginateArray, sortCompare } from '@/@fake-db/utils'\n\n/* eslint-disable global-require */\nconst data = {\n  tasks: [\n    {\n      id: 1,\n      title: 'Entire change break our wife wide it daughter mention member.',\n      dueDate: '2020-11-25',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Jacob Ramirez',\n        avatar: require('@/assets/images/avatars/12.png'),\n      },\n      tags: ['update'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false,\n    },\n    {\n      id: 2,\n      title: 'Citizen stand administration step agency century.',\n      dueDate: '2020-12-14',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Andrew Anderson',\n        avatar: '',\n      },\n      tags: ['team', 'medium'],\n      isCompleted: true,\n      isDeleted: false,\n      isImportant: false,\n    },\n    {\n      id: 3,\n      title: 'Meet Jane and ask for coffee ❤️',\n      dueDate: '2020-11-25',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Benjamin Jacobs',\n        avatar: '',\n      },\n      tags: ['high'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false,\n    },\n    {\n      id: 4,\n      title: 'Answer the support tickets and close completed tickets. ',\n      dueDate: '2020-11-20',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Curtis Schmidt',\n        avatar: require('@/assets/images/avatars/9.png'),\n      },\n      tags: ['medium'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: true,\n    },\n    {\n      id: 5,\n      title: 'Test functionality of apps developed by dev team for enhancements. ',\n      dueDate: '2020-12-06',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Katherine Perkins',\n        avatar: require('@/assets/images/avatars/9.png'),\n      },\n      tags: ['medium'],\n      isCompleted: true,\n      isDeleted: false,\n      isImportant: true,\n    },\n    {\n      id: 6,\n      title: 'Conduct a mini awareness meeting regarding health care. ',\n      dueDate: '2020-12-06',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'David Murphy',\n        avatar: '',\n      },\n      tags: ['high', 'medium'],\n      isCompleted: true,\n      isDeleted: true,\n      isImportant: false,\n    },\n    {\n      id: 7,\n      title: 'Plan new dashboard design with design team for Google app store. ',\n      dueDate: '2020-12-05',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Karina Miller',\n        avatar: require('@/assets/images/avatars/1.png'),\n      },\n      tags: ['medium'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: true,\n    },\n    {\n      id: 8,\n      title: 'Pick up Nats from her school and drop at dance class😁 ',\n      dueDate: '2020-12-08',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Thomas Moses',\n        avatar: require('@/assets/images/avatars/7.png'),\n      },\n      tags: ['low', 'medium'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false,\n    },\n    {\n      id: 9,\n      title: 'Finish documentation and make it live',\n      dueDate: '2020-11-25',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Angel Morrow',\n        avatar: '',\n      },\n      tags: ['high', 'update'],\n      isCompleted: false,\n      isDeleted: true,\n      isImportant: false,\n    },\n    {\n      id: 10,\n      title: 'List out all the SEO resources and send it to new SEO team. ',\n      dueDate: '2020-12-09',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Karen Carrillo',\n        avatar: '',\n      },\n      tags: ['low'],\n      isCompleted: true,\n      isDeleted: false,\n      isImportant: false,\n    },\n    {\n      id: 11,\n      title: 'Refactor Code and fix the bugs and test it on server ',\n      dueDate: '2020-12-01',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Timothy Brewer',\n        avatar: require('@/assets/images/avatars/1.png'),\n      },\n      tags: ['low'],\n      isCompleted: true,\n      isDeleted: false,\n      isImportant: true,\n    },\n    {\n      id: 12,\n      title: 'Reminder to mail clients for holidays',\n      dueDate: '2020-12-09',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Brian Barry',\n        avatar: '',\n      },\n      tags: ['team'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false,\n    },\n    {\n      id: 13,\n      title: \"Submit quotation for Abid's ecommerce website and admin project\",\n      dueDate: '2020-12-01',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Joshua Golden',\n        avatar: require('@/assets/images/avatars/5.png'),\n      },\n      tags: ['team'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false,\n    },\n    {\n      id: 14,\n      title: 'Send PPT with real-time reports',\n      dueDate: '2020-11-29',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Paula Hammond',\n        avatar: require('@/assets/images/avatars/5.png'),\n      },\n      tags: ['medium'],\n      isCompleted: true,\n      isDeleted: false,\n      isImportant: true,\n    },\n    {\n      id: 15,\n      title: 'Skype Tommy for project status & report',\n      dueDate: '2020-11-29',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Tyler Garcia',\n        avatar: '',\n      },\n      tags: ['medium'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false,\n    },\n    {\n      id: 16,\n      title: 'Hire 5 new Fresher or Experienced, frontend and backend developers ',\n      dueDate: '2020-12-12',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Darlene Shields',\n        avatar: require('@/assets/images/avatars/1.png'),\n      },\n      tags: ['low'],\n      isCompleted: true,\n      isDeleted: false,\n      isImportant: false,\n    },\n    {\n      id: 17,\n      title: 'Plan a party for development team 🎁',\n      dueDate: '2020-12-04',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Destiny Michael',\n        avatar: '',\n      },\n      tags: ['medium', 'low'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false,\n    },\n    {\n      id: 18,\n      title: 'Fix Responsiveness for new structure 💻',\n      dueDate: '2020-11-18',\n      description:\n        '<p>Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.</p>',\n      assignee: {\n        fullName: 'Danielle Anderson',\n        avatar: require('@/assets/images/avatars/12.png'),\n      },\n      tags: ['low'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: true,\n    },\n  ],\n}\n/* eslint-enable */\n\n// ------------------------------------------------\n// GET: Return Tasks\n// ------------------------------------------------\nmock.onGet('/apps/todo/tasks').reply(config => {\n  // eslint-disable-next-line object-curly-newline\n  const { q = '', filter, tag, sortBy: sortByParam = 'latest' } = config.params\n  /* eslint-enable */\n\n  // ------------------------------------------------\n  // Get Sort by and Sort Direction\n  // ------------------------------------------------\n  let sortDesc = true\n\n  const sortBy = (() => {\n    if (sortByParam === 'title-asc') {\n      sortDesc = false\n      return 'title'\n    }\n    if (sortByParam === 'title-desc') return 'title'\n    if (sortByParam === 'assignee') {\n      sortDesc = false\n      return 'assignee'\n    }\n    if (sortByParam === 'due-date') {\n      sortDesc = false\n      return 'dueDate'\n    }\n    return 'id'\n  })()\n\n  // ------------------------------------------------\n  // Filtering\n  // ------------------------------------------------\n  const queryLowered = q.toLowerCase()\n\n  const hasFilter = task => {\n    if (filter === 'important') return task.isImportant && !task.isDeleted\n    if (filter === 'completed') return task.isCompleted && !task.isDeleted\n    if (filter === 'deleted') return task.isDeleted\n    return !task.isDeleted\n  }\n  /* eslint-disable no-confusing-arrow, implicit-arrow-linebreak, arrow-body-style */\n  const filteredData = data.tasks.filter(task => {\n    return task.title.toLowerCase().includes(queryLowered) && hasFilter(task) && (tag ? task.tags.includes(tag) : true)\n  })\n  /* eslint-enable  */\n\n  // ------------------------------------------------\n  // Perform sorting\n  // ------------------------------------------------\n  const sortTasks = key => (a, b) => {\n    let fieldA\n    let fieldB\n\n    // If sorting is by dueDate => Convert data to date\n    if (key === 'dueDate') {\n      fieldA = new Date(a[key])\n      fieldB = new Date(b[key])\n      // eslint-disable-next-line brace-style\n    }\n\n    // If sorting is by assignee => Use `fullName` of assignee\n    else if (key === 'assignee') {\n      fieldA = a.assignee ? a.assignee.fullName : null\n      fieldB = b.assignee ? b.assignee.fullName : null\n    } else {\n      fieldA = a[key]\n      fieldB = b[key]\n    }\n\n    let comparison = 0\n\n    if (fieldA === fieldB) {\n      comparison = 0\n    } else if (fieldA === null) {\n      comparison = 1\n    } else if (fieldB === null) {\n      comparison = -1\n    } else if (fieldA > fieldB) {\n      comparison = 1\n    } else if (fieldA < fieldB) {\n      comparison = -1\n    }\n\n    return comparison\n  }\n\n  // Sort Data\n  const sortedData = filteredData.sort(sortTasks(sortBy))\n  if (sortDesc) sortedData.reverse()\n\n  return [200, sortedData]\n})\n\n// ------------------------------------------------\n// POST: Add new task\n// ------------------------------------------------\nmock.onPost('/apps/todo/tasks').reply(config => {\n  // Get event from post data\n  const { task } = JSON.parse(config.data)\n\n  const { length } = data.tasks\n  let lastIndex = 0\n  if (length) {\n    lastIndex = data.tasks[length - 1].id\n  }\n  task.id = lastIndex + 1\n\n  data.tasks.push(task)\n\n  return [201, { task }]\n})\n\n// ------------------------------------------------\n// POST: Update Task\n// ------------------------------------------------\nmock.onPost(/\\/apps\\/todo\\/tasks\\/\\d+/).reply(config => {\n  const { task: taskData } = JSON.parse(config.data)\n\n  // Convert Id to number\n  taskData.id = Number(taskData.id)\n\n  const task = data.tasks.find(e => e.id === Number(taskData.id))\n  Object.assign(task, taskData)\n\n  return [200, { task }]\n})\n\n// ------------------------------------------------\n// DELETE: Remove Task\n// ------------------------------------------------\nmock.onDelete(/\\/apps\\/todo\\/tasks\\/\\d+/).reply(config => {\n  // Get task id from URL\n  let taskId = config.url.substring(config.url.lastIndexOf('/') + 1)\n\n  // Convert Id to number\n  taskId = Number(taskId)\n\n  const task = data.tasks.find(t => t.id === taskId)\n  Object.assign(task, { isDeleted: true })\n  return [200]\n})\n"]}]}
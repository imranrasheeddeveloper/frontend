{"remainingRequest":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\dashboard\\ecommerce\\ChartjsBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\dashboard\\ecommerce\\ChartjsBarChart.vue","mtime":1658909893000},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1658911406916},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1658911406756},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1658911433727}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgQkNhcmQsIEJDYXJkSGVhZGVyLCBCQ2FyZEJvZHksIEJDYXJkVGl0bGUgfSBmcm9tICdib290c3RyYXAtdnVlJzsKaW1wb3J0IGZsYXRQaWNrciBmcm9tICd2dWUtZmxhdHBpY2tyLWNvbXBvbmVudCc7CmltcG9ydCBheGlvcyBmcm9tICdAYXhpb3MnOwppbXBvcnQgRGF0ZXBpY2tlciBmcm9tICd2dWVqcy1kYXRlcGlja2VyJzsKaW1wb3J0IHsgJHRoZW1lQ29sb3JzIH0gZnJvbSAnQHRoZW1lQ29uZmlnJzsKaW1wb3J0IGNoYXJ0anNEYXRhIGZyb20gJy4vY2hhcnRqc0RhdGEnOwppbXBvcnQgQ2hhcnRqc0NvbXBvbmVudEJhckNoYXJ0IGZyb20gJy4vY2hhcnRzLWNvbXBvbmVudHMvQ2hhcnRqc0NvbXBvbmVudEJhckNoYXJ0LnZ1ZSc7IC8vIGNvbG9ycwoKdmFyIGNoYXJ0Q29sb3JzID0gewogIHByaW1hcnlDb2xvclNoYWRlOiAnIzgzNkFGOScsCiAgeWVsbG93Q29sb3I6ICcjZmZlODAwJywKICBzdWNjZXNzQ29sb3JTaGFkZTogJyMyOGRhYzYnLAogIHdhcm5pbmdDb2xvclNoYWRlOiAnI2ZmZTgwMicsCiAgd2FybmluZ0xpZ2h0Q29sb3I6ICcjRkRBQzM0JywKICBpbmZvQ29sb3JTaGFkZTogJyMyOTlBRkYnLAogIGdyZXlDb2xvcjogJyM0RjVENzAnLAogIGJsdWVDb2xvcjogJyMyYzlhZmYnLAogIGJsdWVMaWdodENvbG9yOiAnIzg0RDBGRicsCiAgZ3JleUxpZ2h0Q29sb3I6ICcjRURGMUY0JywKICB0b29sdGlwU2hhZG93OiAncmdiYSgwLCAwLCAwLCAwLjI1KScsCiAgbGluZUNoYXJ0UHJpbWFyeTogJyM2NjZlZTgnLAogIGxpbmVDaGFydERhbmdlcjogJyNmZjQ5NjEnLAogIGxhYmVsQ29sb3I6ICcjNmU2YjdiJywKICBncmlkX2xpbmVfY29sb3I6ICdyZ2JhKDIwMCwgMjAwLCAyMDAsIDAuMiknCn07CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCQ2FyZDogQkNhcmQsCiAgICBCQ2FyZEhlYWRlcjogQkNhcmRIZWFkZXIsCiAgICBCQ2FyZEJvZHk6IEJDYXJkQm9keSwKICAgIEJDYXJkVGl0bGU6IEJDYXJkVGl0bGUsCiAgICBmbGF0UGlja3I6IGZsYXRQaWNrciwKICAgIENoYXJ0anNDb21wb25lbnRCYXJDaGFydDogQ2hhcnRqc0NvbXBvbmVudEJhckNoYXJ0LAogICAgRGF0ZXBpY2tlcjogRGF0ZXBpY2tlcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1heEdyYXBoOiA1MDAwLAogICAgICByZWZyZXNoS2V5OiAwLAogICAgICBjaGFydGpzRGF0YTogY2hhcnRqc0RhdGEsCiAgICAgIHNlbGVjdGVkWWVhcjogJzIwMjEtMDEtMDEnLAogICAgICByYW5nZVBpY2tlcjogWycyMDE5LTA1LTAxJywgJzIwMTktMDUtMTAnXSwKICAgICAgZGVmYXVsdERhdGU6ICcyMDIxLTAxLTAxJywKICAgICAgRGF0ZVBpY2tlckZvcm1hdDogJ3l5eXknLAogICAgICBsYXRlc3RCYXJDaGFydDogewogICAgICAgIGRhdGE6IHsKICAgICAgICAgIGxhYmVsczogWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWF5JywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsICdPY3QnLCAnTm92JywgJ0RlYyddLAogICAgICAgICAgZGF0YXNldHM6IFt7CiAgICAgICAgICAgIGRhdGE6IFsyNzUsIDkwLCAxOTAsIDIwNSwgMTI1LCA4NSwgNTUsIDg3LCAxMjcsIDE1MCwgMjMwLCAyODAsIDE5MF0sCiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogY2hhcnRDb2xvcnMuc3VjY2Vzc0NvbG9yU2hhZGUsCiAgICAgICAgICAgIGJvcmRlckNvbG9yOiAndHJhbnNwYXJlbnQnCiAgICAgICAgICB9XQogICAgICAgIH0sCiAgICAgICAgb3B0aW9uczogewogICAgICAgICAgZWxlbWVudHM6IHsKICAgICAgICAgICAgcmVjdGFuZ2xlOiB7CiAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsCiAgICAgICAgICAgICAgYm9yZGVyU2tpcHBlZDogJ2JvdHRvbScKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsCiAgICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSwKICAgICAgICAgIHJlc3BvbnNpdmVBbmltYXRpb25EdXJhdGlvbjogNTAwLAogICAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgdG9vbHRpcHM6IHsKICAgICAgICAgICAgLy8gVXBkYXRlZCBkZWZhdWx0IHRvb2x0aXAgVUkKICAgICAgICAgICAgc2hhZG93T2Zmc2V0WDogMSwKICAgICAgICAgICAgc2hhZG93T2Zmc2V0WTogMSwKICAgICAgICAgICAgc2hhZG93Qmx1cjogOCwKICAgICAgICAgICAgc2hhZG93Q29sb3I6IGNoYXJ0Q29sb3JzLnRvb2x0aXBTaGFkb3csCiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJHRoZW1lQ29sb3JzLmxpZ2h0LAogICAgICAgICAgICB0aXRsZUZvbnRDb2xvcjogJHRoZW1lQ29sb3JzLmRhcmssCiAgICAgICAgICAgIGJvZHlGb250Q29sb3I6ICR0aGVtZUNvbG9ycy5kYXJrCiAgICAgICAgICB9LAogICAgICAgICAgc2NhbGVzOiB7CiAgICAgICAgICAgIHhBeGVzOiBbewogICAgICAgICAgICAgIGRpc3BsYXk6IHRydWUsCiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLAogICAgICAgICAgICAgICAgY29sb3I6IGNoYXJ0Q29sb3JzLmdyaWRfbGluZV9jb2xvciwKICAgICAgICAgICAgICAgIHplcm9MaW5lQ29sb3I6IGNoYXJ0Q29sb3JzLmdyaWRfbGluZV9jb2xvcgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgc2NhbGVMYWJlbDogewogICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgICAgICBmb250Q29sb3I6IGNoYXJ0Q29sb3JzLmxhYmVsQ29sb3IKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH1dLAogICAgICAgICAgICB5QXhlczogW3sKICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLAogICAgICAgICAgICAgIGdyaWRMaW5lczogewogICAgICAgICAgICAgICAgY29sb3I6IGNoYXJ0Q29sb3JzLmdyaWRfbGluZV9jb2xvciwKICAgICAgICAgICAgICAgIHplcm9MaW5lQ29sb3I6IGNoYXJ0Q29sb3JzLmdyaWRfbGluZV9jb2xvcgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgdGlja3M6IHsKICAgICAgICAgICAgICAgIHN0ZXBTaXplOiAxMDAsCiAgICAgICAgICAgICAgICBtaW46IDAsCiAgICAgICAgICAgICAgICBtYXg6IHRoaXMubWF4R3JhcGgsCiAgICAgICAgICAgICAgICBmb250Q29sb3I6IGNoYXJ0Q29sb3JzLmxhYmVsQ29sb3IKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH1dCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0UmV2ZW51ZSgpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UmV2ZW51ZTogZnVuY3Rpb24gZ2V0UmV2ZW51ZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBkID0gbmV3IERhdGUoKTsKICAgICAgdmFyIHllYXIgPSBkLmdldEZ1bGxZZWFyKCk7CiAgICAgIGF4aW9zLmdldCgnL2dldE1vbnRobHlSZXZlbnVlcycsIHsKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIHllYXI6IHllYXIKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMubGF0ZXN0QmFyQ2hhcnQuZGF0YSA9IHsKICAgICAgICAgIGxhYmVsczogWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWF5JywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsICdPY3QnLCAnTm92JywgJ0RlYyddLAogICAgICAgICAgZGF0YXNldHM6IFt7CiAgICAgICAgICAgIGRhdGE6IHJlc3BvbnNlLmRhdGEuZGF0YSwKICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBjaGFydENvbG9ycy5zdWNjZXNzQ29sb3JTaGFkZSwKICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICd0cmFuc3BhcmVudCcKICAgICAgICAgIH1dCiAgICAgICAgfTsKICAgICAgICBfdGhpcy5tYXhHcmFwaCA9IHJlc3BvbnNlLmRhdGEubWF4VmFsdWUgKyAxMDAwOwogICAgICAgIF90aGlzLnJlZnJlc2hLZXkgKz0gMTsgLy8gVE9ETwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgcmVmcmVzaFJldmVudWU6IGZ1bmN0aW9uIHJlZnJlc2hSZXZlbnVlKHZhbGUpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBjb25zb2xlLmxvZyh2YWxlLmdldEZ1bGxZZWFyKCkpOwogICAgICBheGlvcy5nZXQoJy9nZXRNb250aGx5UmV2ZW51ZXMnLCB7CiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICB5ZWFyOiB2YWxlLmdldEZ1bGxZZWFyKCkKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMyLmxhdGVzdEJhckNoYXJ0LmRhdGEgPSB7CiAgICAgICAgICBsYWJlbHM6IFsnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01heScsICdKdW4nLCAnSnVsJywgJ0F1ZycsICdTZXAnLCAnT2N0JywgJ05vdicsICdEZWMnXSwKICAgICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICBkYXRhOiByZXNwb25zZS5kYXRhLmRhdGEsCiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogY2hhcnRDb2xvcnMuc3VjY2Vzc0NvbG9yU2hhZGUsCiAgICAgICAgICAgIGJvcmRlckNvbG9yOiAndHJhbnNwYXJlbnQnCiAgICAgICAgICB9XQogICAgICAgIH07CiAgICAgICAgX3RoaXMyLm1heEdyYXBoID0gcmVzcG9uc2UuZGF0YS5tYXhWYWx1ZSArIDEwMDA7CiAgICAgICAgX3RoaXMyLnJlZnJlc2hLZXkgKz0gMTsgLy8gVE9ETwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ChartjsBarChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-card no-body>\n    <b-card-header>\n      <b-card-title>Revenue Report</b-card-title>\n      <!-- datepicker -->\n      <div class=\"d-flex align-items-center\">\n        <feather-icon\n          icon=\"CalendarIcon\"\n          size=\"16\"\n        />\n        <!-- <flat-pickr\n          v-model=\"rangePicker\"\n          :config=\"{ dateFormat: 'Y',}\"\n          class=\"form-control flat-picker bg-transparent border-0 shadow-none\"\n          placeholder=\"YYYY-MM-DD\"\n        /> -->\n\n        <datepicker\n          id=\"input-id\"\n          v-model=\"selectedYear\"\n          :format=\"DatePickerFormat\"\n          minimum-view=\"year\"\n          name=\"datepicker\"\n          input-class=\"form-control flat-picker bg-transparent border-0 shadow-none\"\n          @selected=\"refreshRevenue\"\n        />\n\n      </div>\n      <!-- datepicker -->\n    </b-card-header>\n\n    <!-- chart -->\n    <b-card-body>\n      <chartjs-component-bar-chart\n        :key=\"refreshKey\"\n        :height=\"230\"\n        :data=\"latestBarChart.data\"\n\n        :options=\"latestBarChart.options\"\n      />\n    </b-card-body>\n  </b-card>\n</template>\n\n<script>\nimport {\n  BCard, BCardHeader, BCardBody, BCardTitle,\n} from 'bootstrap-vue'\nimport flatPickr from 'vue-flatpickr-component'\n\nimport axios from '@axios'\nimport Datepicker from 'vuejs-datepicker'\nimport { $themeColors } from '@themeConfig'\nimport chartjsData from './chartjsData'\nimport ChartjsComponentBarChart from './charts-components/ChartjsComponentBarChart.vue'\n\n// colors\nconst chartColors = {\n  primaryColorShade: '#836AF9',\n  yellowColor: '#ffe800',\n  successColorShade: '#28dac6',\n  warningColorShade: '#ffe802',\n  warningLightColor: '#FDAC34',\n  infoColorShade: '#299AFF',\n  greyColor: '#4F5D70',\n  blueColor: '#2c9aff',\n  blueLightColor: '#84D0FF',\n  greyLightColor: '#EDF1F4',\n  tooltipShadow: 'rgba(0, 0, 0, 0.25)',\n  lineChartPrimary: '#666ee8',\n  lineChartDanger: '#ff4961',\n  labelColor: '#6e6b7b',\n  grid_line_color: 'rgba(200, 200, 200, 0.2)',\n}\n\nexport default {\n  components: {\n    BCard,\n    BCardHeader,\n    BCardBody,\n    BCardTitle,\n    flatPickr,\n    ChartjsComponentBarChart,\n    Datepicker,\n  },\n  data() {\n    return {\n      maxGraph: 5000,\n      refreshKey: 0,\n      chartjsData,\n      selectedYear: '2021-01-01',\n      rangePicker: ['2019-05-01', '2019-05-10'],\n      defaultDate: '2021-01-01',\n      DatePickerFormat: 'yyyy',\n      latestBarChart: {\n        data: {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n          datasets: [\n            {\n              data: [275, 90, 190, 205, 125, 85, 55, 87, 127, 150, 230, 280, 190],\n              backgroundColor: chartColors.successColorShade,\n              borderColor: 'transparent',\n            },\n          ],\n        },\n        options: {\n          elements: {\n            rectangle: {\n              borderWidth: 2,\n              borderSkipped: 'bottom',\n            },\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n          responsiveAnimationDuration: 500,\n          legend: {\n            display: false,\n          },\n          tooltips: {\n            // Updated default tooltip UI\n            shadowOffsetX: 1,\n            shadowOffsetY: 1,\n            shadowBlur: 8,\n            shadowColor: chartColors.tooltipShadow,\n            backgroundColor: $themeColors.light,\n            titleFontColor: $themeColors.dark,\n            bodyFontColor: $themeColors.dark,\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                gridLines: {\n                  display: true,\n                  color: chartColors.grid_line_color,\n                  zeroLineColor: chartColors.grid_line_color,\n                },\n                scaleLabel: {\n                  display: false,\n                },\n                ticks: {\n                  fontColor: chartColors.labelColor,\n                },\n              },\n            ],\n            yAxes: [\n              {\n                display: true,\n                gridLines: {\n                  color: chartColors.grid_line_color,\n                  zeroLineColor: chartColors.grid_line_color,\n                },\n                ticks: {\n                  stepSize: 100,\n                  min: 0,\n                  max: this.maxGraph,\n                  fontColor: chartColors.labelColor,\n                },\n              },\n            ],\n          },\n        },\n      },\n    }\n  },\n\n  mounted() {\n    this.getRevenue()\n  },\n\n  methods: {\n\n    getRevenue() {\n      const d = new Date()\n      const year = d.getFullYear()\n\n      axios.get('/getMonthlyRevenues', {\n        params: {\n          year,\n\n        },\n      })\n\n        .then(response => {\n          this.latestBarChart.data = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n              {\n                data: response.data.data,\n                backgroundColor: chartColors.successColorShade,\n                borderColor: 'transparent',\n              },\n            ],\n          }\n          this.maxGraph = response.data.maxValue + 1000\n          this.refreshKey += 1\n\n          // TODO\n        }).catch(error => {\n          console.error(error)\n        })\n    },\n\n    refreshRevenue(vale) {\n      console.log(vale.getFullYear())\n      axios.get('/getMonthlyRevenues', {\n        params: {\n          year: vale.getFullYear(),\n\n        },\n      })\n\n        .then(response => {\n          this.latestBarChart.data = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n              {\n                data: response.data.data,\n                backgroundColor: chartColors.successColorShade,\n                borderColor: 'transparent',\n              },\n            ],\n          }\n          this.maxGraph = response.data.maxValue + 1000\n          this.refreshKey += 1\n\n          // TODO\n        }).catch(error => {\n          console.error(error)\n        })\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-flatpicker.scss';\n</style>\n\n<style lang=\"css\" >\n\n.vdp-datepicker__calendar { right: 0; }\n\n</style>\n"],"sourceRoot":"src/views/dashboard/ecommerce"}]}
{"remainingRequest":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\apps\\user\\users-list\\UserListAddNew.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\src\\views\\apps\\user\\users-list\\UserListAddNew.vue","mtime":1658909893000},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1658911406916},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1658911406756},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658911406787},{"path":"C:\\xampp\\htdocs\\GulflamarERPSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1658911433727}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgQlNpZGViYXIsIEJGb3JtLCBCRm9ybUdyb3VwLCBCRm9ybUlucHV0LCBCRm9ybUludmFsaWRGZWVkYmFjaywgQkJ1dHRvbiB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnOwppbXBvcnQgeyBWYWxpZGF0aW9uUHJvdmlkZXIsIFZhbGlkYXRpb25PYnNlcnZlciB9IGZyb20gJ3ZlZS12YWxpZGF0ZSc7CmltcG9ydCB7IHJlZiB9IGZyb20gJ0B2dWUvY29tcG9zaXRpb24tYXBpJzsKaW1wb3J0IHsgcmVxdWlyZWQsIGFscGhhTnVtLCBlbWFpbCB9IGZyb20gJ0B2YWxpZGF0aW9ucyc7CmltcG9ydCBmb3JtVmFsaWRhdGlvbiBmcm9tICdAY29yZS9jb21wLWZ1bmN0aW9ucy9mb3Jtcy9mb3JtLXZhbGlkYXRpb24nOwppbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJzsKaW1wb3J0IHZTZWxlY3QgZnJvbSAndnVlLXNlbGVjdCc7CmltcG9ydCBjb3VudHJpZXMgZnJvbSAnQC9AZmFrZS1kYi9kYXRhL290aGVyL2NvdW50cmllcyc7CmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJTaWRlYmFyOiBCU2lkZWJhciwKICAgIEJGb3JtOiBCRm9ybSwKICAgIEJGb3JtR3JvdXA6IEJGb3JtR3JvdXAsCiAgICBCRm9ybUlucHV0OiBCRm9ybUlucHV0LAogICAgQkZvcm1JbnZhbGlkRmVlZGJhY2s6IEJGb3JtSW52YWxpZEZlZWRiYWNrLAogICAgQkJ1dHRvbjogQkJ1dHRvbiwKICAgIHZTZWxlY3Q6IHZTZWxlY3QsCiAgICAvLyBGb3JtIFZhbGlkYXRpb24KICAgIFZhbGlkYXRpb25Qcm92aWRlcjogVmFsaWRhdGlvblByb3ZpZGVyLAogICAgVmFsaWRhdGlvbk9ic2VydmVyOiBWYWxpZGF0aW9uT2JzZXJ2ZXIKICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIFJpcHBsZTogUmlwcGxlCiAgfSwKICBtb2RlbDogewogICAgcHJvcDogJ2lzQWRkTmV3VXNlclNpZGViYXJBY3RpdmUnLAogICAgZXZlbnQ6ICd1cGRhdGU6aXMtYWRkLW5ldy11c2VyLXNpZGViYXItYWN0aXZlJwogIH0sCiAgcHJvcHM6IHsKICAgIGlzQWRkTmV3VXNlclNpZGViYXJBY3RpdmU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICByb2xlT3B0aW9uczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBwbGFuT3B0aW9uczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByZXF1aXJlZDogcmVxdWlyZWQsCiAgICAgIGFscGhhTnVtOiBhbHBoYU51bSwKICAgICAgZW1haWw6IGVtYWlsLAogICAgICBjb3VudHJpZXM6IGNvdW50cmllcwogICAgfTsKICB9LAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcywgX3JlZikgewogICAgdmFyIGVtaXQgPSBfcmVmLmVtaXQ7CiAgICB2YXIgYmxhbmtVc2VyRGF0YSA9IHsKICAgICAgZnVsbE5hbWU6ICcnLAogICAgICB1c2VybmFtZTogJycsCiAgICAgIGVtYWlsOiAnJywKICAgICAgcm9sZTogbnVsbCwKICAgICAgY3VycmVudFBsYW46IG51bGwsCiAgICAgIGNvbXBhbnk6ICcnLAogICAgICBjb3VudHJ5OiAnJywKICAgICAgY29udGFjdDogJycKICAgIH07CiAgICB2YXIgdXNlckRhdGEgPSByZWYoSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShibGFua1VzZXJEYXRhKSkpOwoKICAgIHZhciByZXNldHVzZXJEYXRhID0gZnVuY3Rpb24gcmVzZXR1c2VyRGF0YSgpIHsKICAgICAgdXNlckRhdGEudmFsdWUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGJsYW5rVXNlckRhdGEpKTsKICAgIH07CgogICAgdmFyIG9uU3VibWl0ID0gZnVuY3Rpb24gb25TdWJtaXQoKSB7CiAgICAgIHN0b3JlLmRpc3BhdGNoKCdhcHAtdXNlci9hZGRVc2VyJywgdXNlckRhdGEudmFsdWUpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIGVtaXQoJ3JlZmV0Y2gtZGF0YScpOwogICAgICAgIGVtaXQoJ3VwZGF0ZTppcy1hZGQtbmV3LXVzZXItc2lkZWJhci1hY3RpdmUnLCBmYWxzZSk7CiAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgX2Zvcm1WYWxpZGF0aW9uID0gZm9ybVZhbGlkYXRpb24ocmVzZXR1c2VyRGF0YSksCiAgICAgICAgcmVmRm9ybU9ic2VydmVyID0gX2Zvcm1WYWxpZGF0aW9uLnJlZkZvcm1PYnNlcnZlciwKICAgICAgICBnZXRWYWxpZGF0aW9uU3RhdGUgPSBfZm9ybVZhbGlkYXRpb24uZ2V0VmFsaWRhdGlvblN0YXRlLAogICAgICAgIHJlc2V0Rm9ybSA9IF9mb3JtVmFsaWRhdGlvbi5yZXNldEZvcm07CgogICAgcmV0dXJuIHsKICAgICAgdXNlckRhdGE6IHVzZXJEYXRhLAogICAgICBvblN1Ym1pdDogb25TdWJtaXQsCiAgICAgIHJlZkZvcm1PYnNlcnZlcjogcmVmRm9ybU9ic2VydmVyLAogICAgICBnZXRWYWxpZGF0aW9uU3RhdGU6IGdldFZhbGlkYXRpb25TdGF0ZSwKICAgICAgcmVzZXRGb3JtOiByZXNldEZvcm0KICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["UserListAddNew.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-sidebar\n    id=\"add-new-user-sidebar\"\n    :visible=\"isAddNewUserSidebarActive\"\n    bg-variant=\"white\"\n    sidebar-class=\"sidebar-lg\"\n    shadow\n    backdrop\n    no-header\n    right\n    @hidden=\"resetForm\"\n    @change=\"(val) => $emit('update:is-add-new-user-sidebar-active', val)\"\n  >\n    <template #default=\"{ hide }\">\n      <!-- Header -->\n      <div class=\"d-flex justify-content-between align-items-center content-sidebar-header px-2 py-1\">\n        <h5 class=\"mb-0\">\n          Add New User\n        </h5>\n\n        <feather-icon\n          class=\"ml-1 cursor-pointer\"\n          icon=\"XIcon\"\n          size=\"16\"\n          @click=\"hide\"\n        />\n\n      </div>\n\n      <!-- BODY -->\n      <validation-observer\n        #default=\"{ handleSubmit }\"\n        ref=\"refFormObserver\"\n      >\n        <!-- Form -->\n        <b-form\n          class=\"p-2\"\n          @submit.prevent=\"handleSubmit(onSubmit)\"\n          @reset.prevent=\"resetForm\"\n        >\n\n          <!-- Full Name -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Full Name\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Full Name\"\n              label-for=\"full-name\"\n            >\n              <b-form-input\n                id=\"full-name\"\n                v-model=\"userData.fullName\"\n                autofocus\n                :state=\"getValidationState(validationContext)\"\n                trim\n                placeholder=\"John Doe\"\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Username -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Username\"\n            rules=\"required|alpha-num\"\n          >\n            <b-form-group\n              label=\"Username\"\n              label-for=\"username\"\n            >\n              <b-form-input\n                id=\"username\"\n                v-model=\"userData.username\"\n                :state=\"getValidationState(validationContext)\"\n                trim\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Email -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Email\"\n            rules=\"required|email\"\n          >\n            <b-form-group\n              label=\"Email\"\n              label-for=\"email\"\n            >\n              <b-form-input\n                id=\"email\"\n                v-model=\"userData.email\"\n                :state=\"getValidationState(validationContext)\"\n                trim\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Company -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Contact\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Contact\"\n              label-for=\"contact\"\n            >\n              <b-form-input\n                id=\"contact\"\n                v-model=\"userData.contact\"\n                :state=\"getValidationState(validationContext)\"\n                trim\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Company -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Company\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Company\"\n              label-for=\"company\"\n            >\n              <b-form-input\n                id=\"company\"\n                v-model=\"userData.company\"\n                :state=\"getValidationState(validationContext)\"\n                trim\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Country -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Country\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Country\"\n              label-for=\"country\"\n              :state=\"getValidationState(validationContext)\"\n            >\n              <v-select\n                v-model=\"userData.country\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"countries\"\n                :clearable=\"false\"\n                input-id=\"country\"\n              />\n              <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- User Role -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"User Role\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"User Role\"\n              label-for=\"user-role\"\n              :state=\"getValidationState(validationContext)\"\n            >\n              <v-select\n                v-model=\"userData.role\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"roleOptions\"\n                :reduce=\"val => val.value\"\n                :clearable=\"false\"\n                input-id=\"user-role\"\n              />\n              <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Plan -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Plan\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Plan\"\n              label-for=\"plan\"\n              :state=\"getValidationState(validationContext)\"\n            >\n              <v-select\n                v-model=\"userData.currentPlan\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"planOptions\"\n                :reduce=\"val => val.value\"\n                :clearable=\"false\"\n                input-id=\"plan\"\n              />\n              <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Form Actions -->\n          <div class=\"d-flex mt-2\">\n            <b-button\n              v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n              variant=\"primary\"\n              class=\"mr-2\"\n              type=\"submit\"\n            >\n              Add\n            </b-button>\n            <b-button\n              v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\n              type=\"button\"\n              variant=\"outline-secondary\"\n              @click=\"hide\"\n            >\n              Cancel\n            </b-button>\n          </div>\n\n        </b-form>\n      </validation-observer>\n    </template>\n  </b-sidebar>\n</template>\n\n<script>\nimport {\n  BSidebar, BForm, BFormGroup, BFormInput, BFormInvalidFeedback, BButton,\n} from 'bootstrap-vue'\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport { ref } from '@vue/composition-api'\nimport { required, alphaNum, email } from '@validations'\nimport formValidation from '@core/comp-functions/forms/form-validation'\nimport Ripple from 'vue-ripple-directive'\nimport vSelect from 'vue-select'\nimport countries from '@/@fake-db/data/other/countries'\nimport store from '@/store'\n\nexport default {\n  components: {\n    BSidebar,\n    BForm,\n    BFormGroup,\n    BFormInput,\n    BFormInvalidFeedback,\n    BButton,\n    vSelect,\n\n    // Form Validation\n    ValidationProvider,\n    ValidationObserver,\n  },\n  directives: {\n    Ripple,\n  },\n  model: {\n    prop: 'isAddNewUserSidebarActive',\n    event: 'update:is-add-new-user-sidebar-active',\n  },\n  props: {\n    isAddNewUserSidebarActive: {\n      type: Boolean,\n      required: true,\n    },\n    roleOptions: {\n      type: Array,\n      required: true,\n    },\n    planOptions: {\n      type: Array,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      required,\n      alphaNum,\n      email,\n      countries,\n    }\n  },\n  setup(props, { emit }) {\n    const blankUserData = {\n      fullName: '',\n      username: '',\n      email: '',\n      role: null,\n      currentPlan: null,\n      company: '',\n      country: '',\n      contact: '',\n    }\n\n    const userData = ref(JSON.parse(JSON.stringify(blankUserData)))\n    const resetuserData = () => {\n      userData.value = JSON.parse(JSON.stringify(blankUserData))\n    }\n\n    const onSubmit = () => {\n      store.dispatch('app-user/addUser', userData.value)\n        .then(() => {\n          emit('refetch-data')\n          emit('update:is-add-new-user-sidebar-active', false)\n        })\n    }\n\n    const {\n      refFormObserver,\n      getValidationState,\n      resetForm,\n    } = formValidation(resetuserData)\n\n    return {\n      userData,\n      onSubmit,\n\n      refFormObserver,\n      getValidationState,\n      resetForm,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-select.scss';\n\n#add-new-user-sidebar {\n  .vs__dropdown-menu {\n    max-height: 200px !important;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/apps/user/users-list"}]}
{"remainingRequest":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/babel-loader/lib/index.js!/Users/imranrasheed/Desktop/new-splitur/frontend/src/@core/auth/jwt/jwtService.js","dependencies":[{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/src/@core/auth/jwt/jwtService.js","mtime":1660206765524},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/babel-loader/lib/index.js","mtime":1658911406000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2ltcmFucmFzaGVlZC9EZXNrdG9wL25ldy1zcGxpdHVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvaW1yYW5yYXNoZWVkL0Rlc2t0b3AvbmV3LXNwbGl0dXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvaW1yYW5yYXNoZWVkL0Rlc2t0b3AvbmV3LXNwbGl0dXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvaW1yYW5yYXNoZWVkL0Rlc2t0b3AvbmV3LXNwbGl0dXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IHsgaW5pdGlhbEFiaWxpdHkgfSBmcm9tICdAL2xpYnMvYWNsL2NvbmZpZyc7CmltcG9ydCByb3V0ZXIgZnJvbSAnQC9yb3V0ZXInOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgand0RGVmYXVsdENvbmZpZyBmcm9tICcuL2p3dERlZmF1bHRDb25maWcnOwoKdmFyIEp3dFNlcnZpY2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIC8vIFdpbGwgYmUgdXNlZCBieSB0aGlzIHNlcnZpY2UgZm9yIG1ha2luZyBBUEkgY2FsbHMKICAvLyBqd3RDb25maWcgPD0gV2lsbCBiZSB1c2VkIGJ5IHRoaXMgc2VydmljZQogIC8vIEZvciBSZWZyZXNoaW5nIFRva2VuCiAgLy8gRm9yIFJlZnJlc2hpbmcgVG9rZW4KICBmdW5jdGlvbiBKd3RTZXJ2aWNlKGF4aW9zSW5zLCBqd3RPdmVycmlkZUNvbmZpZykgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSnd0U2VydmljZSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJheGlvc0lucyIsIG51bGwpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiand0Q29uZmlnIiwgX29iamVjdFNwcmVhZCh7fSwgand0RGVmYXVsdENvbmZpZykpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiaXNBbHJlYWR5RmV0Y2hpbmdBY2Nlc3NUb2tlbiIsIGZhbHNlKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgInN1YnNjcmliZXJzIiwgW10pOwoKICAgIHRoaXMuYXhpb3NJbnMgPSBheGlvc0luczsKICAgIHRoaXMuand0Q29uZmlnID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0aGlzLmp3dENvbmZpZyksIGp3dE92ZXJyaWRlQ29uZmlnKTsgLy8gUmVxdWVzdCBJbnRlcmNlcHRvcgoKICAgIHRoaXMuYXhpb3NJbnMuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAgICAgLy8gR2V0IHRva2VuIGZyb20gbG9jYWxTdG9yYWdlCiAgICAgIHZhciBhY2Nlc3NUb2tlbiA9IF90aGlzLmdldFRva2VuKCk7IC8vIElmIHRva2VuIGlzIHByZXNlbnQgYWRkIGl0IHRvIHJlcXVlc3QncyBBdXRob3JpemF0aW9uIEhlYWRlcgoKCiAgICAgIGlmIChhY2Nlc3NUb2tlbikgewogICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnbgogICAgICAgIGNvbmZpZy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSAiIi5jb25jYXQoX3RoaXMuand0Q29uZmlnLnRva2VuVHlwZSwgIiAiKS5jb25jYXQoYWNjZXNzVG9rZW4pOyAvLyBjb25maWcuaGVhZGVycy5Db250ZW50LVR5cGUgPSBgbXVsdGlwYXJ0L2Zvcm0tZGF0YWAKICAgICAgfQoKICAgICAgcmV0dXJuIGNvbmZpZzsKICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwogICAgfSk7IC8vIEFkZCByZXF1ZXN0L3Jlc3BvbnNlIGludGVyY2VwdG9yCgogICAgdGhpcy5heGlvc0lucy5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXR1cm4gcmVzcG9uc2U7CiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgLy8gY29uc3QgeyBjb25maWcsIHJlc3BvbnNlOiB7IHN0YXR1cyB9IH0gPSBlcnJvcgogICAgICB2YXIgY29uZmlnID0gZXJyb3IuY29uZmlnLAogICAgICAgICAgcmVzcG9uc2UgPSBlcnJvci5yZXNwb25zZTsKICAgICAgdmFyIG9yaWdpbmFsUmVxdWVzdCA9IGNvbmZpZzsKCiAgICAgIGlmICghX3RoaXMuaXNBbHJlYWR5RmV0Y2hpbmdBY2Nlc3NUb2tlbikgewogICAgICAgIF90aGlzLmlzQWxyZWFkeUZldGNoaW5nQWNjZXNzVG9rZW4gPSB0cnVlOwoKICAgICAgICBfdGhpcy5yZWZyZXNoVG9rZW4oKS50aGVuKGZ1bmN0aW9uIChyKSB7CiAgICAgICAgICBfdGhpcy5pc0FscmVhZHlGZXRjaGluZ0FjY2Vzc1Rva2VuID0gZmFsc2U7IC8vIFVwZGF0ZSBhY2Nlc3NUb2tlbiBpbiBsb2NhbFN0b3JhZ2UKCiAgICAgICAgICBfdGhpcy5zZXRUb2tlbihyLmRhdGEuYWNjZXNzX3Rva2VuKTsKCiAgICAgICAgICBfdGhpcy5zZXRSZWZyZXNoVG9rZW4oci5kYXRhLmFjY2Vzc190b2tlbik7CgogICAgICAgICAgX3RoaXMub25BY2Nlc3NUb2tlbkZldGNoZWQoci5kYXRhLmFjY2Vzc190b2tlbik7CiAgICAgICAgfSk7CiAgICAgIH0gLy8gaWYgKHN0YXR1cyA9PT0gNDAxKSB7CgoKICAgICAgaWYgKHJlc3BvbnNlICYmIHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7CiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oX3RoaXMuand0Q29uZmlnLnN0b3JhZ2VUb2tlbktleU5hbWUpOwogICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKF90aGlzLmp3dENvbmZpZy5zdG9yYWdlUmVmcmVzaFRva2VuS2V5TmFtZSk7IC8vIFJlbW92ZSB1c2VyRGF0YSBmcm9tIGxvY2FsU3RvcmFnZQoKICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlckRhdGEnKTsgLy8gUmVzZXQgYWJpbGl0eQogICAgICAgIC8vIHRoaXMuJGFiaWxpdHkudXBkYXRlKGluaXRpYWxBYmlsaXR5KQogICAgICAgIC8vIFJlZGlyZWN0IHRvIGxvZ2luIHBhZ2UKCiAgICAgICAgX3RoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgIG5hbWU6ICdhdXRoLWxvZ2luJwogICAgICAgIH0pOwogICAgICAgIC8qIGNvbnN0IHJldHJ5T3JpZ2luYWxSZXF1ZXN0ID0gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgICAgICB0aGlzLmFkZFN1YnNjcmliZXIoYWNjZXNzVG9rZW4gPT4gewogICAgICAgICAgICAvLyBNYWtlIHN1cmUgdG8gYXNzaWduIGFjY2Vzc1Rva2VuIGFjY29yZGluZyB0byB5b3VyIHJlc3BvbnNlLgogICAgICAgICAgICAvLyBDaGVjazogaHR0cHM6Ly9waXhpbnZlbnQudGlja3N5LmNvbS90aWNrZXQvMjQxMzg3MAogICAgICAgICAgICAvLyBDaGFuZ2UgQXV0aG9yaXphdGlvbiBoZWFkZXIKICAgICAgICAgICAgb3JpZ2luYWxSZXF1ZXN0LmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9IGAke3RoaXMuand0Q29uZmlnLnRva2VuVHlwZX0gJHthY2Nlc3NUb2tlbn1gCiAgICAgICAgICAgIHJlc29sdmUodGhpcy5heGlvc0lucyhvcmlnaW5hbFJlcXVlc3QpKQogICAgICAgICAgfSkKICAgICAgICB9KQogICAgICAgIHJldHVybiByZXRyeU9yaWdpbmFsUmVxdWVzdCAqLwoKICAgICAgfQoKICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgIH0pOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEp3dFNlcnZpY2UsIFt7CiAgICBrZXk6ICJvbkFjY2Vzc1Rva2VuRmV0Y2hlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb25BY2Nlc3NUb2tlbkZldGNoZWQoYWNjZXNzVG9rZW4pIHsKICAgICAgdGhpcy5zdWJzY3JpYmVycyA9IHRoaXMuc3Vic2NyaWJlcnMuZmlsdGVyKGZ1bmN0aW9uIChjYWxsYmFjaykgewogICAgICAgIHJldHVybiBjYWxsYmFjayhhY2Nlc3NUb2tlbik7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImFkZFN1YnNjcmliZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGFkZFN1YnNjcmliZXIoY2FsbGJhY2spIHsKICAgICAgdGhpcy5zdWJzY3JpYmVycy5wdXNoKGNhbGxiYWNrKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRUb2tlbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VG9rZW4oKSB7CiAgICAgIHJldHVybiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLmp3dENvbmZpZy5zdG9yYWdlVG9rZW5LZXlOYW1lKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRSZWZyZXNoVG9rZW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJlZnJlc2hUb2tlbigpIHsKICAgICAgcmV0dXJuIGxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuand0Q29uZmlnLnN0b3JhZ2VSZWZyZXNoVG9rZW5LZXlOYW1lKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRUb2tlbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0VG9rZW4odmFsdWUpIHsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5qd3RDb25maWcuc3RvcmFnZVRva2VuS2V5TmFtZSwgdmFsdWUpOwogICAgfQogIH0sIHsKICAgIGtleTogInNldFJlZnJlc2hUb2tlbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0UmVmcmVzaFRva2VuKHZhbHVlKSB7CiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuand0Q29uZmlnLnN0b3JhZ2VSZWZyZXNoVG9rZW5LZXlOYW1lLCB2YWx1ZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAibG9naW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGxvZ2luKCkgewogICAgICB2YXIgX3RoaXMkYXhpb3NJbnM7CgogICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldOwogICAgICB9CgogICAgICByZXR1cm4gKF90aGlzJGF4aW9zSW5zID0gdGhpcy5heGlvc0lucykucG9zdC5hcHBseShfdGhpcyRheGlvc0lucywgW3RoaXMuand0Q29uZmlnLmxvZ2luRW5kcG9pbnRdLmNvbmNhdChhcmdzKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAic2V0UGVybWlzc2lvbnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNldFBlcm1pc3Npb25zKCkgewogICAgICB2YXIgYWJpbGl0aWVzID0gW3sKICAgICAgICBhY3Rpb246ICdtYW5hZ2UnLAogICAgICAgIHN1YmplY3Q6ICdhbGwnCiAgICAgIH1dOwogICAgICB0aGlzLiRhYmlsaXR5LnVwZGF0ZShhYmlsaXRpZXMpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlZ2lzdGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWdpc3RlcigpIHsKICAgICAgdmFyIF90aGlzJGF4aW9zSW5zMjsKCiAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykgewogICAgICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTsKICAgICAgfQoKICAgICAgcmV0dXJuIChfdGhpcyRheGlvc0luczIgPSB0aGlzLmF4aW9zSW5zKS5wb3N0LmFwcGx5KF90aGlzJGF4aW9zSW5zMiwgW3RoaXMuand0Q29uZmlnLnJlZ2lzdGVyRW5kcG9pbnRdLmNvbmNhdChhcmdzKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAicmVmcmVzaFRva2VuIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWZyZXNoVG9rZW4oKSB7CiAgICAgIHJldHVybiB0aGlzLmF4aW9zSW5zLnBvc3QodGhpcy5qd3RDb25maWcucmVmcmVzaEVuZHBvaW50LCB7CiAgICAgICAgcmVmcmVzaFRva2VuOiB0aGlzLmdldFJlZnJlc2hUb2tlbigpCiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEp3dFNlcnZpY2U7Cn0oKTsKCmV4cG9ydCB7IEp3dFNlcnZpY2UgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/Users/imranrasheed/Desktop/new-splitur/frontend/src/@core/auth/jwt/jwtService.js"],"names":["Vue","initialAbility","router","axios","jwtDefaultConfig","JwtService","axiosIns","jwtOverrideConfig","jwtConfig","interceptors","request","use","config","accessToken","getToken","headers","Authorization","tokenType","error","Promise","reject","response","originalRequest","isAlreadyFetchingAccessToken","refreshToken","then","r","setToken","data","access_token","setRefreshToken","onAccessTokenFetched","status","localStorage","removeItem","storageTokenKeyName","storageRefreshTokenKeyName","$router","push","name","subscribers","filter","callback","getItem","value","setItem","args","post","loginEndpoint","abilities","action","subject","$ability","update","registerEndpoint","refreshEndpoint","getRefreshToken"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport { initialAbility } from '@/libs/acl/config'\nimport router from '@/router'\nimport axios from 'axios'\nimport jwtDefaultConfig from './jwtDefaultConfig'\n\nexport default class JwtService {\n  // Will be used by this service for making API calls\n  axiosIns = null\n\n  // jwtConfig <= Will be used by this service\n  jwtConfig = { ...jwtDefaultConfig }\n\n  // For Refreshing Token\n  isAlreadyFetchingAccessToken = false\n\n  // For Refreshing Token\n  subscribers = []\n\n  constructor(axiosIns, jwtOverrideConfig) {\n    this.axiosIns = axiosIns\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\n\n    // Request Interceptor\n    this.axiosIns.interceptors.request.use(\n      config => {\n        // Get token from localStorage\n        const accessToken = this.getToken()\n\n        // If token is present add it to request's Authorization Header\n        if (accessToken) {\n          // eslint-disable-next-line no-param-reassign\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n          // config.headers.Content-Type = `multipart/form-data`\n        }\n        return config\n      },\n      error => Promise.reject(error),\n    )\n\n    // Add request/response interceptor\n    this.axiosIns.interceptors.response.use(\n      response => response,\n      error => {\n        // const { config, response: { status } } = error\n        const { config, response } = error\n        const originalRequest = config\n\n        if (!this.isAlreadyFetchingAccessToken) {\n          this.isAlreadyFetchingAccessToken = true\n          this.refreshToken().then(r => {\n            this.isAlreadyFetchingAccessToken = false\n\n            // Update accessToken in localStorage\n            this.setToken(r.data.access_token)\n            this.setRefreshToken(r.data.access_token)\n\n            this.onAccessTokenFetched(r.data.access_token)\n          })\n        }\n\n        // if (status === 401) {\n        if (response && response.status === 401) {\n          localStorage.removeItem(this.jwtConfig.storageTokenKeyName)\n          localStorage.removeItem(this.jwtConfig.storageRefreshTokenKeyName)\n\n          // Remove userData from localStorage\n          localStorage.removeItem('userData')\n\n          // Reset ability\n          // this.$ability.update(initialAbility)\n\n          // Redirect to login page\n          this.$router.push({ name: 'auth-login' })\n\n          /* const retryOriginalRequest = new Promise(resolve => {\n            this.addSubscriber(accessToken => {\n              // Make sure to assign accessToken according to your response.\n              // Check: https://pixinvent.ticksy.com/ticket/2413870\n              // Change Authorization header\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n              resolve(this.axiosIns(originalRequest))\n            })\n          })\n          return retryOriginalRequest */\n        }\n        return Promise.reject(error)\n      },\n    )\n  }\n\n  onAccessTokenFetched(accessToken) {\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\n  }\n\n  addSubscriber(callback) {\n    this.subscribers.push(callback)\n  }\n\n  getToken() {\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\n  }\n\n  setToken(value) {\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\n  }\n\n  setRefreshToken(value) {\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\n  }\n\n  login(...args) {\n    return this.axiosIns.post(this.jwtConfig.loginEndpoint, ...args)\n  }\n\n  setPermissions() {\n    const abilities = [\n      {\n        action: 'manage',\n        subject: 'all',\n      },\n    ]\n    this.$ability.update(abilities)\n  }\n\n  register(...args) {\n    return this.axiosIns.post(this.jwtConfig.registerEndpoint, ...args)\n  }\n\n  refreshToken() {\n    return this.axiosIns.post(this.jwtConfig.refreshEndpoint, {\n      refreshToken: this.getRefreshToken(),\n    })\n  }\n}\n"]}]}
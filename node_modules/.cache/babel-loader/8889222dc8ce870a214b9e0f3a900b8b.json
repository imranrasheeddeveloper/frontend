{"remainingRequest":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/babel-loader/lib/index.js!/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Desktop/new-splitur/frontend/src/views/apps/email/Email.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/src/views/apps/email/Email.vue","mtime":1658909892000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/babel-loader/lib/index.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Desktop/new-splitur/frontend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Email.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6PA,OAAA,KAAA,MAAA,SAAA;AACA,SACA,GADA,EACA,WADA,EACA,QADA,EACA,KADA,CAEA;AAFA,OAGA,sBAHA;AAIA,SACA,UADA,EACA,WADA,EACA,kBADA,EACA,SADA,EACA,aADA,EAEA,aAFA,EAEA,MAFA,EAEA,WAFA,EAEA,UAFA,EAEA,OAFA,QAGA,eAHA;AAIA,OAAA,mBAAA,MAAA,uBAAA;AACA,SAAA,UAAA,EAAA,sBAAA,QAAA,oBAAA;AACA,SAAA,SAAA,QAAA,mBAAA;AACA,SAAA,qCAAA,QAAA,6BAAA;AACA,OAAA,gBAAA,MAAA,wBAAA;AACA,OAAA,SAAA,MAAA,iBAAA;AACA,OAAA,gBAAA,MAAA,oBAAA;AACA,OAAA,QAAA,MAAA,YAAA;AACA,OAAA,YAAA,MAAA,oBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,WAAA,EAAA,WAFA;AAGA,IAAA,kBAAA,EAAA,kBAHA;AAIA,IAAA,SAAA,EAAA,SAJA;AAKA,IAAA,aAAA,EAAA,aALA;AAMA,IAAA,aAAA,EAAA,aANA;AAOA,IAAA,MAAA,EAAA,MAPA;AAQA,IAAA,WAAA,EAAA,WARA;AASA,IAAA,UAAA,EAAA,UATA;AAUA,IAAA,OAAA,EAAA,OAVA;AAYA;AACA,IAAA,mBAAA,EAAA,mBAbA;AAeA;AACA,IAAA,gBAAA,EAAA,gBAhBA;AAiBA,IAAA,SAAA,EAAA,SAjBA;AAkBA,IAAA,YAAA,EAAA;AAlBA,GADA;AAqBA,EAAA,KArBA,mBAqBA;AACA,QAAA,2BAAA,GAAA,WAAA,CADA,CAGA;;AACA,QAAA,CAAA,KAAA,CAAA,SAAA,CAAA,2BAAA,CAAA,EAAA,KAAA,CAAA,cAAA,CAAA,2BAAA,EAAA,gBAAA,EAJA,CAMA;;AACA,IAAA,WAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,SAAA,CAAA,2BAAA,CAAA,EAAA,KAAA,CAAA,gBAAA,CAAA,2BAAA;AACA,KAFA,CAAA;;AAIA,qBAAA,SAAA,EAAA;AAAA,QAAA,KAAA,cAAA,KAAA;AAAA,QAAA,MAAA,cAAA,MAAA;;AACA,oBAAA,QAAA,EAAA;AAAA,QAAA,iBAAA,aAAA,iBAAA,CAZA,CAcA;;;AACA,QAAA,WAAA,GAAA,QAAA,CAAA;AAAA,aAAA,KAAA,CAAA,KAAA,CAAA,MAAA;AAAA,KAAA,CAAA;AACA,IAAA,KAAA,CAAA,WAAA,EAAA,YAAA;AACA;AACA,MAAA,WAAA;AACA,KAHA,CAAA,CAhBA,CAqBA;;AACA,QAAA,MAAA,GAAA,GAAA,CAAA,EAAA,CAAA;AACA,QAAA,UAAA,GAAA,GAAA,CAAA,EAAA,CAAA;AAEA,QAAA,wBAAA,GAAA;AACA,MAAA,kBAAA,EAAA;AADA,KAAA,CAzBA,CA6BA;;AACA,QAAA,UAAA,GAAA,QAAA,CAAA;AAAA,aAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA;AAAA,KAAA,CAAA;AACA,QAAA,WAAA,GAAA,GAAA,CAAA,UAAA,CAAA,KAAA,CAAA;AACA,IAAA,KAAA,CAAA,UAAA,EAAA,UAAA,GAAA,EAAA;AACA,MAAA,WAAA,CAAA,KAAA,GAAA,GAAA;AACA,KAFA,CAAA,CAhCA,CAmCA;;AACA,IAAA,KAAA,CAAA,WAAA,EAAA;AAAA,aAAA,WAAA,EAAA;AAAA,KAAA,CAAA;;AACA,QAAA,gBAAA,GAAA,SAAA,gBAAA,CAAA,GAAA,EAAA;AACA,UAAA,iBAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA;AAEA,UAAA,GAAA,EAAA,iBAAA,CAAA,CAAA,GAAA,GAAA,CAAA,KACA,OAAA,iBAAA,CAAA,CAAA;AAEA,MAAA,MAAA,CAAA,OAAA,CAAA;AAAA,QAAA,IAAA,EAAA,KAAA,CAAA,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACA,KAPA;;AASA,QAAA,WAAA,GAAA,SAAA,WAAA,GAAA;AACA,MAAA,KAAA,CAAA,QAAA,CAAA,uBAAA,EAAA;AACA,QAAA,CAAA,EAAA,WAAA,CAAA,KADA;AAEA,QAAA,MAAA,EAAA,MAAA,CAAA,YAAA,CAAA,MAAA,CAAA,MAAA,IAAA,OAFA;AAGA,QAAA,KAAA,EAAA,MAAA,CAAA,YAAA,CAAA,MAAA,CAAA;AAHA,OAAA,EAKA,IALA,CAKA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA,QAAA,UAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,UAAA;AACA,OARA;AASA,KAVA;;AAYA,IAAA,WAAA,GA1DA,CA4DA;AACA;AACA;;AACA,QAAA,cAAA,GAAA,GAAA,CAAA,EAAA,CAAA;;AACA,QAAA,kBAAA,GAAA,SAAA,kBAAA,CAAA,MAAA,EAAA;AACA,UAAA,SAAA,GAAA,cAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA;AAEA,UAAA,SAAA,KAAA,CAAA,CAAA,EAAA,cAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EAAA,KACA,cAAA,CAAA,KAAA,CAAA,MAAA,CAAA,SAAA,EAAA,CAAA;AACA,KALA;;AAMA,QAAA,sBAAA,GAAA,QAAA,CAAA;AAAA,aAAA,MAAA,CAAA,KAAA,CAAA,MAAA,IAAA,MAAA,CAAA,KAAA,CAAA,MAAA,KAAA,cAAA,CAAA,KAAA,CAAA,MAAA;AAAA,KAAA,CAAA;AACA,QAAA,qCAAA,GAAA,QAAA,CAAA;AAAA,aAAA,OAAA,CAAA,cAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,MAAA,CAAA,KAAA,CAAA,MAAA,KAAA,cAAA,CAAA,KAAA,CAAA,MAAA;AAAA,KAAA,CAAA;;AACA,QAAA,uBAAA,GAAA,SAAA,uBAAA,CAAA,GAAA,EAAA;AACA,MAAA,cAAA,CAAA,KAAA,GAAA,GAAA,GAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA;AAAA,OAAA,CAAA,GAAA,EAAA;AACA,KAFA,CAxEA,CA2EA;AAEA;AACA;AACA;;;AACA,QAAA,aAAA,GAAA,SAAA,aAAA,CAAA,KAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA,CAAA,uBAAA,EAAA;AACA,QAAA,QAAA,EAAA,CAAA,KAAA,CAAA,EAAA,CADA;AAEA,QAAA,YAAA,EAAA;AAAA,UAAA,SAAA,EAAA,CAAA,KAAA,CAAA;AAAA;AAFA,OAAA,EAGA,IAHA,CAGA,YAAA;AACA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,CAAA,KAAA,CAAA,SAAA;AACA,OANA;AAOA,KARA;;AAUA,QAAA,0BAAA,GAAA,SAAA,0BAAA,CAAA,MAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA,CAAA,uBAAA,EAAA;AACA,QAAA,QAAA,EAAA,cAAA,CAAA,KADA;AAEA,QAAA,YAAA,EAAA;AAAA,UAAA,MAAA,EAAA;AAAA;AAFA,OAAA,EAIA,IAJA,CAIA,YAAA;AAAA,QAAA,WAAA;AAAA,OAJA,EAKA,OALA,CAKA,YAAA;AAAA,QAAA,cAAA,CAAA,KAAA,GAAA,EAAA;AAAA,OALA;AAMA,KAPA;;AASA,QAAA,yBAAA,GAAA,SAAA,yBAAA,CAAA,KAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA,CAAA,6BAAA,EAAA;AACA,QAAA,QAAA,EAAA,cAAA,CAAA,KADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA,EAIA,IAJA,CAIA,YAAA;AAAA,QAAA,WAAA;AAAA,OAJA,EAKA,OALA,CAKA,YAAA;AAAA,QAAA,cAAA,CAAA,KAAA,GAAA,EAAA;AAAA,OALA;AAMA,KAPA;;AASA,QAAA,0BAAA,GAAA,SAAA,0BAAA,GAAA;AACA,MAAA,KAAA,CAAA,QAAA,CAAA,uBAAA,EAAA;AACA,QAAA,QAAA,EAAA,cAAA,CAAA,KADA;AAEA,QAAA,YAAA,EAAA;AAAA,UAAA,MAAA,EAAA;AAAA;AAFA,OAAA,EAIA,IAJA,CAIA,YAAA;AAAA,QAAA,WAAA;AAAA,OAJA,EAKA,OALA,CAKA,YAAA;AAAA,QAAA,cAAA,CAAA,KAAA,GAAA,EAAA;AAAA,OALA;AAMA,KAPA,CA5GA,CAqHA;AACA;AACA;;;AACA,QAAA,gBAAA,GAAA,GAAA,CAAA,KAAA,CAAA;AACA,QAAA,aAAA,GAAA,GAAA,CAAA,EAAA,CAAA;AACA,QAAA,gBAAA,GAAA,QAAA,CAAA,YAAA;AACA,UAAA,gBAAA,GAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,KAAA,aAAA,CAAA,KAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,aAAA;AACA,QAAA,YAAA,EAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,gBAAA,GAAA,CAAA,CAAA,CADA;AAEA,QAAA,gBAAA,EAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,gBAAA,GAAA,CAAA,CAAA;AAFA,OAAA;AAIA,KANA,CAAA;;AAOA,QAAA,mBAAA,GAAA,SAAA,mBAAA,CAAA,KAAA,EAAA;AACA;AACA,MAAA,KAAA,CAAA,QAAA,CAAA,uBAAA,EAAA;AACA,QAAA,QAAA,EAAA,CAAA,KAAA,CAAA,EAAA,CADA;AAEA,QAAA,YAAA,EAAA;AAAA,UAAA,MAAA,EAAA;AAAA;AAFA,OAAA,EAIA,IAJA,CAIA,YAAA;AACA;AACA,YAAA,CAAA,KAAA,CAAA,MAAA,KAAA,KAAA,CAAA,MAAA,KAAA,OAAA,IAAA,KAAA,CAAA,MAAA,KAAA,MAAA,CAAA,EAAA;AACA,UAAA,UAAA,CAAA,KAAA,CAAA,KAAA,CAAA,MAAA,KAAA,CAAA;AACA,SAJA,CAMA;;;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,IAAA;AACA,OAZA,EAaA,OAbA,CAaA,YAAA;AACA,QAAA,aAAA,CAAA,KAAA,GAAA,KAAA;AACA,QAAA,gBAAA,CAAA,KAAA,GAAA,IAAA;AACA,OAhBA;AAiBA,KAnBA;;AAoBA,QAAA,qBAAA,GAAA,SAAA,qBAAA,CAAA,MAAA,EAAA;AACA,MAAA,cAAA,CAAA,KAAA,GAAA,CAAA,aAAA,CAAA,KAAA,CAAA,EAAA,CAAA;AACA,MAAA,0BAAA,CAAA,MAAA,CAAA;AACA,MAAA,cAAA,CAAA,KAAA,GAAA,EAAA;AACA,MAAA,gBAAA,CAAA,KAAA,GAAA,KAAA;AACA,KALA;;AAMA,QAAA,oBAAA,GAAA,SAAA,oBAAA,CAAA,KAAA,EAAA;AACA,MAAA,cAAA,CAAA,KAAA,GAAA,CAAA,aAAA,CAAA,KAAA,CAAA,EAAA,CAAA;AACA,MAAA,yBAAA,CAAA,KAAA,CAAA,CAFA,CAIA;;AACA,UAAA,UAAA,GAAA,aAAA,CAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA;AACA,UAAA,UAAA,KAAA,CAAA,CAAA,EAAA,aAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,KACA,aAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,UAAA,EAAA,CAAA;AAEA,MAAA,cAAA,CAAA,KAAA,GAAA,EAAA;AACA,KAVA;;AAYA,QAAA,qBAAA,GAAA,SAAA,qBAAA,GAAA;AACA,MAAA,cAAA,CAAA,KAAA,GAAA,CAAA,aAAA,CAAA,KAAA,CAAA,EAAA,CAAA;AACA,MAAA,0BAAA;AAEA,MAAA,cAAA,CAAA,KAAA,GAAA,EAAA;AACA,MAAA,gBAAA,CAAA,KAAA,GAAA,KAAA;AACA,KANA;;AAQA,QAAA,iBAAA,GAAA,SAAA,iBAAA,CAAA,GAAA,EAAA;AACA,UAAA,gBAAA,GAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,KAAA,aAAA,CAAA,KAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,UAAA,aAAA,GAAA,GAAA,KAAA,UAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA;AACA,MAAA,aAAA,CAAA,KAAA,GAAA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA;AACA,KAJA,CA/KA,CAqLA;;;AACA,IAAA,KAAA,CAAA,WAAA,EAAA,YAAA;AACA,MAAA,gBAAA,CAAA,KAAA,GAAA,KAAA;AACA,KAFA,CAAA,CAtLA,CA0LA;AACA;AACA;;AACA,IAAA,KAAA,CAAA,CAAA,aAAA,EAAA,WAAA,CAAA,EAAA,YAAA;AACA,MAAA,cAAA,CAAA,KAAA,GAAA,EAAA;AACA,KAFA,CAAA,CA7LA,CAiMA;;AACA,QAAA,0BAAA,GAAA,GAAA,CAAA,KAAA,CAAA,CAlMA,CAoMA;;AACA,gCAAA,qCAAA,EAAA;AAAA,QAAA,sBAAA,yBAAA,sBAAA;;AAEA,WAAA;AACA;AACA,MAAA,wBAAA,EAAA,wBAFA;AAIA;AACA,MAAA,MAAA,EAAA,MALA;AAMA,MAAA,UAAA,EAAA,UANA;AAQA;AACA,MAAA,sBAAA,EAAA,sBATA;AAUA,MAAA,qCAAA,EAAA,qCAVA;AAWA,MAAA,cAAA,EAAA,cAXA;AAYA,MAAA,kBAAA,EAAA,kBAZA;AAaA,MAAA,uBAAA,EAAA,uBAbA;AAeA;AACA,MAAA,aAAA,EAAA,aAhBA;AAiBA,MAAA,0BAAA,EAAA,0BAjBA;AAkBA,MAAA,yBAAA,EAAA,yBAlBA;AAmBA,MAAA,0BAAA,EAAA,0BAnBA;AAqBA;AACA,MAAA,gBAAA,EAAA,gBAtBA;AAuBA,MAAA,aAAA,EAAA,aAvBA;AAwBA,MAAA,gBAAA,EAAA,gBAxBA;AAyBA,MAAA,mBAAA,EAAA,mBAzBA;AA0BA,MAAA,qBAAA,EAAA,qBA1BA;AA2BA,MAAA,oBAAA,EAAA,oBA3BA;AA4BA,MAAA,qBAAA,EAAA,qBA5BA;AA6BA,MAAA,iBAAA,EAAA,iBA7BA;AA+BA;AACA,MAAA,WAAA,EAAA,WAhCA;AAiCA,MAAA,gBAAA,EAAA,gBAjCA;AAmCA;AACA,MAAA,UAAA,EAAA,UApCA;AAqCA,MAAA,sBAAA,EAAA,sBArCA;AAuCA;AACA,MAAA,iBAAA,EAAA,iBAxCA;AA0CA;AACA,MAAA,0BAAA,EAAA,0BA3CA;AA6CA;AACA,MAAA,sBAAA,EAAA;AA9CA,KAAA;AAgDA;AA5QA,CAAA","sourcesContent":["<template>\n  <!-- Need to add height inherit because Vue 2 don't support multiple root ele -->\n  <div style=\"height: inherit\">\n    <div\n      class=\"body-content-overlay\"\n      :class=\"{'show': mqShallShowLeftSidebar}\"\n      @click=\"mqShallShowLeftSidebar = false\"\n    />\n\n    <!-- Email List -->\n    <div class=\"email-app-list\">\n\n      <!-- App Searchbar Header -->\n      <div class=\"app-fixed-search d-flex align-items-center\">\n\n        <!-- Toggler -->\n        <div class=\"sidebar-toggle d-block d-lg-none ml-1\">\n          <feather-icon\n            icon=\"MenuIcon\"\n            size=\"21\"\n            class=\"cursor-pointer\"\n            @click=\"mqShallShowLeftSidebar = true\"\n          />\n        </div>\n\n        <!-- Searchbar -->\n        <div class=\"d-flex align-content-center justify-content-between w-100\">\n          <b-input-group class=\"input-group-merge\">\n            <b-input-group-prepend is-text>\n              <feather-icon\n                icon=\"SearchIcon\"\n                class=\"text-muted\"\n              />\n            </b-input-group-prepend>\n            <b-form-input\n              :value=\"searchQuery\"\n              placeholder=\"Search email\"\n              @input=\"updateRouteQuery\"\n            />\n          </b-input-group>\n        </div>\n      </div>\n\n      <!-- App Action Bar -->\n      <div class=\"app-action\">\n        <div class=\"action-left\">\n          <b-form-checkbox\n            :checked=\"selectAllEmailCheckbox\"\n            :indeterminate=\"isSelectAllEmailCheckboxIndeterminate\"\n            @change=\"selectAllCheckboxUpdate\"\n          >\n            Select All\n          </b-form-checkbox>\n        </div>\n        <div\n          v-show=\"selectedEmails.length\"\n          class=\"align-items-center\"\n          :class=\"{'d-flex': selectedEmails.length}\"\n        >\n\n          <!-- Update Mail Folder Dropdown -->\n          <b-dropdown\n            variant=\"link\"\n            no-caret\n            toggle-class=\"p-0\"\n            right\n          >\n            <template #button-content>\n              <feather-icon\n                icon=\"FolderIcon\"\n                size=\"17\"\n                class=\"align-middle text-body\"\n              />\n            </template>\n\n            <b-dropdown-item @click=\"moveSelectedEmailsToFolder('draft')\">\n              <feather-icon icon=\"Edit2Icon\" />\n              <span class=\"align-middle ml-50\">Draft</span>\n            </b-dropdown-item>\n\n            <b-dropdown-item @click=\"moveSelectedEmailsToFolder('spam')\">\n              <feather-icon icon=\"InfoIcon\" />\n              <span class=\"align-middle ml-50\">Spam</span>\n            </b-dropdown-item>\n\n            <b-dropdown-item\n              v-show=\"$route.params.folder !== 'trash'\"\n              @click=\"moveSelectedEmailsToFolder('trash')\"\n            >\n              <feather-icon icon=\"TrashIcon\" />\n              <span class=\"align-middle ml-50\">Trash</span>\n            </b-dropdown-item>\n          </b-dropdown>\n\n          <!-- Update Mail Folder Dropdown -->\n          <b-dropdown\n            variant=\"link\"\n            no-caret\n            toggle-class=\"p-0\"\n            class=\"ml-1\"\n            right\n          >\n            <template #button-content>\n              <feather-icon\n                icon=\"TagIcon\"\n                size=\"17\"\n                class=\"align-middle text-body\"\n              />\n            </template>\n            <b-dropdown-item @click=\"updateSelectedEmailsLabel('personal')\">\n              <span class=\"mr-50 bullet bullet-success bullet-sm\" />\n              <span>Personal</span>\n            </b-dropdown-item>\n            <b-dropdown-item @click=\"updateSelectedEmailsLabel('company')\">\n              <span class=\"mr-50 bullet bullet-primary bullet-sm\" />\n              <span>Company</span>\n            </b-dropdown-item>\n            <b-dropdown-item @click=\"updateSelectedEmailsLabel('important')\">\n              <span class=\"mr-50 bullet bullet-warning bullet-sm\" />\n              <span>Important</span>\n            </b-dropdown-item>\n            <b-dropdown-item @click=\"updateSelectedEmailsLabel('private')\">\n              <span class=\"mr-50 bullet bullet-danger bullet-sm\" />\n              <span>Private</span>\n            </b-dropdown-item>\n          </b-dropdown>\n\n          <feather-icon\n            icon=\"MailIcon\"\n            size=\"17\"\n            class=\"cursor-pointer ml-1\"\n            @click=\"markSelectedEmailsAsUnread\"\n          />\n\n          <feather-icon\n            v-show=\"$route.params.folder !== 'trash'\"\n            icon=\"TrashIcon\"\n            size=\"17\"\n            class=\"cursor-pointer ml-1\"\n            @click=\"moveSelectedEmailsToFolder('trash')\"\n          />\n\n        </div>\n      </div>\n\n      <!-- Emails List -->\n      <vue-perfect-scrollbar\n        :settings=\"perfectScrollbarSettings\"\n        class=\"email-user-list scroll-area\"\n      >\n        <ul class=\"email-media-list\">\n          <b-media\n            v-for=\"email in emails\"\n            :key=\"email.id\"\n            tag=\"li\"\n            no-body\n            :class=\"{ 'mail-read': email.isRead }\"\n            @click=\"updateEmailViewData(email)\"\n          >\n\n            <b-media-aside class=\"media-left mr-50\">\n              <b-avatar\n                class=\"avatar\"\n                size=\"40\"\n                variant=\"primary\"\n                :src=\"email.from.avatar\"\n              />\n              <div class=\"user-action\">\n                <b-form-checkbox\n                  :checked=\"selectedEmails.includes(email.id)\"\n                  @change=\"toggleSelectedMail(email.id)\"\n                  @click.native.stop\n                />\n                <div class=\"email-favorite\">\n                  <feather-icon\n                    icon=\"StarIcon\"\n                    size=\"17\"\n                    :class=\"{ 'text-warning fill-current': email.isStarred }\"\n                    @click.stop=\"toggleStarred(email)\"\n                  />\n                </div>\n              </div>\n            </b-media-aside>\n\n            <b-media-body>\n              <div class=\"mail-details\">\n                <div class=\"mail-items\">\n                  <h5 class=\"mb-25\">\n                    {{ email.from.name }}\n                  </h5>\n                  <span class=\"text-truncate\">{{ email.subject }}</span>\n                </div>\n                <div class=\"mail-meta-item\">\n                  <feather-icon\n                    v-if=\"email.attachments.length\"\n                    icon=\"PaperclipIcon\"\n                  />\n                  <span\n                    v-for=\"label in email.labels\"\n                    :key=\"label\"\n                    class=\"mx-50 bullet bullet-sm\"\n                    :class=\"`bullet-${resolveLabelColor(label)}`\"\n                  />\n                  <span class=\"mail-date\">{{ formatDateToMonthShort(email.time, { hour: 'numeric', minute: 'numeric', }) }}</span>\n                </div>\n              </div>\n\n              <div class=\"mail-message\">\n                <p class=\"text-truncate mb-0\">\n                  {{ filterTags(email.message) }}\n                </p>\n              </div>\n            </b-media-body>\n          </b-media>\n        </ul>\n        <div\n          class=\"no-results\"\n          :class=\"{'show': !emails.length}\"\n        >\n          <h5>No Items Found</h5>\n        </div>\n      </vue-perfect-scrollbar>\n    </div>\n\n    <!-- Email View/Detail -->\n    <email-view\n      :class=\"{'show': showEmailDetails}\"\n      :email-view-data=\"emailViewData\"\n      :opended-email-meta=\"opendedEmailMeta\"\n      @close-email-view=\"showEmailDetails = false\"\n      @move-email-to-folder=\"moveOpenEmailToFolder\"\n      @toggle-email-starred=\"toggleStarred(emailViewData)\"\n      @update-email-label=\"updateOpenEmailLabel\"\n      @mark-email-unread=\"markOpenEmailAsUnread\"\n      @change-opened-email=\"changeOpenedEmail\"\n    />\n\n    <!-- Sidebar -->\n    <portal to=\"content-renderer-sidebar-left\">\n      <email-left-sidebar\n        :shall-show-email-compose-modal.sync=\"shallShowEmailComposeModal\"\n        :emails-meta=\"emailsMeta\"\n        :class=\"{'show': mqShallShowLeftSidebar}\"\n        @close-left-sidebar=\"mqShallShowLeftSidebar = false\"\n      />\n    </portal>\n\n    <!-- Compose Email Modal -->\n    <email-compose v-model=\"shallShowEmailComposeModal\" />\n  </div>\n</template>\n\n<script>\nimport store from '@/store'\nimport {\n  ref, onUnmounted, computed, watch,\n  // ref, watch, computed, onUnmounted,\n} from '@vue/composition-api'\nimport {\n  BFormInput, BInputGroup, BInputGroupPrepend, BDropdown, BDropdownItem,\n  BFormCheckbox, BMedia, BMediaAside, BMediaBody, BAvatar,\n} from 'bootstrap-vue'\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport { filterTags, formatDateToMonthShort } from '@core/utils/filter'\nimport { useRouter } from '@core/utils/utils'\nimport { useResponsiveAppLeftSidebarVisibility } from '@core/comp-functions/ui/app'\nimport EmailLeftSidebar from './EmailLeftSidebar.vue'\nimport EmailView from './EmailView.vue'\nimport emailStoreModule from './emailStoreModule'\nimport useEmail from './useEmail'\nimport EmailCompose from './EmailCompose.vue'\n\nexport default {\n  components: {\n    BFormInput,\n    BInputGroup,\n    BInputGroupPrepend,\n    BDropdown,\n    BDropdownItem,\n    BFormCheckbox,\n    BMedia,\n    BMediaAside,\n    BMediaBody,\n    BAvatar,\n\n    // 3rd Party\n    VuePerfectScrollbar,\n\n    // App SFC\n    EmailLeftSidebar,\n    EmailView,\n    EmailCompose,\n  },\n  setup() {\n    const EMAIL_APP_STORE_MODULE_NAME = 'app-email'\n\n    // Register module\n    if (!store.hasModule(EMAIL_APP_STORE_MODULE_NAME)) store.registerModule(EMAIL_APP_STORE_MODULE_NAME, emailStoreModule)\n\n    // UnRegister on leave\n    onUnmounted(() => {\n      if (store.hasModule(EMAIL_APP_STORE_MODULE_NAME)) store.unregisterModule(EMAIL_APP_STORE_MODULE_NAME)\n    })\n\n    const { route, router } = useRouter()\n    const { resolveLabelColor } = useEmail()\n\n    // Route Params\n    const routeParams = computed(() => route.value.params)\n    watch(routeParams, () => {\n      // eslint-disable-next-line no-use-before-define\n      fetchEmails()\n    })\n\n    // Emails & EmailsMeta\n    const emails = ref([])\n    const emailsMeta = ref({})\n\n    const perfectScrollbarSettings = {\n      maxScrollbarLength: 150,\n    }\n\n    // Search Query\n    const routeQuery = computed(() => route.value.query.q)\n    const searchQuery = ref(routeQuery.value)\n    watch(routeQuery, val => {\n      searchQuery.value = val\n    })\n    // eslint-disable-next-line no-use-before-define\n    watch(searchQuery, () => fetchEmails())\n    const updateRouteQuery = val => {\n      const currentRouteQuery = JSON.parse(JSON.stringify(route.value.query))\n\n      if (val) currentRouteQuery.q = val\n      else delete currentRouteQuery.q\n\n      router.replace({ name: route.name, query: currentRouteQuery })\n    }\n\n    const fetchEmails = () => {\n      store.dispatch('app-email/fetchEmails', {\n        q: searchQuery.value,\n        folder: router.currentRoute.params.folder || 'inbox',\n        label: router.currentRoute.params.label,\n      })\n        .then(response => {\n          emails.value = response.data.emails\n          emailsMeta.value = response.data.emailsMeta\n        })\n    }\n\n    fetchEmails()\n\n    // ------------------------------------------------\n    // Mail Selection\n    // ------------------------------------------------\n    const selectedEmails = ref([])\n    const toggleSelectedMail = mailId => {\n      const mailIndex = selectedEmails.value.indexOf(mailId)\n\n      if (mailIndex === -1) selectedEmails.value.push(mailId)\n      else selectedEmails.value.splice(mailIndex, 1)\n    }\n    const selectAllEmailCheckbox = computed(() => emails.value.length && (emails.value.length === selectedEmails.value.length))\n    const isSelectAllEmailCheckboxIndeterminate = computed(() => Boolean(selectedEmails.value.length) && emails.value.length !== selectedEmails.value.length)\n    const selectAllCheckboxUpdate = val => {\n      selectedEmails.value = val ? emails.value.map(mail => mail.id) : []\n    }\n    // ? Watcher to reset selectedEmails is somewhere below due to watch dependecy fullfilment\n\n    // ------------------------------------------------\n    // Mail Actions\n    // ------------------------------------------------\n    const toggleStarred = email => {\n      store.dispatch('app-email/updateEmail', {\n        emailIds: [email.id],\n        dataToUpdate: { isStarred: !email.isStarred },\n      }).then(() => {\n        // eslint-disable-next-line no-param-reassign\n        email.isStarred = !email.isStarred\n      })\n    }\n\n    const moveSelectedEmailsToFolder = folder => {\n      store.dispatch('app-email/updateEmail', {\n        emailIds: selectedEmails.value,\n        dataToUpdate: { folder },\n      })\n        .then(() => { fetchEmails() })\n        .finally(() => { selectedEmails.value = [] })\n    }\n\n    const updateSelectedEmailsLabel = label => {\n      store.dispatch('app-email/updateEmailLabels', {\n        emailIds: selectedEmails.value,\n        label,\n      })\n        .then(() => { fetchEmails() })\n        .finally(() => { selectedEmails.value = [] })\n    }\n\n    const markSelectedEmailsAsUnread = () => {\n      store.dispatch('app-email/updateEmail', {\n        emailIds: selectedEmails.value,\n        dataToUpdate: { isRead: false },\n      })\n        .then(() => { fetchEmails() })\n        .finally(() => { selectedEmails.value = [] })\n    }\n\n    // ------------------------------------------------\n    // Email Details\n    // ------------------------------------------------\n    const showEmailDetails = ref(false)\n    const emailViewData = ref({})\n    const opendedEmailMeta = computed(() => {\n      const openedEmailIndex = emails.value.findIndex(e => e.id === emailViewData.value.id)\n      return {\n        hasNextEmail: Boolean(emails.value[openedEmailIndex + 1]),\n        hasPreviousEmail: Boolean(emails.value[openedEmailIndex - 1]),\n      }\n    })\n    const updateEmailViewData = email => {\n      // Mark email is read\n      store.dispatch('app-email/updateEmail', {\n        emailIds: [email.id],\n        dataToUpdate: { isRead: true },\n      })\n        .then(() => {\n          // If opened email is unread then decrease badge count for email meta based on email folder\n          if (!email.isRead && (email.folder === 'inbox' || email.folder === 'spam')) {\n            emailsMeta.value[email.folder] -= 1\n          }\n\n          // eslint-disable-next-line no-param-reassign\n          email.isRead = true\n        })\n        .finally(() => {\n          emailViewData.value = email\n          showEmailDetails.value = true\n        })\n    }\n    const moveOpenEmailToFolder = folder => {\n      selectedEmails.value = [emailViewData.value.id]\n      moveSelectedEmailsToFolder(folder)\n      selectedEmails.value = []\n      showEmailDetails.value = false\n    }\n    const updateOpenEmailLabel = label => {\n      selectedEmails.value = [emailViewData.value.id]\n      updateSelectedEmailsLabel(label)\n\n      // Update label in opened email\n      const labelIndex = emailViewData.value.labels.indexOf(label)\n      if (labelIndex === -1) emailViewData.value.labels.push(label)\n      else emailViewData.value.labels.splice(labelIndex, 1)\n\n      selectedEmails.value = []\n    }\n\n    const markOpenEmailAsUnread = () => {\n      selectedEmails.value = [emailViewData.value.id]\n      markSelectedEmailsAsUnread()\n\n      selectedEmails.value = []\n      showEmailDetails.value = false\n    }\n\n    const changeOpenedEmail = dir => {\n      const openedEmailIndex = emails.value.findIndex(e => e.id === emailViewData.value.id)\n      const newEmailIndex = dir === 'previous' ? openedEmailIndex - 1 : openedEmailIndex + 1\n      emailViewData.value = emails.value[newEmailIndex]\n    }\n\n    // * If someone clicks on filter while viewing detail => Close the email detail view\n    watch(routeParams, () => {\n      showEmailDetails.value = false\n    })\n\n    // * Watcher to reset selectedEmails\n    // ? You can also use showEmailDetails (instead of `emailViewData`) but it will trigger execution twice in this case\n    // eslint-disable-next-line no-use-before-define\n    watch([emailViewData, routeParams], () => {\n      selectedEmails.value = []\n    })\n\n    // Compose\n    const shallShowEmailComposeModal = ref(false)\n\n    // Left Sidebar Responsiveness\n    const { mqShallShowLeftSidebar } = useResponsiveAppLeftSidebarVisibility()\n\n    return {\n      // UI\n      perfectScrollbarSettings,\n\n      // Emails & EmailsMeta\n      emails,\n      emailsMeta,\n\n      // Mail Selection\n      selectAllEmailCheckbox,\n      isSelectAllEmailCheckboxIndeterminate,\n      selectedEmails,\n      toggleSelectedMail,\n      selectAllCheckboxUpdate,\n\n      // Mail Actions\n      toggleStarred,\n      moveSelectedEmailsToFolder,\n      updateSelectedEmailsLabel,\n      markSelectedEmailsAsUnread,\n\n      // Email Details\n      showEmailDetails,\n      emailViewData,\n      opendedEmailMeta,\n      updateEmailViewData,\n      moveOpenEmailToFolder,\n      updateOpenEmailLabel,\n      markOpenEmailAsUnread,\n      changeOpenedEmail,\n\n      // Search Query\n      searchQuery,\n      updateRouteQuery,\n\n      // UI Filters\n      filterTags,\n      formatDateToMonthShort,\n\n      // useEmail\n      resolveLabelColor,\n\n      // Compose\n      shallShowEmailComposeModal,\n\n      // Left Sidebar Responsiveness\n      mqShallShowLeftSidebar,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n\n<style lang=\"scss\">\n@import \"~@core/scss/base/pages/app-email.scss\";\n</style>\n"],"sourceRoot":"src/views/apps/email"}]}